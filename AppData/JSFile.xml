<?xml version="1.0" encoding="utf-8" ?>
<JSFileList>
  <JSFile>
    <version>V1</version>
    <JSCode>
      <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }
      
      ContentScript={
	      txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	      Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	      WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerWithOrderClock:null,
	      timerCountPageEatAndBet:null,
	      StaticAllData:[],
	      AlertMsg:"请输入密码",
	      AlertPassToLater:"软件过期",
	      PassError:"密码错误",
	      StaticOldAllData:[],
	      StaticCountShowData:[],
	      StaticOldCountShowData:[],
	      HelloKitty:"81dc9bdb52d04dc20036dbd8313ed055",
	      HelloKittyTime:["fa29e79105dc1fd3e9a7b54d9ae0e2f1","519edc8db508d1c088f793f2c3647e6f"],
	      DaoQiTime:"YYYY-MM-DD",
	      PageConfig:{
		      MaxCount:90,
		      Discount:80,
		      LimitStart:700,
		      LimitEnd:700,
		      Percent:1
	      },
	      showCountWithWhere:function(){
		      ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		      ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		      if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			      ContentScript.showCountPageEatAndBet();
		      }			
	      },
	      setLimitAndDiscount:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      if("WP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(82);
			      $("#LimitStart1").val(240);
			      $("#LimitEnd1").val(60);
			
			      $("#Discount2").val(82);
			      $("#LimitStart2").val(240);
			      $("#LimitEnd2").val(60);
		      }
		      if("QP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(400);
			      $("#LimitEnd1").val(400);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(400);
			      $("#LimitEnd2").val(400);
		      }
		      if("Q" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(700);
			      $("#LimitEnd1").val(700);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(700);
			      $("#LimitEnd2").val(700);
		      }
	      },
	      showCountPageEatAndBet:function(){
			      var CheckType = [];
			      var withType = $("input[name='orderType']:checked").val();
			      var eat =0;
			      var bet =0;
			      var betIds =[];
			      var eatIds =[];
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      $(ContentScript.StaticCountShowData).each(function(i){
				      if(CheckType.contains($(this)[0].type)){
					      if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						      bet++;
						      betIds.push($(this)[0].id);
					      }
					      if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						      eat++;
						      eatIds.push($(this)[0].id);
					      }
				      }
			      })
			      $("#eatCount").text(eat);
			      $("#betCount").text(bet);
		
	      },
	      GetAllEatTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("E")>=0 && $(this)[0].type != 'DEmr'){
				      result.push($(this)[0]);
			      } 
		      });
		      return result;
	      },
	      GetAllBetTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("B")>=0 && $(this)[0].type != 'DBmr'){
				      result.push($(this)[0]);
			      }
		      });
		      return result;
	      },
	      GetAllDBmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DBmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPB";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QB";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      GetAllDEmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DEmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPE";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QE";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
          },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      MaxCountEvent:function(){
		      try{
			      ContentScript.PageConfig.MaxCount = $("#MaxCount").val();
		      }catch(e){
			      ContentScript.PageConfig.MaxCount = 90;
			      $("#MaxCount").val(90);
		      }
		
		      var type = $("input[name='DiscountType']:checked").val();
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.Discount = $("#Discount1").val();
			      }else{
				      ContentScript.PageConfig.Discount = $("#Discount2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.Discount = 80;
			      $("#Discount").val(80);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitStart = $("#LimitStart1").val();
			      }else{
				      ContentScript.PageConfig.LimitStart = $("#LimitStart2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitStart = 700;
			      $("#LimitStart").val(700);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd1").val();
			      }else{
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitEnd = 700;
			      $("#LimitEnd").val(700);
		      }
		
		      ContentScript.PageConfig.Percent = $("#Percent").val();
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      PrecentChangeEvent:function(){
		      $("#Percent").bind("change",function(){
			      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				      $("#btnBanlance").show();
			      }else{
				      $("#btnBanlance").hide();
			      }
			      ContentScript.PageConfig.Percent =$("#Percent").val();
		      });
	      },
	      allOnitEvent:function(){
		      //创建用户界面
						      ContentScript.CreateHtmlElement();
						      //绑定拖拽事件
						      ContentScript.HtmlAddDragEvent();
						      $("#daoqitime").text(ContentScript.DaoQiTime);
						      //限制投注数
						      ContentScript.MaxCountEvent();
						      //多倍控制
						      ContentScript.PrecentChangeEvent();
						      //统计吃票的计时器
						      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
						
						      $("#btnEnd").hide();
						      $("input[name='orderType']").bind("click",function(){
							      ContentScript.showCountPageEatAndBet();
							      ContentScript.setLimitAndDiscount();
						      });
						      //删单
						      $("#btnEatDelete").bind("click",function(){
							      $(this).hide();
							      var isExists = $(window.frames["frmTRANS"].document).find(".del2_ch");
							      if(isExists!=null && isExists!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del2_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      $("#btnBetDelete").bind("click",function(){
							      $(this).hide();
							      var isExistsDel = $(window.frames["frmTRANS"].document).find(".del_ch");
							      if(isExistsDel!=null && isExistsDel!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      //开始
						      $("#btnStart").bind("click",function(){
							      ContentScript.StaticOldAllData = [];
							      ContentScript.StaticAllData = [];
							      $("#btnStart").hide();
							      $("#btnEnd").show();
							      ContentScript.MaxCountEvent();
							      //创建定时吃票事件
							      ContentScript.timerWithOrderClock = self.setInterval(function(){
								      clearInterval(ContentScript.timerCountPageEatAndBet);
								      ContentScript.StaticOldAllData = ContentScript.StaticAllData
								      ContentScript.StaticAllData = ContentScript.GetAllHadTransactionData();
								      if(JSON.stringify(ContentScript.StaticOldAllData) != JSON.stringify(ContentScript.StaticAllData)){
									      ContentScript.StaticCountShowData = ContentScript.StaticAllData;
									      ContentScript.showCountPageEatAndBet();
									      ContentScript.needAjaxCount=ContentScript.getNeedWithOrderList();
									      ContentScript.withOrderOnInit(ContentScript.needAjaxCount,false);
								      }
							      },1000);
						      });
						
						      //结束
						      $("#btnEnd").bind("click",function(){
							      if(ContentScript.timerWithOrderClock!=null){
								      clearInterval(ContentScript.timerWithOrderClock);
							      }
							      ContentScript.timerWithOrderClock = null;
							      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							      $("#btnStart").show();
							      $("#btnEnd").hide();
						      });
						
						      //平仓
						      $("#btnBanlance").bind("click",function(){
							      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
								      if(ContentScript.timerWithOrderClock==null){
									      $(this).hide();
									      //先删除所有没有成交的数据
									      setTimeout(function(){
										      ContentScript.EatButtonEvent();
									      },0);
									      setTimeout(function(){
										      ContentScript.BetButtonEvent();
									      },0);
									      //然后100%的平仓数据交易
									      setTimeout(function(){
										      ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
									      },1000);
									      $(this).show();
								      }else{
									      alert("请先停止跟单！");
								      }
							      }else{
								      alert("平仓功能只能在倍率是1的情况下使用！");
							      }
						      });
				
	      },
	      getNeedWithOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllTransactionData();
			      var notCommitBetList=[];
			      var returnEatList=[];
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      it.x = parseInt(it.x)*parseInt($("#Percent").val())
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      returnEatList.push(it);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					      if($(this)[0].type =="DBmr"){
						      var it = $(this)[0];
						      var hadCount = false;
						      $(notCommitBetList).each(function(i){
							      if(it.id==$(this)[0].id){
								      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								      hadCount = true;
							      }
						      });
						      if(!hadCount){
							      notCommitBetList.push(allList[index]);
						      }
					      }
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      $(notCommitBetList).each(function(){
						      if(item.id==$(this)[0].id){
							      returnEatList[i].x = item.x-$(this)[0].x
						      }
					      });
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      });
			      }			
			
			      $(returnList).each(function(index){
				      $(this)[0].type = $(this)[0].type.replace("E","B");
			      });
			      return returnList;
		      }else{
			      return [];
		      }
	      },
	      getNeedPingCangOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllHadTransactionData();
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      var returnEatList=[];
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x);
									      returnEatList.push(allList[index]);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					
				      });
				
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      })
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				      return returnList;
			      }
		      }else{
			      return [];
		      }
	      },
	      ticketByFloat:function(item,type){
		      var result = 0;
		      if(type=="Q"){
			      result = item;
		      }else{
			      if(item==0){
				      result = 0;
			      }else{
				      if(item%5 !=0){
					      result = item + (5 - item%5);
				      }else{
					      result = item;
				      }
			      }
		      }
		      return result
	      },
	      withOrderOnInit:function(pushData,isBalance){
		        //真实的跟单操作
		        $(pushData).each(function(i){
			        var item = $(this)[0];
			        if(true){
				        var signInfo = ContentScript.GetSignInInfo();
				        if(['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'].contains(item.type)){
							        var postData = {};
							        postData.task = "betBox";
							        postData.combo =0;
							        var pcBeiShu = 1;
							        try{
								        pcBeiShu = parseInt($("#MulitBeiPingCang").val());
							        }catch(e){
								        pcBeiShu = 1;
							        }
							        postData.Tix =  ContentScript.ticketByFloat(parseInt(item.x)*pcBeiShu,"Q");
							        postData.Race = parseInt(item.matches);
							        var hourse1,hourse2;
							        //如果含有括号特殊处理一下
							        if(item.fb.indexOf("(")<0){
								        hourse1 = item.fb.split("-")[0];
								        hourse2 = item.fb.split("-")[1];
								        postData.fctype = 0;
							        }else{
								        hourse1 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
								        hourse2 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
								        postData.fctype = 1;
							        }
							        postData.Hs1 = hourse1;
							        postData.Hs2 = hourse2;
							        postData.Hs3 = "";
							        postData.Hs4 = "";
							        postData.Hs5 = "";
							        postData.Hs6 = "";
							        postData.Hs7 = "";
							        postData.Hs8 = "";
							        //postData.fctype = 0;
							        postData.Q = "Q";
							        if(item.type.indexOf("E")>=0){
								        postData.type = "EAT";
							        }else{
								        postData.type = "BET";
							        }
							
							        if(isBalance){
								        postData.amount = 100;
							        }else{
								        postData.amount = ContentScript.PageConfig.Discount;
							        }
							        postData.fclmt = ContentScript.PageConfig.LimitStart;
								
							        postData.overflow = "1";
							        //postData.amount = "100";
							        postData.race_type = signInfo.RaceType;
							        postData.race_date = signInfo.RaceDate;
							        postData.show = parseInt(item.matches);
							        postData.rd = Math.random();
							
							        console.log(postData);
							        ///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							        $.ajax({
							                      type: "get",
							                      url: ContentScript.urlX +"/forecast",
							                      data: postData,
							                      success: function (msg) {
							              	        console.log(msg);
							                      },
							                      error:function(e){
							              	        console.log(e);
							                      }
							        });
						        } 
				        if(['WPB','WPE','WB','WE','PB','PE'].contains($(this)[0].type)){
					
							        var postURL = "";
							        var postData = {};
							        postData.t = "frm";
							        postData.race = item.matches;
							        postData.horse = item.rdfb;
							        //var Proportion = parseInt(ContentScript.PageConfig.Percent);
							        var pcBeiShu = 1;
							        try{
								        pcBeiShu = parseInt($("#MulitBeiPingCang").val());
							        }catch(e){
								        pcBeiShu = 1;
							        }
							
							        postData.win = ContentScript.ticketByFloat(parseInt(item.fb)*pcBeiShu,"WP");
							        postData.place = ContentScript.ticketByFloat(parseInt(item.x)*pcBeiShu,"WP");
							
							        var postURL ="";
							        postURL ="/bets";
							
							        if(isBalance){
								        postData.amount = 99;
							        }else{
								        postData.amount = ContentScript.PageConfig.Discount;
							        }
							
							        postData.l_win = ContentScript.PageConfig.LimitStart;
							        postData.l_place = ContentScript.PageConfig.LimitEnd;
							        postData.race_type = signInfo.RaceType;
							        postData.race_date = signInfo.RaceDate;
							        postData.show = parseInt(item.matches);
							
							        if(parseInt(postData.win)>0 && parseInt(postData.place)>0){
								        postData.wptck=1;
							        }else{
								        postData.wptck=0;
							        } 
							        if(parseInt(postData.win)>0 && parseInt(postData.place)==0){
								        postData.wtck=1;
								        postData.l_place = "0";
							        }
							        if(parseInt(postData.win)==0 && parseInt(postData.place)>0){
								        postData.ptck=1;
								        postData.l_win = "0";
							        }
							
							        postData.post = "1";
							        postData.rd = Math.random();
							        console.log(postData);
							        $.ajax({
							                      type: "get",
							                      url: ContentScript.urlX + postURL,
							                      data: postData,
							                      success: function (msg) {
							              	        console.log(msg);
							                      },
							                      error:function(e){
							              	        console.log(e);
							                      }
							        });
					        }
			        }
		        });
	        },
	
	      GetAllTransactionData:function(){
		      var result = [];
		      //<td>6</td>
		      //<td class="RD F_B">FC</td>
		      //<td class="F_B ">4-5</td>
		      //<td id="FCE_6_4-5_100_700x">2</td>
		      //<td id="FCE_6_4-5_100_700y">100</td>
		      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		      //<td class="">吃</td>
		
		      //<td>2</td>
		      //<td class="F_B">4</td>
		      //<td id="PE_2_4_78_0/16_0x">0</td>
		      //<td id="PE_2_4_78_0/16_0y">5</td>
		      //<td id="PE_2_4_78_0/16_0z">78</td>
		      //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		      //<td class="">吃</td></tr>
		
		      $(ContentScript.txn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	      GetAllHadTransactionData:function(){
		      var result = [];
		      $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2];
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 330px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<table style="width:100%">';
              htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
              htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
              htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
              htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
              htmlList +='&nbsp;&nbsp;限注:<input id="MaxCount" type="number" step="1" style="width: 40px;" size="4" value="300" />';
              htmlList +='&nbsp;倍率:<select id="Percent"><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>20</option><option>50</option><option>100</option></select>';
              //htmlList +='&nbsp;倍率:<input id="Percent" type="number" step="0.1" value="1" style="width: 40px;" size="4">';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">'
              htmlList +='<input type= "radio" name="DiscountType"  value="F1" checked="checked" id="DiscountType1"/>'
              htmlList +='折头:<input id="Discount1" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">';
              htmlList +='<input type= "radio" name="DiscountType" value="F2" id="DiscountType2"/>';
              htmlList +='折头:<input id="Discount2" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              //htmlList +='比例:<input id="Percent" type="number" step="1" style="width: 40px;" size="4" value="1" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
              htmlList +='吃:<span id="eatCount" style="color:red"></span>&nbsp;赌:<span id="betCount" style="color:red" ></span>&nbsp;';
              htmlList +='</td><td style="text-align:right">';
              htmlList +='<input type="button" id="btnStart" value="开始" />';
              htmlList +='<input type="button" id="btnEnd" value="停止" />';
              htmlList +='<input type="button" id="btnBanlance" value="平仓" />';
              htmlList +='<input type="button" id="btnEatDelete" value="删吃单" />';
              htmlList +='<input type="button" id="btnBetDelete" value="删赌单" />';
              htmlList +='</td></tr>';
              htmlList +='</table>';
              htmlList += '</div>';
        
              $("body").append(htmlList);
	      },
	      EatButtonEvent:function(){
		      var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
		      if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
						      $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr").each(function(index){
								      var obj = $($(this).find(".del2_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
								      PostHelp.AjaxDeleteData(obj);
								      $($(this).find(".del2_ch").parent().parent()).hide();
						      });
						
		      }
	      },
	      BetButtonEvent:function(){
		      var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
		      if(greenList!=null && greenList!=undefined && greenList.length>0 ){
				      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
						      var obj = $($(this).find(".del_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
						      PostHelp.AjaxDeleteData(obj);
						      $($(this).find(".del_ch").parent().parent()).hide();
				      });
				
		      }
	      },
	      HtmlAddDragEvent:function(){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  $("#drag").click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt($("#drag").css("left"));
                      _y = e.pageY - parseInt($("#drag").css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          $("#drag").css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }

      PostHelp={
	      urlX: "http://"+window.location.host,
	      fcfrm1 :  $("#fcfrm1"),
	      fcfrm2 :  $("#fcfrm2"),
	      chkKBBet:function(f){
		      f = PostHelp.fcfrm1;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB1(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB3(f);
		      }
	      },
          chkKBEat:function(f){
		      f = PostHelp.fcfrm2;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB2(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB4(f);
		      }
	      },
          chkKB1:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		         && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val();
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined	
			      ){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
          chkKB2:function(f){
		      f=PostHelp.fcfrm2;
		      var combo=f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }	
			      if(hss=="")
			      {
				      hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
          chkKB3:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			      && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val()
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined
			      ){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }			
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
	      chkKB4:function(f){
		      f=PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }		
			      if(hss=="")
			      {
				      hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
	      chkActBet:function(f){
		      f = PostHelp.fcfrm1;
		      var combo;
		      var check = f.find("input[name='banker1'] :checked");
		      if(check) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );	
		      }
	      },
	      chkActEat:function(f){
		      f = PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );
		      }
	      },
	      postData:function(url){
		      var view1 = $("#view1");
		      if(view1) {
				      var y = $("#view1").val();
				      var postion = url  + "&show="+y+ "&rd=" + Math.random();
				      var postionArray = postion.split("?");
				      var postUrl = postionArray[0];
				      var dataUrl = postionArray[1];
				      var dataArray = dataUrl.split('&');
				      var postString ='{';
				      for(var i=0;i< dataArray.length;i++){
					      var itemArray = dataArray[i].split('=');
					      postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				      }
				      postString = postString.substr(0,postString.length-1);
				      postString+='}';
				      var dataJson = $.parseJSON(postString);
				      $.ajax(
				      {
		                   type: "GET",
		                   url: postUrl,		             
		                   data: dataJson,
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }
	     		      });
		      }
	      },
	      PostDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      document.getElementById('boxFcBET').style.display = "none";
		      document.getElementById('boxFcEAT').style.display = "none";
		      document.getElementById('boxPfcBET').style.display = "none";
		      document.getElementById('boxPfcEAT').style.display = "none";
		      PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	      },
	      AjaxDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      var y = 0;
		      try{
			      y = view1.options[view1.selectedIndex].value;
		      }catch(e){
			      y = $(".dd-selected-value").val();
		      }
		
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      $.ajax(
				      {
		                   type: "GET",
		                   url: PostHelp.urlX +"/transactions",		             
		                   data: {
		             	      "type":"del",
		             	      "bid":id,
		             	      "x":x,
		             	      "betType":type,
		             	      "race_date":date,
		             	      "race_type":race_type,
		             	      "q":"q",
						      "race":race,
						      "show":y,
						      "rd":Math.random()
		                   },
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }   
	   				 
	           });
	      }
      }

      var host =window.location.href;
      if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
    ]]>
    </JSCode>
  </JSFile>

  <JSFile>
    <version>V2</version>
    <JSCode>
      <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }

      ContentScript={
	      txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	      Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	      WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerWithOrderClock:null,
	      timerCountPageEatAndBet:null,
	      StaticAllData:[],
	      AlertMsg:"请输入密码",
	      AlertPassToLater:"软件过期",
	      PassError:"密码错误",
	      StaticOldAllData:[],
	      StaticCountShowData:[],
	      StaticOldCountShowData:[],
	      HelloKitty:"81dc9bdb52d04dc20036dbd8313ed055",
	      HelloKittyTime:["212112eece862ca4a3da112f217288fb","519edc8db508d1c088f793f2c3647e6f"],
	      DaoQiTime:"YYYY-MM-DD",
	      PageConfig:{
		      MaxCount:90,
		      Discount:80,
		      LimitStart:700,
		      LimitEnd:700,
		      Percent:1
	      },
	      showCountWithWhere:function(){
		      ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		      ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		      if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			      ContentScript.showCountPageEatAndBet();
		      }			
	      },
	      setLimitAndDiscount:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      if("WP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(82);
			      $("#LimitStart1").val(240);
			      $("#LimitEnd1").val(60);
			
			      $("#Discount2").val(82);
			      $("#LimitStart2").val(240);
			      $("#LimitEnd2").val(60);
		      }
		      if("QP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(400);
			      $("#LimitEnd1").val(400);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(400);
			      $("#LimitEnd2").val(400);
		      }
		      if("Q" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(700);
			      $("#LimitEnd1").val(700);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(700);
			      $("#LimitEnd2").val(700);
		      }
	      },
	      showCountPageEatAndBet:function(){
			      var CheckType = [];
			      var withType = $("input[name='orderType']:checked").val();
			      var eat =0;
			      var bet =0;
			      var betIds =[];
			      var eatIds =[];
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      $(ContentScript.StaticCountShowData).each(function(i){
				      if(CheckType.contains($(this)[0].type)){
					      if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						      bet++;
						      betIds.push($(this)[0].id);
					      }
					      if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						      eat++;
						      eatIds.push($(this)[0].id);
					      }
				      }
			      })
			      $("#eatCount").text(eat);
			      $("#betCount").text(bet);
		
	      },
	      GetAllEatTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("E")>=0 && $(this)[0].type != 'DEmr'){
				      result.push($(this)[0]);
			      } 
		      });
		      return result;
	      },
	      GetAllBetTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("B")>=0 && $(this)[0].type != 'DBmr'){
				      result.push($(this)[0]);
			      }
		      });
		      return result;
	      },
	      GetAllDBmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DBmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPB";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QB";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      GetAllDEmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DEmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPE";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QE";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
          },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      MaxCountEvent:function(){
		      try{
			      ContentScript.PageConfig.MaxCount = $("#MaxCount").val();
		      }catch(e){
			      ContentScript.PageConfig.MaxCount = 90;
			      $("#MaxCount").val(90);
		      }
		
		      var type = $("input[name='DiscountType']:checked").val();
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.Discount = $("#Discount1").val();
			      }else{
				      ContentScript.PageConfig.Discount = $("#Discount2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.Discount = 80;
			      $("#Discount").val(80);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitStart = $("#LimitStart1").val();
			      }else{
				      ContentScript.PageConfig.LimitStart = $("#LimitStart2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitStart = 700;
			      $("#LimitStart").val(700);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd1").val();
			      }else{
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitEnd = 700;
			      $("#LimitEnd").val(700);
		      }
		
		      ContentScript.PageConfig.Percent = $("#Percent").val();
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      PrecentChangeEvent:function(){
		      $("#Percent").bind("change",function(){
			      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				      $("#btnBanlance").show();
			      }else{
				      $("#btnBanlance").hide();
			      }
			      ContentScript.PageConfig.Percent =$("#Percent").val();
		      });
	      },
	      allOnitEvent:function(){
		      //创建用户界面
						      ContentScript.CreateHtmlElement();
						      //绑定拖拽事件
						      ContentScript.HtmlAddDragEvent();
						      $("#daoqitime").text(ContentScript.DaoQiTime);
						      //限制投注数
						      ContentScript.MaxCountEvent();
						      //多倍控制
						      ContentScript.PrecentChangeEvent();
						      //统计吃票的计时器
						      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
						
						      $("#btnEnd").hide();
						      $("input[name='orderType']").bind("click",function(){
							      ContentScript.showCountPageEatAndBet();
							      ContentScript.setLimitAndDiscount();
						      });
						      //删单
						      $("#btnEatDelete").bind("click",function(){
							      $(this).hide();
							      var isExists = $(window.frames["frmTRANS"].document).find(".del2_ch");
							      if(isExists!=null && isExists!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del2_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      $("#btnBetDelete").bind("click",function(){
							      $(this).hide();
							      var isExistsDel = $(window.frames["frmTRANS"].document).find(".del_ch");
							      if(isExistsDel!=null && isExistsDel!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      //开始
						      $("#btnStart").bind("click",function(){
							      ContentScript.StaticOldAllData = [];
							      ContentScript.StaticAllData = [];
							      $("#btnStart").hide();
							      $("#btnEnd").show();
							      ContentScript.MaxCountEvent();
							      //创建定时吃票事件
							      ContentScript.timerWithOrderClock = self.setInterval(function(){
								      clearInterval(ContentScript.timerCountPageEatAndBet);
								      ContentScript.StaticOldAllData = ContentScript.StaticAllData
								      ContentScript.StaticAllData = ContentScript.GetAllHadTransactionData();
								      if(JSON.stringify(ContentScript.StaticOldAllData) != JSON.stringify(ContentScript.StaticAllData)){
									      ContentScript.StaticCountShowData = ContentScript.StaticAllData;
									      ContentScript.showCountPageEatAndBet();
									      ContentScript.needAjaxCount=ContentScript.getNeedWithOrderList();
									      ContentScript.withOrderOnInit(ContentScript.needAjaxCount,false);
								      }
								
								      var showTitle = "";
								      if(window.location.href.indexOf("playerhk.jsp")>=0){
									      showTitle = $("#newsLineByLoc").text();
								      }
								      if(window.location.href.indexOf("Q.jsp")>=0){
									      showTitle = $("#news1st").text();
								      }
								
								      if(((showTitle.indexOf("进闸完毕")>=0 
								         && showTitle.indexOf("准备开跑")>=0)||(showTitle.indexOf("剩 1")>=0))
								         && $("input[id='AutoPingCang']:checked").val() == "1"
								      ){
									      var ret = 0;
									      try{
										      var regexp = /剩 [0-9]+/
										      var firststring = regexp.exec(showTitle);
										      var match = firststring[0].replace("剩","").replace(" ","")
										      ret= parseInt(match);
									      }catch(e){
										      ret = 1	
									      }
									      if(ret==1){
										        //先删除所有没有成交的数据
										        setTimeout(function(){
											        ContentScript.EatButtonEvent();
										        },0);
										        setTimeout(function(){
											        ContentScript.BetButtonEvent();
										        },100);
										        //然后100%的平仓数据交易
										        setTimeout(function(){
											        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										        },1000);
										
										        //先删除所有没有成交的数据
										        setTimeout(function(){
											        ContentScript.EatButtonEvent();
										        },2000);
										        setTimeout(function(){
											        ContentScript.BetButtonEvent();
										        },2100);
										        //然后100%的平仓数据交易
										        setTimeout(function(){
											        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										        },3000);
										
										        //先删除所有没有成交的数据
										        setTimeout(function(){
											        ContentScript.EatButtonEvent();
										        },3100);
										        setTimeout(function(){
											        ContentScript.BetButtonEvent();
										        },3200);
										        //然后100%的平仓数据交易
										        setTimeout(function(){
											        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										        },4000);
										
										        //平仓后结束
										        if(ContentScript.timerWithOrderClock!=null){
											        clearInterval(ContentScript.timerWithOrderClock);
										        }
										        ContentScript.timerWithOrderClock = null;
										        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
										        $("#btnStart").show();
										        $("#btnEnd").hide();
                          
                          if(ContentScript.timerWithOrderClock!=null){
								            clearInterval(ContentScript.timerWithOrderClock);
							            }
							            ContentScript.timerWithOrderClock = null;
							            ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							            $("#btnStart").show();
							            $("#btnEnd").hide();
									      }
								      }
								      if((showTitle.indexOf("剩 2")>=0 ||  showTitle.indexOf("剩 3")>=0)
								         && $("input[id='AutoPingCang']:checked").val() == "1"
								      ){
									      //先删除所有没有成交的数据
									      setTimeout(function(){
										      ContentScript.EatButtonEvent();
									      },0);
								      }
							      },1000);
						      });
						
						      //结束
						      $("#btnEnd").bind("click",function(){
							      if(ContentScript.timerWithOrderClock!=null){
								      clearInterval(ContentScript.timerWithOrderClock);
							      }
							      ContentScript.timerWithOrderClock = null;
							      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							      $("#btnStart").show();
							      $("#btnEnd").hide();
						      });
						
						      //平仓
						      $("#btnBanlance").bind("click",function(){
							      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
								      if(ContentScript.timerWithOrderClock==null){
									      $(this).hide();
									      //先删除所有没有成交的数据
									      setTimeout(function(){
										      ContentScript.EatButtonEvent();
									      },0);
									      setTimeout(function(){
										      ContentScript.BetButtonEvent();
									      },0);
									      //然后100%的平仓数据交易
									      setTimeout(function(){
										      ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
									      },1000);
									      $(this).show();
								      }else{
									      alert("请先停止跟单！");
								      }
							      }else{
								      alert("平仓功能只能在倍率是1的情况下使用！");
							      }
						      });
				
	      },
	      getNeedWithOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllTransactionData();
			      var notCommitBetList=[];
			      var returnEatList=[];
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      it.x = parseInt(it.x)*parseInt($("#Percent").val())
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      returnEatList.push(it);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					      if($(this)[0].type =="DBmr"){
						      var it = $(this)[0];
						      var hadCount = false;
						      $(notCommitBetList).each(function(i){
							      if(it.id==$(this)[0].id){
								      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								      hadCount = true;
							      }
						      });
						      if(!hadCount){
							      notCommitBetList.push(allList[index]);
						      }
					      }
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      $(notCommitBetList).each(function(){
						      if(item.id==$(this)[0].id){
							      returnEatList[i].x = item.x-$(this)[0].x
						      }
					      });
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      });
			      }			
			
			      $(returnList).each(function(index){
				      $(this)[0].type = $(this)[0].type.replace("E","B");
			      });
			      return returnList;
		      }else{
			      return [];
		      }
	      },
	      getNeedPingCangOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllHadTransactionData();
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      var returnEatList=[];
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x);
									      returnEatList.push(allList[index]);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					
				      });
				
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      })
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				      return returnList;
			      }
		      }else{
			      return [];
		      }
	      },
	      ticketByFloat:function(item,type){
		      var result = 0;
		      if(type=="Q"){
			      result = item;
		      }else{
			      if(item==0){
				      result = 0;
			      }else{
				      if(item%5 !=0){
					      result = item + (5 - item%5);
				      }else{
					      result = item;
				      }
			      }
		      }
		      return result
	      },
	      withOrderOnInit:function(pushData,isBalance){
		      //真实的跟单操作
		      $(pushData).each(function(i){
			      var item = $(this)[0];
			      if(true){
				      var signInfo = ContentScript.GetSignInInfo();
				      if(['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'].contains(item.type)){
							      var postData = {};
							      postData.task = "betBox";
							      postData.combo =0;
							      //<td>6</td>
							      //<td class="RD F_B">FC</td>
							      //<td class="F_B ">4-5</td>
							      //<td id="FCE_6_4-5_100_700x">2</td>
							      //<td id="FCE_6_4-5_100_700y">100</td>
							      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
							      //<td class="">吃</td>
							
							      postData.Tix =  ContentScript.ticketByFloat(parseInt(item.x),"Q");
							      postData.Race = parseInt(item.matches);
							      var hourse1,hourse2;
							      //如果含有括号特殊处理一下
							      if(item.fb.indexOf("(")<0){
								      hourse1 = item.fb.split("-")[0];
								      hourse2 = item.fb.split("-")[1];
								      postData.fctype = 0;
							      }else{
								      hourse1 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
								      hourse2 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
								      postData.fctype = 1;
							      }
							      postData.Hs1 = hourse1;
							      postData.Hs2 = hourse2;
							      postData.Hs3 = "";
							      postData.Hs4 = "";
							      postData.Hs5 = "";
							      postData.Hs6 = "";
							      postData.Hs7 = "";
							      postData.Hs8 = "";
							      //postData.fctype = 0;
							      postData.Q = "Q";
							      if(item.type.indexOf("E")>=0){
								      postData.type = "EAT";
							      }else{
								      postData.type = "BET";
							      }
							
							      if(isBalance){
								      postData.amount = 100;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							      postData.fclmt = ContentScript.PageConfig.LimitStart;
								
							      postData.overflow = "1";
							      //postData.amount = "100";
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							      postData.rd = Math.random();
							
							      console.log(postData);
							      ///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX +"/forecast",
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
						      } 
				      if(['WPB','WPE','WB','WE','PB','PE'].contains($(this)[0].type)){
					
							      var postURL = "";
							      var postData = {};
							      postData.t = "frm";
							      postData.race = item.matches;
							      postData.horse = item.rdfb;
							      //var Proportion = parseInt(ContentScript.PageConfig.Percent);
							      postData.win = ContentScript.ticketByFloat(parseInt(item.fb),"WP");
							      postData.place = ContentScript.ticketByFloat(parseInt(item.x),"WP");
							
							      var postURL ="";
							      postURL ="/bets";
							      //if(item.type.indexOf("E")>=0){
							      //postData.type = "eat";
							      //postURL ="/bets";
							      //}else{
							      //postData.type = "bet";
							      //postURL = "/bookings";
							      //}
							
							      if(isBalance){
								      postData.amount = 99;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							
							      //postData.limit = ContentScript.PageConfig.LimitStart+"/"+ ContentScript.PageConfig.LimitEnd;
							      postData.l_win = ContentScript.PageConfig.LimitStart;
							      postData.l_place = ContentScript.PageConfig.LimitEnd;
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							
							      if(parseInt(postData.win)>0 && parseInt(postData.place)>0){
								      postData.wptck=1;
							      }else{
								      postData.wptck=0;
							      } 
							      if(parseInt(postData.win)>0 && parseInt(postData.place)==0){
								      postData.wtck=1;
								      postData.l_place = "0";
							      }
							      if(parseInt(postData.win)==0 && parseInt(postData.place)>0){
								      postData.ptck=1;
								      postData.l_win = "0";
							      }
							
							      postData.post = "1";
							      postData.rd = Math.random();
							      console.log(postData);
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX + postURL,
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
					      }
			      }
		      });
	      },
	      GetAllTransactionData:function(){
		      var result = [];
		      //<td>6</td>
		      //<td class="RD F_B">FC</td>
		      //<td class="F_B ">4-5</td>
		      //<td id="FCE_6_4-5_100_700x">2</td>
		      //<td id="FCE_6_4-5_100_700y">100</td>
		      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		      //<td class="">吃</td>
		
		      //<td>2</td>
		      //<td class="F_B">4</td>
		      //<td id="PE_2_4_78_0/16_0x">0</td>
		      //<td id="PE_2_4_78_0/16_0y">5</td>
		      //<td id="PE_2_4_78_0/16_0z">78</td>
		      //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		      //<td class="">吃</td></tr>
		
		      $(ContentScript.txn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	      GetAllHadTransactionData:function(){
		      var result = [];
		      $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2];
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 330px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<table style="width:100%">';
              htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
              htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
              htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
              htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
              htmlList +='&nbsp;&nbsp;限注:<input id="MaxCount" type="number" step="1" style="width: 40px;" size="4" value="300" />';
              htmlList +='&nbsp;倍率:<select id="Percent"><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>20</option><option>50</option><option>100</option></select>';
              //htmlList +='&nbsp;倍率:<input id="Percent" type="number" step="0.1" value="1" style="width: 40px;" size="4">';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">'
              htmlList +='<input type= "radio" name="DiscountType"  value="F1" checked="checked" id="DiscountType1"/>'
              htmlList +='折头:<input id="Discount1" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">';
              htmlList +='<input type= "radio" name="DiscountType" value="F2" id="DiscountType2"/>';
              htmlList +='折头:<input id="Discount2" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;<input id="AutoPingCang" type="checkbox" value="1" />自动平仓'
              //htmlList +='比例:<input id="Percent" type="number" step="1" style="width: 40px;" size="4" value="1" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
              htmlList +='吃:<span id="eatCount" style="color:red"></span>&nbsp;赌:<span id="betCount" style="color:red" ></span>&nbsp;';
              htmlList +='</td><td style="text-align:right">';
              htmlList +='<input type="button" id="btnStart" value="开始" />';
              htmlList +='<input type="button" id="btnEnd" value="停止" />';
              htmlList +='<input type="button" id="btnBanlance" value="平仓" />';
              htmlList +='<input type="button" id="btnEatDelete" value="删吃单" />';
              htmlList +='<input type="button" id="btnBetDelete" value="删赌单" />';
              htmlList +='</td></tr>';
              htmlList +='</table>';
              htmlList += '</div>';
        
              $("body").append(htmlList);
	      },
	      EatButtonEvent:function(){
		      var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
		      if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
						      $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr").each(function(index){
								      var obj = $($(this).find(".del2_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
								      PostHelp.AjaxDeleteData(obj);
								      $($(this).find(".del2_ch").parent().parent()).hide();
						      });
						
		      }
	      },
	      BetButtonEvent:function(){
		      var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
		      if(greenList!=null && greenList!=undefined && greenList.length>0 ){
				      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
						      var obj = $($(this).find(".del_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
						      PostHelp.AjaxDeleteData(obj);
						      $($(this).find(".del_ch").parent().parent()).hide();
				      });
				
		      }
	      },
	      HtmlAddDragEvent:function(){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  $("#drag").click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt($("#drag").css("left"));
                      _y = e.pageY - parseInt($("#drag").css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          $("#drag").css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }

      PostHelp={
	      urlX: "http://"+window.location.host,
	      fcfrm1 :  $("#fcfrm1"),
	      fcfrm2 :  $("#fcfrm2"),
	      chkKBBet:function(f){
		      f = PostHelp.fcfrm1;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB1(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB3(f);
		      }
	      },
          chkKBEat:function(f){
		      f = PostHelp.fcfrm2;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB2(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB4(f);
		      }
	      },
          chkKB1:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		         && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val();
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined	
			      ){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
          chkKB2:function(f){
		      f=PostHelp.fcfrm2;
		      var combo=f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }	
			      if(hss=="")
			      {
				      hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
          chkKB3:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			      && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val()
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined
			      ){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }			
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
	      chkKB4:function(f){
		      f=PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }		
			      if(hss=="")
			      {
				      hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
	      chkActBet:function(f){
		      f = PostHelp.fcfrm1;
		      var combo;
		      var check = f.find("input[name='banker1'] :checked");
		      if(check) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );	
		      }
	      },
	      chkActEat:function(f){
		      f = PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );
		      }
	      },
	      postData:function(url){
		      var view1 = $("#view1");
		      if(view1) {
				      var y = $("#view1").val();
				      var postion = url  + "&show="+y+ "&rd=" + Math.random();
				      var postionArray = postion.split("?");
				      var postUrl = postionArray[0];
				      var dataUrl = postionArray[1];
				      var dataArray = dataUrl.split('&');
				      var postString ='{';
				      for(var i=0;i< dataArray.length;i++){
					      var itemArray = dataArray[i].split('=');
					      postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				      }
				      postString = postString.substr(0,postString.length-1);
				      postString+='}';
				      var dataJson = $.parseJSON(postString);
				      $.ajax(
				      {
		                   type: "GET",
		                   url: postUrl,		             
		                   data: dataJson,
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }
	     		      });
		      }
	      },
	      PostDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      document.getElementById('boxFcBET').style.display = "none";
		      document.getElementById('boxFcEAT').style.display = "none";
		      document.getElementById('boxPfcBET').style.display = "none";
		      document.getElementById('boxPfcEAT').style.display = "none";
		      PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	      },
	      AjaxDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      var y = 0;
		      try{
			      y = view1.options[view1.selectedIndex].value;
		      }catch(e){
			      y = $(".dd-selected-value").val();
		      }
		
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      $.ajax(
				      {
		                   type: "GET",
		                   url: PostHelp.urlX +"/transactions",		             
		                   data: {
		             	      "type":"del",
		             	      "bid":id,
		             	      "x":x,
		             	      "betType":type,
		             	      "race_date":date,
		             	      "race_type":race_type,
		             	      "q":"q",
						      "race":race,
						      "show":y,
						      "rd":Math.random()
		                   },
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }   
	   				 
	           });
	      }
      }

      var host =window.location.href;
      if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
      ]]>
    </JSCode>
  </JSFile>

  <JSFile>
    <version>V3</version>
    <JSCode>
      <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }

      ContentScript={
	      txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	      Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	      WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerWithOrderClock:null,
	      timerCountPageEatAndBet:null,
	      StaticAllData:[],
	      AlertMsg:"请输入密码",
	      AlertPassToLater:"软件过期",
	      PassError:"密码错误",
        SinglePath:false,
	      StaticOldAllData:[],
	      StaticCountShowData:[],
	      StaticOldCountShowData:[],
	      HelloKitty:"81dc9bdb52d04dc20036dbd8313ed055",
	      HelloKittyTime:["212112eece862ca4a3da112f217288fb","519edc8db508d1c088f793f2c3647e6f"],
	      DaoQiTime:"YYYY-MM-DD",
	      PageConfig:{
		      MaxCount:90,
		      Discount:80,
		      LimitStart:700,
		      LimitEnd:700,
		      Percent:1
	      },
	      showCountWithWhere:function(){
		      ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		      ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		      if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			      ContentScript.showCountPageEatAndBet();
		      }			
	      },
	      setLimitAndDiscount:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      if("WP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(82);
			      $("#LimitStart1").val(240);
			      $("#LimitEnd1").val(60);
			
			      $("#Discount2").val(82);
			      $("#LimitStart2").val(240);
			      $("#LimitEnd2").val(60);
		      }
		      if("QP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(400);
			      $("#LimitEnd1").val(400);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(400);
			      $("#LimitEnd2").val(400);
		      }
		      if("Q" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(700);
			      $("#LimitEnd1").val(700);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(700);
			      $("#LimitEnd2").val(700);
		      }
	      },
	      showCountPageEatAndBet:function(){
			      var CheckType = [];
			      var withType = $("input[name='orderType']:checked").val();
			      var eat =0;
			      var bet =0;
			      var betIds =[];
			      var eatIds =[];
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      $(ContentScript.StaticCountShowData).each(function(i){
				      if(CheckType.contains($(this)[0].type)){
					      if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						      bet++;
						      betIds.push($(this)[0].id);
					      }
					      if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						      eat++;
						      eatIds.push($(this)[0].id);
					      }
				      }
			      })
			      $("#eatCount").text(eat);
			      $("#betCount").text(bet);
		
	      },
	      GetAllEatTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("E")>=0 && $(this)[0].type != 'DEmr'){
				      result.push($(this)[0]);
			      } 
		      });
		      return result;
	      },
	      GetAllBetTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("B")>=0 && $(this)[0].type != 'DBmr'){
				      result.push($(this)[0]);
			      }
		      });
		      return result;
	      },
	      GetAllDBmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DBmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPB";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QB";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      GetAllDEmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DEmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPE";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QE";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
          },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      MaxCountEvent:function(){
		      try{
			      ContentScript.PageConfig.MaxCount = $("#MaxCount").val();
		      }catch(e){
			      ContentScript.PageConfig.MaxCount = 90;
			      $("#MaxCount").val(90);
		      }
		
		      var type = $("input[name='DiscountType']:checked").val();
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.Discount = $("#Discount1").val();
			      }else{
				      ContentScript.PageConfig.Discount = $("#Discount2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.Discount = 80;
			      $("#Discount").val(80);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitStart = $("#LimitStart1").val();
			      }else{
				      ContentScript.PageConfig.LimitStart = $("#LimitStart2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitStart = 700;
			      $("#LimitStart").val(700);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd1").val();
			      }else{
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitEnd = 700;
			      $("#LimitEnd").val(700);
		      }
		
		      ContentScript.PageConfig.Percent = $("#Percent").val();
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      PrecentChangeEvent:function(){
		      $("#Percent").bind("change",function(){
			      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				      $("#btnBanlance").show();
			      }else{
				      $("#btnBanlance").hide();
			      }
			      ContentScript.PageConfig.Percent =$("#Percent").val();
		      });
	      },
	      allOnitEvent:function(){
		      //创建用户界面
						      ContentScript.CreateHtmlElement();
						      //绑定拖拽事件
						      ContentScript.HtmlAddDragEvent();
						      $("#daoqitime").text(ContentScript.DaoQiTime);
						      //限制投注数
						      ContentScript.MaxCountEvent();
						      //多倍控制
						      ContentScript.PrecentChangeEvent();
						      //统计吃票的计时器
						      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
						
						      $("#btnEnd").hide();
						      $("input[name='orderType']").bind("click",function(){
							      ContentScript.showCountPageEatAndBet();
							      ContentScript.setLimitAndDiscount();
						      });
						      //删单
						      $("#btnEatDelete").bind("click",function(){
							      $(this).hide();
							      var isExists = $(window.frames["frmTRANS"].document).find(".del2_ch");
							      if(isExists!=null && isExists!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del2_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      $("#btnBetDelete").bind("click",function(){
							      $(this).hide();
							      var isExistsDel = $(window.frames["frmTRANS"].document).find(".del_ch");
							      if(isExistsDel!=null && isExistsDel!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      //开始
						      $("#btnStart").bind("click",function(){
                    ContentScript.SinglePath = false;
							      ContentScript.StaticOldAllData = [];
							      ContentScript.StaticAllData = [];
							      $("#btnStart").hide();
							      $("#btnEnd").show();
							      ContentScript.MaxCountEvent();
							      //创建定时吃票事件
							      ContentScript.timerWithOrderClock = self.setInterval(function(){
								      clearInterval(ContentScript.timerCountPageEatAndBet);
								      ContentScript.StaticOldAllData = ContentScript.StaticAllData
								      ContentScript.StaticAllData = ContentScript.GetAllHadTransactionData();
								      if(JSON.stringify(ContentScript.StaticOldAllData) != JSON.stringify(ContentScript.StaticAllData)){
									      if(ContentScript.SinglePath){
									 	      //nothing
									      }else{
										      ContentScript.StaticCountShowData = ContentScript.StaticAllData;
										      ContentScript.showCountPageEatAndBet();
										      ContentScript.needAjaxCount=ContentScript.getNeedWithOrderList();
										      ContentScript.withOrderOnInit(ContentScript.needAjaxCount,false);
									      }
									
								      }
								
								      var showTitle = "";
								      if(window.location.href.indexOf("playerhk.jsp")>=0){
									      showTitle = $("#newsLineByLoc").text();
								      }
								      if(window.location.href.indexOf("Q.jsp")>=0){
									      showTitle = $("#news1st").text();
								      }
								
								      if(((showTitle.indexOf("进闸完毕")>=0 
								         && showTitle.indexOf("准备开跑")>=0)||(showTitle.indexOf("剩 1")>=0))
								         && $("input[id='AutoPingCang']:checked").val() == "1"
								      ){
									      var ret = 0;
									      try{
										      var regexp = /剩 [0-9]+/
										      var firststring = regexp.exec(showTitle);
										      var match = firststring[0].replace("剩","").replace(" ","")
										      ret= parseInt(match);
									      }catch(e){
										      ret = 1	
									      }
									      if(ret==1){
										      ContentScript.SinglePath = true;
										      //先删除所有没有成交的数据
										      setTimeout(function(){
											      ContentScript.EatButtonEvent();
										      },0);
										      setTimeout(function(){
											      ContentScript.BetButtonEvent();
										      },100);
										      //然后100%的平仓数据交易
										      setTimeout(function(){
											      ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										      },1000);
										
										      //先删除所有没有成交的数据
										      setTimeout(function(){
											      ContentScript.EatButtonEvent();
										      },2000);
										      setTimeout(function(){
											      ContentScript.BetButtonEvent();
										      },2100);
										      //然后100%的平仓数据交易
										      setTimeout(function(){
											      ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										      },3000);
										
										      //平仓后结束
										      if(ContentScript.timerWithOrderClock!=null){
											      clearInterval(ContentScript.timerWithOrderClock);
										      }
										      ContentScript.timerWithOrderClock = null;
										      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
										      $("#btnStart").show();
										      $("#btnEnd").hide();
									      }
								      }
								      if((showTitle.indexOf("剩 2")>=0 ||  showTitle.indexOf("剩 3")>=0)
								         && $("input[id='AutoPingCang']:checked").val() == "1"
								      ){
									      //先删除所有没有成交的数据
									      setTimeout(function(){
										      ContentScript.EatButtonEvent();
									      },0);
									      ContentScript.SinglePath = true;
								      }
							      },1000);
						      });
						
						      //结束
						      $("#btnEnd").bind("click",function(){
							      if(ContentScript.timerWithOrderClock!=null){
								      clearInterval(ContentScript.timerWithOrderClock);
							      }
							      ContentScript.timerWithOrderClock = null;
							      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							      $("#btnStart").show();
							      $("#btnEnd").hide();
						      });
						
						      //平仓
						      $("#btnBanlance").bind("click",function(){
							      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
								      if(ContentScript.timerWithOrderClock==null){
									      $(this).hide();
									      //先删除所有没有成交的数据
									      setTimeout(function(){
										      ContentScript.EatButtonEvent();
									      },0);
									      setTimeout(function(){
										      ContentScript.BetButtonEvent();
									      },0);
									      //然后100%的平仓数据交易
									      setTimeout(function(){
										      ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
									      },1000);
									      $(this).show();
								      }else{
									      alert("请先停止跟单！");
								      }
							      }else{
								      alert("平仓功能只能在倍率是1的情况下使用！");
							      }
						      });
				
	      },
	      getNeedWithOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllTransactionData();
			      var notCommitBetList=[];
			      var returnEatList=[];
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      it.x = parseInt(it.x)*parseInt($("#Percent").val())
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      returnEatList.push(it);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					      if($(this)[0].type =="DBmr"){
						      var it = $(this)[0];
						      var hadCount = false;
						      $(notCommitBetList).each(function(i){
							      if(it.id==$(this)[0].id){
								      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								      hadCount = true;
							      }
						      });
						      if(!hadCount){
							      notCommitBetList.push(allList[index]);
						      }
					      }
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      $(notCommitBetList).each(function(){
						      if(item.id==$(this)[0].id){
							      returnEatList[i].x = item.x-$(this)[0].x
						      }
					      });
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      });
			      }			
			
			      $(returnList).each(function(index){
				      $(this)[0].type = $(this)[0].type.replace("E","B");
			      });
			      return returnList;
		      }else{
			      return [];
		      }
	      },
	      getNeedPingCangOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllHadTransactionData();
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      var returnEatList=[];
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x);
									      returnEatList.push(allList[index]);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					
				      });
				
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      })
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				      return returnList;
			      }
		      }else{
			      return [];
		      }
	      },
	      ticketByFloat:function(item,type){
		      var result = 0;
		      if(type=="Q"){
			      result = item;
		      }else{
			      if(item==0){
				      result = 0;
			      }else{
				      if(item%5 !=0){
					      result = item + (5 - item%5);
				      }else{
					      result = item;
				      }
			      }
		      }
		      return result
	      },
	      withOrderOnInit:function(pushData,isBalance){
		      //真实的跟单操作
		      $(pushData).each(function(i){
			      var item = $(this)[0];
			      if(true){
				      var signInfo = ContentScript.GetSignInInfo();
				      if(['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'].contains(item.type)){
							      var postData = {};
							      postData.task = "betBox";
							      postData.combo =0;
							      //<td>6</td>
							      //<td class="RD F_B">FC</td>
							      //<td class="F_B ">4-5</td>
							      //<td id="FCE_6_4-5_100_700x">2</td>
							      //<td id="FCE_6_4-5_100_700y">100</td>
							      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
							      //<td class="">吃</td>
							
							      postData.Tix =  ContentScript.ticketByFloat(parseInt(item.x),"Q");
							      postData.Race = parseInt(item.matches);
							      var hourse1,hourse2;
							      //如果含有括号特殊处理一下
							      if(item.fb.indexOf("(")<0){
								      hourse1 = item.fb.split("-")[0];
								      hourse2 = item.fb.split("-")[1];
								      postData.fctype = 0;
							      }else{
								      hourse1 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
								      hourse2 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
								      postData.fctype = 1;
							      }
							      postData.Hs1 = hourse1;
							      postData.Hs2 = hourse2;
							      postData.Hs3 = "";
							      postData.Hs4 = "";
							      postData.Hs5 = "";
							      postData.Hs6 = "";
							      postData.Hs7 = "";
							      postData.Hs8 = "";
							      //postData.fctype = 0;
							      postData.Q = "Q";
							      if(item.type.indexOf("E")>=0){
								      postData.type = "EAT";
							      }else{
								      postData.type = "BET";
							      }
							
							      if(isBalance){
								      postData.amount = 100;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							      postData.fclmt = ContentScript.PageConfig.LimitStart;
								
							      postData.overflow = "1";
							      //postData.amount = "100";
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							      postData.rd = Math.random();
							
							      console.log(postData);
							      ///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX +"/forecast",
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
						      } 
				      if(['WPB','WPE','WB','WE','PB','PE'].contains($(this)[0].type)){
					
							      var postURL = "";
							      var postData = {};
							      postData.t = "frm";
							      postData.race = item.matches;
							      postData.horse = item.rdfb;
							      //var Proportion = parseInt(ContentScript.PageConfig.Percent);
							      postData.win = ContentScript.ticketByFloat(parseInt(item.fb),"WP");
							      postData.place = ContentScript.ticketByFloat(parseInt(item.x),"WP");
							
							      var postURL ="";
							      postURL ="/bets";
							      //if(item.type.indexOf("E")>=0){
							      //postData.type = "eat";
							      //postURL ="/bets";
							      //}else{
							      //postData.type = "bet";
							      //postURL = "/bookings";
							      //}
							
							      if(isBalance){
								      postData.amount = 99;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							
							      //postData.limit = ContentScript.PageConfig.LimitStart+"/"+ ContentScript.PageConfig.LimitEnd;
							      postData.l_win = ContentScript.PageConfig.LimitStart;
							      postData.l_place = ContentScript.PageConfig.LimitEnd;
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							
							      if(parseInt(postData.win)>0 && parseInt(postData.place)>0){
								      postData.wptck=1;
							      }else{
								      postData.wptck=0;
							      } 
							      if(parseInt(postData.win)>0 && parseInt(postData.place)==0){
								      postData.wtck=1;
								      postData.l_place = "0";
							      }
							      if(parseInt(postData.win)==0 && parseInt(postData.place)>0){
								      postData.ptck=1;
								      postData.l_win = "0";
							      }
							
							      postData.post = "1";
							      postData.rd = Math.random();
							      console.log(postData);
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX + postURL,
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
					      }
			      }
		      });
	      },
	      GetAllTransactionData:function(){
		      var result = [];
		      //<td>6</td>
		      //<td class="RD F_B">FC</td>
		      //<td class="F_B ">4-5</td>
		      //<td id="FCE_6_4-5_100_700x">2</td>
		      //<td id="FCE_6_4-5_100_700y">100</td>
		      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		      //<td class="">吃</td>
		
		      //<td>2</td>
		      //<td class="F_B">4</td>
		      //<td id="PE_2_4_78_0/16_0x">0</td>
		      //<td id="PE_2_4_78_0/16_0y">5</td>
		      //<td id="PE_2_4_78_0/16_0z">78</td>
		      //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		      //<td class="">吃</td></tr>
		
		      $(ContentScript.txn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	      GetAllHadTransactionData:function(){
		      var result = [];
		      $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2];
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 330px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<table style="width:100%">';
              htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
              htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
              htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
              htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
              htmlList +='&nbsp;&nbsp;限注:<input id="MaxCount" type="number" step="1" style="width: 40px;" size="4" value="300" />';
              htmlList +='&nbsp;倍率:<select id="Percent"><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>20</option><option>50</option><option>100</option></select>';
              //htmlList +='&nbsp;倍率:<input id="Percent" type="number" step="0.1" value="1" style="width: 40px;" size="4">';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">'
              htmlList +='<input type= "radio" name="DiscountType"  value="F1" checked="checked" id="DiscountType1"/>'
              htmlList +='折头:<input id="Discount1" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">';
              htmlList +='<input type= "radio" name="DiscountType" value="F2" id="DiscountType2"/>';
              htmlList +='折头:<input id="Discount2" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;<input id="AutoPingCang" type="checkbox" value="1" />自动平仓'
              //htmlList +='比例:<input id="Percent" type="number" step="1" style="width: 40px;" size="4" value="1" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
              htmlList +='吃:<span id="eatCount" style="color:red"></span>&nbsp;赌:<span id="betCount" style="color:red" ></span>&nbsp;';
              htmlList +='</td><td style="text-align:right">';
              htmlList +='<input type="button" id="btnStart" value="开始" />';
              htmlList +='<input type="button" id="btnEnd" value="停止" />';
              htmlList +='<input type="button" id="btnBanlance" value="平仓" />';
              htmlList +='<input type="button" id="btnEatDelete" value="删吃单" />';
              htmlList +='<input type="button" id="btnBetDelete" value="删赌单" />';
              htmlList +='</td></tr>';
              htmlList +='</table>';
              htmlList += '</div>';
        
              $("body").append(htmlList);
	      },
	      EatButtonEvent:function(){
		      var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
		      if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
						      $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr").each(function(index){
								      var obj = $($(this).find(".del2_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
								      PostHelp.AjaxDeleteData(obj);
								      $($(this).find(".del2_ch").parent().parent()).hide();
						      });
						
		      }
	      },
	      BetButtonEvent:function(){
		      var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
		      if(greenList!=null && greenList!=undefined && greenList.length>0 ){
				      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
						      var obj = $($(this).find(".del_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
						      PostHelp.AjaxDeleteData(obj);
						      $($(this).find(".del_ch").parent().parent()).hide();
				      });
				
		      }
	      },
	      HtmlAddDragEvent:function(){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  $("#drag").click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt($("#drag").css("left"));
                      _y = e.pageY - parseInt($("#drag").css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          $("#drag").css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }

      PostHelp={
	      urlX: "http://"+window.location.host,
	      fcfrm1 :  $("#fcfrm1"),
	      fcfrm2 :  $("#fcfrm2"),
	      chkKBBet:function(f){
		      f = PostHelp.fcfrm1;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB1(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB3(f);
		      }
	      },
          chkKBEat:function(f){
		      f = PostHelp.fcfrm2;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB2(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB4(f);
		      }
	      },
          chkKB1:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		         && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val();
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined	
			      ){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
          chkKB2:function(f){
		      f=PostHelp.fcfrm2;
		      var combo=f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }	
			      if(hss=="")
			      {
				      hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
          chkKB3:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			      && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val()
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined
			      ){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }			
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
	      chkKB4:function(f){
		      f=PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }		
			      if(hss=="")
			      {
				      hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
	      chkActBet:function(f){
		      f = PostHelp.fcfrm1;
		      var combo;
		      var check = f.find("input[name='banker1'] :checked");
		      if(check) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );	
		      }
	      },
	      chkActEat:function(f){
		      f = PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );
		      }
	      },
	      postData:function(url){
		      var view1 = $("#view1");
		      if(view1) {
				      var y = $("#view1").val();
				      var postion = url  + "&show="+y+ "&rd=" + Math.random();
				      var postionArray = postion.split("?");
				      var postUrl = postionArray[0];
				      var dataUrl = postionArray[1];
				      var dataArray = dataUrl.split('&');
				      var postString ='{';
				      for(var i=0;i< dataArray.length;i++){
					      var itemArray = dataArray[i].split('=');
					      postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				      }
				      postString = postString.substr(0,postString.length-1);
				      postString+='}';
				      var dataJson = $.parseJSON(postString);
				      $.ajax(
				      {
		                   type: "GET",
		                   url: postUrl,		             
		                   data: dataJson,
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }
	     		      });
		      }
	      },
	      PostDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      document.getElementById('boxFcBET').style.display = "none";
		      document.getElementById('boxFcEAT').style.display = "none";
		      document.getElementById('boxPfcBET').style.display = "none";
		      document.getElementById('boxPfcEAT').style.display = "none";
		      PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	      },
	      AjaxDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      var y = 0;
		      try{
			      y = view1.options[view1.selectedIndex].value;
		      }catch(e){
			      y = $(".dd-selected-value").val();
		      }
		
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      $.ajax(
				      {
		                   type: "GET",
		                   url: PostHelp.urlX +"/transactions",		             
		                   data: {
		             	      "type":"del",
		             	      "bid":id,
		             	      "x":x,
		             	      "betType":type,
		             	      "race_date":date,
		             	      "race_type":race_type,
		             	      "q":"q",
						      "race":race,
						      "show":y,
						      "rd":Math.random()
		                   },
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }   
	   				 
	           });
	      }
      }

      var host =window.location.href;
      if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
      ]]>
    </JSCode>
  </JSFile>

  <JSFile>
    <version>V100</version>
    <JSCode>
      <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }

      ContentScript={
	      txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	      Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	      WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerWithOrderClock:null,
	      timerCountPageEatAndBet:null,
	      StaticAllData:[],
	      AlertMsg:"请输入密码",
	      AlertPassToLater:"软件过期",
	      PassError:"密码错误",
        SinglePath:false,
	      StaticOldAllData:[],
	      StaticCountShowData:[],
	      StaticOldCountShowData:[],
	      HelloKitty:"81dc9bdb52d04dc20036dbd8313ed055",
	      HelloKittyTime:["212112eece862ca4a3da112f217288fb","519edc8db508d1c088f793f2c3647e6f"],
	      DaoQiTime:"YYYY-MM-DD",
	      PageConfig:{
		      MaxCount:90,
		      Discount:80,
		      LimitStart:700,
		      LimitEnd:700,
		      Percent:1
	      },
	      showCountWithWhere:function(){
		      ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		      ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		      if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			      ContentScript.showCountPageEatAndBet();
		      }			
	      },
	      setLimitAndDiscount:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      if("WP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(82);
			      $("#LimitStart1").val(240);
			      $("#LimitEnd1").val(60);
			
			      $("#Discount2").val(82);
			      $("#LimitStart2").val(240);
			      $("#LimitEnd2").val(60);
		      }
		      if("QP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(400);
			      $("#LimitEnd1").val(400);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(400);
			      $("#LimitEnd2").val(400);
		      }
		      if("Q" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(700);
			      $("#LimitEnd1").val(700);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(700);
			      $("#LimitEnd2").val(700);
		      }
	      },
	      showCountPageEatAndBet:function(){
			      var CheckType = [];
			      var withType = $("input[name='orderType']:checked").val();
			      var eat =0;
			      var bet =0;
			      var betIds =[];
			      var eatIds =[];
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      $(ContentScript.StaticCountShowData).each(function(i){
				      if(CheckType.contains($(this)[0].type)){
					      if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						      bet++;
						      betIds.push($(this)[0].id);
					      }
					      if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						      eat++;
						      eatIds.push($(this)[0].id);
					      }
				      }
			      })
			      $("#eatCount").text(eat);
			      $("#betCount").text(bet);
		
	      },
	      GetAllEatTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("E")>=0 && $(this)[0].type != 'DEmr'){
				      result.push($(this)[0]);
			      } 
		      });
		      return result;
	      },
	      GetAllBetTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("B")>=0 && $(this)[0].type != 'DBmr'){
				      result.push($(this)[0]);
			      }
		      });
		      return result;
	      },
	      GetAllDBmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DBmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPB";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QB";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      GetAllDEmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DEmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPE";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QE";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
          },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      MaxCountEvent:function(){
		      try{
			      ContentScript.PageConfig.MaxCount = $("#MaxCount").val();
		      }catch(e){
			      ContentScript.PageConfig.MaxCount = 90;
			      $("#MaxCount").val(90);
		      }
		
		      var type = $("input[name='DiscountType']:checked").val();
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.Discount = $("#Discount1").val();
			      }else{
				      ContentScript.PageConfig.Discount = $("#Discount2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.Discount = 80;
			      $("#Discount").val(80);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitStart = $("#LimitStart1").val();
			      }else{
				      ContentScript.PageConfig.LimitStart = $("#LimitStart2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitStart = 700;
			      $("#LimitStart").val(700);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd1").val();
			      }else{
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitEnd = 700;
			      $("#LimitEnd").val(700);
		      }
		
		      ContentScript.PageConfig.Percent = $("#Percent").val();
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      PrecentChangeEvent:function(){
		      $("#Percent").bind("change",function(){
			      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				      $("#btnBanlance").show();
			      }else{
				      $("#btnBanlance").hide();
			      }
			      ContentScript.PageConfig.Percent =$("#Percent").val();
		      });
	      },
	      allOnitEvent:function(){
		      //创建用户界面
						      ContentScript.CreateHtmlElement();
						      //绑定拖拽事件
						      ContentScript.HtmlAddDragEvent();
						      $("#daoqitime").text(ContentScript.DaoQiTime);
						      //限制投注数
						      ContentScript.MaxCountEvent();
						      //多倍控制
						      ContentScript.PrecentChangeEvent();
						      //统计吃票的计时器
						      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
						
						      $("#btnEnd").hide();
						      $("input[name='orderType']").bind("click",function(){
							      ContentScript.showCountPageEatAndBet();
							      ContentScript.setLimitAndDiscount();
						      });
						      //删单
						      $("#btnEatDelete").bind("click",function(){
							      $(this).hide();
							      var isExists = $(window.frames["frmTRANS"].document).find(".del2_ch");
							      if(isExists!=null && isExists!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del2_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      $("#btnBetDelete").bind("click",function(){
							      $(this).hide();
							      var isExistsDel = $(window.frames["frmTRANS"].document).find(".del_ch");
							      if(isExistsDel!=null && isExistsDel!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      //开始
						      $("#btnStart").bind("click",function(){
                      ContentScript.SinglePath = false;
							        ContentScript.StaticOldAllData = [];
							        ContentScript.StaticAllData = [];
							        $("#btnStart").hide();
							        $("#btnEnd").show();
							        ContentScript.MaxCountEvent();
							        //创建定时吃票事件
							        ContentScript.timerWithOrderClock = self.setInterval(function(){
							            var eatCount = $("#eatCount").text();
							            if(eatCount == ""){
							    	        eatCount = 0;
							            }else{
							    	        eatCount = parseInt(eatCount);
							            }
							            var MaxCount = parseInt($("#MaxCount").val());
							            if(eatCount >= MaxCount){
							    	        //到达限制数量 删除所有吃单
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
							            }
								        clearInterval(ContentScript.timerCountPageEatAndBet);
								        ContentScript.StaticOldAllData = ContentScript.StaticAllData
								        ContentScript.StaticAllData = ContentScript.GetAllHadTransactionData();
								        if(JSON.stringify(ContentScript.StaticOldAllData) != JSON.stringify(ContentScript.StaticAllData)){
									        if(ContentScript.SinglePath){
									 	        //nothing
									        }else{
										        ContentScript.StaticCountShowData = ContentScript.StaticAllData;
										        ContentScript.showCountPageEatAndBet();
										        ContentScript.needAjaxCount=ContentScript.getNeedWithOrderList();
										        ContentScript.withOrderOnInit(ContentScript.needAjaxCount,false);
									        }
									
								        }
								
								        var showTitle = "";
								        if(window.location.href.indexOf("playerhk.jsp")>=0){
									        showTitle = $("#newsLineByLoc").text();
								        }
								        if(window.location.href.indexOf("Q.jsp")>=0){
									        showTitle = $("#news1st").text();
								        }
								
								        if(((showTitle.indexOf("进闸完毕")>=0 
								           && showTitle.indexOf("准备开跑")>=0)||(showTitle.indexOf("剩 1")>=0))
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        var ret = 0;
									        try{
										        var regexp = /剩 [0-9]+/
										        var firststring = regexp.exec(showTitle);
										        var match = firststring[0].replace("剩","").replace(" ","")
										        ret= parseInt(match);
									        }catch(e){
										        ret = 1	
									        }
									        if(ret==1){
										        ContentScript.SinglePath = true;
										        //先删除所有没有成交的数据
										        setTimeout(function(){
											        ContentScript.EatButtonEvent();
										        },0);
										        setTimeout(function(){
											        ContentScript.BetButtonEvent();
										        },100);
										        //然后100%的平仓数据交易
										        setTimeout(function(){
											        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										        },1000);
										
										        //然后100%的平仓数据交易
										        setTimeout(function(){
											        //如果有非 100的没有成交的记录的话 需要删非100折的订单后再平仓
											        if(!ContentScript.checkPingCangHouDataValidation()){
												        var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
												        if(greenList!=null && greenList!=undefined && greenList.length>0 ){
														        $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
																        if($($(this).find(".del_ch").parent().parent()).find("td").eq(4).text()!="100"){
																	        var obj = $($(this).find(".del_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
																	        PostHelp.AjaxDeleteData(obj);
																	        $($(this).find(".del_ch").parent().parent()).hide();
																        }
														        });
														
												        }
												        setTimeout(function(){
													        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
												        },1000);
											        }
										        },2000);
										
										        //平仓后结束
										        if(ContentScript.timerWithOrderClock!=null){
											        clearInterval(ContentScript.timerWithOrderClock);
										        }
										        ContentScript.timerWithOrderClock = null;
										        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
										        $("#btnStart").show();
										        $("#btnEnd").hide();
									        }
								        }
								        if((showTitle.indexOf("剩 2")>=0 ||  showTitle.indexOf("剩 3")>=0)
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        ContentScript.SinglePath = true;
								        }
							        },1000);
						      });
						
						      //结束
						      $("#btnEnd").bind("click",function(){
							      if(ContentScript.timerWithOrderClock!=null){
								      clearInterval(ContentScript.timerWithOrderClock);
							      }
							      ContentScript.timerWithOrderClock = null;
							      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							      $("#btnStart").show();
							      $("#btnEnd").hide();
						      });
						
						      //平仓
						      $("#btnBanlance").bind("click",function(){
							      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
								      if(ContentScript.timerWithOrderClock==null){
									      $(this).hide();
									      //先删除所有没有成交的数据
									      setTimeout(function(){
										      ContentScript.EatButtonEvent();
									      },0);
									      setTimeout(function(){
										      ContentScript.BetButtonEvent();
									      },0);
									      //然后100%的平仓数据交易
									      setTimeout(function(){
										      ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
									      },1000);
									      $(this).show();
								      }else{
									      alert("请先停止跟单！");
								      }
							      }else{
								      alert("平仓功能只能在倍率是1的情况下使用！");
							      }
						      });
				
	      },
        checkPingCangHouDataValidation:function(){
		      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
			      if($($(this).find(".del_ch").parent().parent()).find("td").eq(4).text()!="100"){
				      return false;
			      }
		      });
		      return true;
	      },
	      getNeedWithOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllTransactionData();
			      var notCommitBetList=[];
			      var returnEatList=[];
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      it.x = parseInt(it.x)*parseInt($("#Percent").val())
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      returnEatList.push(it);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					      if($(this)[0].type =="DBmr"){
						      var it = $(this)[0];
						      var hadCount = false;
						      $(notCommitBetList).each(function(i){
							      if(it.id==$(this)[0].id){
								      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								      hadCount = true;
							      }
						      });
						      if(!hadCount){
							      notCommitBetList.push(allList[index]);
						      }
					      }
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      $(notCommitBetList).each(function(){
						      if(item.id==$(this)[0].id){
							      returnEatList[i].x = item.x-$(this)[0].x
						      }
					      });
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      });
			      }			
			
			      $(returnList).each(function(index){
				      $(this)[0].type = $(this)[0].type.replace("E","B");
			      });
			      return returnList;
		      }else{
			      return [];
		      }
	      },
	      getNeedPingCangOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllHadTransactionData();
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      var returnEatList=[];
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x);
									      returnEatList.push(allList[index]);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					
				      });
				
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      })
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				      return returnList;
			      }
		      }else{
			      return [];
		      }
	      },
	      ticketByFloat:function(item,type){
		      var result = 0;
		      if(type=="Q"){
			      result = item;
		      }else{
			      if(item==0){
				      result = 0;
			      }else{
				      if(item%5 !=0){
					      result = item + (5 - item%5);
				      }else{
					      result = item;
				      }
			      }
		      }
		      return result
	      },
	      withOrderOnInit:function(pushData,isBalance){
		      //真实的跟单操作
		      $(pushData).each(function(i){
			      var item = $(this)[0];
			      if(true){
				      var signInfo = ContentScript.GetSignInInfo();
				      if(['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'].contains(item.type)){
							      var postData = {};
							      postData.task = "betBox";
							      postData.combo =0;
							      //<td>6</td>
							      //<td class="RD F_B">FC</td>
							      //<td class="F_B ">4-5</td>
							      //<td id="FCE_6_4-5_100_700x">2</td>
							      //<td id="FCE_6_4-5_100_700y">100</td>
							      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
							      //<td class="">吃</td>
							
							      postData.Tix =  ContentScript.ticketByFloat(parseInt(item.x),"Q");
							      postData.Race = parseInt(item.matches);
							      var hourse1,hourse2;
							      //如果含有括号特殊处理一下
							      if(item.fb.indexOf("(")<0){
								      hourse1 = item.fb.split("-")[0];
								      hourse2 = item.fb.split("-")[1];
								      postData.fctype = 0;
							      }else{
								      hourse1 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
								      hourse2 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
								      postData.fctype = 1;
							      }
							      postData.Hs1 = hourse1;
							      postData.Hs2 = hourse2;
							      postData.Hs3 = "";
							      postData.Hs4 = "";
							      postData.Hs5 = "";
							      postData.Hs6 = "";
							      postData.Hs7 = "";
							      postData.Hs8 = "";
							      //postData.fctype = 0;
							      postData.Q = "Q";
							      if(item.type.indexOf("E")>=0){
								      postData.type = "EAT";
							      }else{
								      postData.type = "BET";
							      }
							
							      if(isBalance){
								      postData.amount = 100;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							      postData.fclmt = ContentScript.PageConfig.LimitStart;
								
							      postData.overflow = "1";
							      //postData.amount = "100";
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							      postData.rd = Math.random();
							
							      console.log(postData);
							      ///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX +"/forecast",
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
						      } 
				      if(['WPB','WPE','WB','WE','PB','PE'].contains($(this)[0].type)){
					
							      var postURL = "";
							      var postData = {};
							      postData.t = "frm";
							      postData.race = item.matches;
							      postData.horse = item.rdfb;
							      //var Proportion = parseInt(ContentScript.PageConfig.Percent);
							      postData.win = ContentScript.ticketByFloat(parseInt(item.fb),"WP");
							      postData.place = ContentScript.ticketByFloat(parseInt(item.x),"WP");
							
							      var postURL ="";
							      postURL ="/bets";
							      //if(item.type.indexOf("E")>=0){
							      //postData.type = "eat";
							      //postURL ="/bets";
							      //}else{
							      //postData.type = "bet";
							      //postURL = "/bookings";
							      //}
							
							      if(isBalance){
								      postData.amount = 99;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							
							      //postData.limit = ContentScript.PageConfig.LimitStart+"/"+ ContentScript.PageConfig.LimitEnd;
							      postData.l_win = ContentScript.PageConfig.LimitStart;
							      postData.l_place = ContentScript.PageConfig.LimitEnd;
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							
							      if(parseInt(postData.win)>0 && parseInt(postData.place)>0){
								      postData.wptck=1;
							      }else{
								      postData.wptck=0;
							      } 
							      if(parseInt(postData.win)>0 && parseInt(postData.place)==0){
								      postData.wtck=1;
								      postData.l_place = "0";
							      }
							      if(parseInt(postData.win)==0 && parseInt(postData.place)>0){
								      postData.ptck=1;
								      postData.l_win = "0";
							      }
							
							      postData.post = "1";
							      postData.rd = Math.random();
							      console.log(postData);
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX + postURL,
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
					      }
			      }
		      });
	      },
	      GetAllTransactionData:function(){
		      var result = [];
		      //<td>6</td>
		      //<td class="RD F_B">FC</td>
		      //<td class="F_B ">4-5</td>
		      //<td id="FCE_6_4-5_100_700x">2</td>
		      //<td id="FCE_6_4-5_100_700y">100</td>
		      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		      //<td class="">吃</td>
		
		      //<td>2</td>
		      //<td class="F_B">4</td>
		      //<td id="PE_2_4_78_0/16_0x">0</td>
		      //<td id="PE_2_4_78_0/16_0y">5</td>
		      //<td id="PE_2_4_78_0/16_0z">78</td>
		      //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		      //<td class="">吃</td></tr>
		
		      $(ContentScript.txn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	      GetAllHadTransactionData:function(){
		      var result = [];
		      $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2];
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 330px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<table style="width:100%">';
              htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
              htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
              htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
              htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
              htmlList +='&nbsp;&nbsp;限注:<input id="MaxCount" type="number" step="1" style="width: 40px;" size="4" value="300" />';
              htmlList +='&nbsp;倍率:<select id="Percent"><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>20</option><option>50</option><option>100</option></select>';
              //htmlList +='&nbsp;倍率:<input id="Percent" type="number" step="0.1" value="1" style="width: 40px;" size="4">';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">'
              htmlList +='<input type= "radio" name="DiscountType"  value="F1" checked="checked" id="DiscountType1"/>'
              htmlList +='折头:<input id="Discount1" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">';
              htmlList +='<input type= "radio" name="DiscountType" value="F2" id="DiscountType2"/>';
              htmlList +='折头:<input id="Discount2" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;<input id="AutoPingCang" type="checkbox" value="1" />自动平仓'
              //htmlList +='比例:<input id="Percent" type="number" step="1" style="width: 40px;" size="4" value="1" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
              htmlList +='吃:<span id="eatCount" style="color:red"></span>&nbsp;赌:<span id="betCount" style="color:red" ></span>&nbsp;';
              htmlList +='</td><td style="text-align:right">';
              htmlList +='<input type="button" id="btnStart" value="开始" />';
              htmlList +='<input type="button" id="btnEnd" value="停止" />';
              htmlList +='<input type="button" id="btnBanlance" value="平仓" />';
              htmlList +='<input type="button" id="btnEatDelete" value="删吃单" />';
              htmlList +='<input type="button" id="btnBetDelete" value="删赌单" />';
              htmlList +='</td></tr>';
              htmlList +='</table>';
              htmlList += '</div>';
        
              $("body").append(htmlList);
	      },
	      EatButtonEvent:function(){
		      var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
		      if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
						      $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr").each(function(index){
								      var obj = $($(this).find(".del2_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
								      PostHelp.AjaxDeleteData(obj);
								      $($(this).find(".del2_ch").parent().parent()).hide();
						      });
						
		      }
	      },
	      BetButtonEvent:function(){
		      var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
		      if(greenList!=null && greenList!=undefined && greenList.length>0 ){
				      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
						      var obj = $($(this).find(".del_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
						      PostHelp.AjaxDeleteData(obj);
						      $($(this).find(".del_ch").parent().parent()).hide();
				      });
				
		      }
	      },
	      HtmlAddDragEvent:function(){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  $("#drag").click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt($("#drag").css("left"));
                      _y = e.pageY - parseInt($("#drag").css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          $("#drag").css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }

      PostHelp={
	      urlX: "http://"+window.location.host,
	      fcfrm1 :  $("#fcfrm1"),
	      fcfrm2 :  $("#fcfrm2"),
	      chkKBBet:function(f){
		      f = PostHelp.fcfrm1;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB1(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB3(f);
		      }
	      },
          chkKBEat:function(f){
		      f = PostHelp.fcfrm2;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB2(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB4(f);
		      }
	      },
          chkKB1:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		         && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val();
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined	
			      ){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
          chkKB2:function(f){
		      f=PostHelp.fcfrm2;
		      var combo=f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }	
			      if(hss=="")
			      {
				      hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
          chkKB3:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			      && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val()
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined
			      ){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }			
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
	      chkKB4:function(f){
		      f=PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }		
			      if(hss=="")
			      {
				      hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
	      chkActBet:function(f){
		      f = PostHelp.fcfrm1;
		      var combo;
		      var check = f.find("input[name='banker1'] :checked");
		      if(check) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );	
		      }
	      },
	      chkActEat:function(f){
		      f = PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );
		      }
	      },
	      postData:function(url){
		      var view1 = $("#view1");
		      if(view1) {
				      var y = $("#view1").val();
				      var postion = url  + "&show="+y+ "&rd=" + Math.random();
				      var postionArray = postion.split("?");
				      var postUrl = postionArray[0];
				      var dataUrl = postionArray[1];
				      var dataArray = dataUrl.split('&');
				      var postString ='{';
				      for(var i=0;i< dataArray.length;i++){
					      var itemArray = dataArray[i].split('=');
					      postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				      }
				      postString = postString.substr(0,postString.length-1);
				      postString+='}';
				      var dataJson = $.parseJSON(postString);
				      $.ajax(
				      {
		                   type: "GET",
		                   url: postUrl,		             
		                   data: dataJson,
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }
	     		      });
		      }
	      },
	      PostDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      document.getElementById('boxFcBET').style.display = "none";
		      document.getElementById('boxFcEAT').style.display = "none";
		      document.getElementById('boxPfcBET').style.display = "none";
		      document.getElementById('boxPfcEAT').style.display = "none";
		      PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	      },
	      AjaxDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      var y = 0;
		      try{
			      y = view1.options[view1.selectedIndex].value;
		      }catch(e){
			      y = $(".dd-selected-value").val();
		      }
		
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      $.ajax(
				      {
		                   type: "GET",
		                   url: PostHelp.urlX +"/transactions",		             
		                   data: {
		             	      "type":"del",
		             	      "bid":id,
		             	      "x":x,
		             	      "betType":type,
		             	      "race_date":date,
		             	      "race_type":race_type,
		             	      "q":"q",
						      "race":race,
						      "show":y,
						      "rd":Math.random()
		                   },
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }   
	   				 
	           });
	      }
      }

      var host =window.location.href;
      if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
      ]]>
    </JSCode>
  </JSFile>
  
  <JSFile>
    <version>V101</version>
    <JSCode>
      <![CDATA[
        Array.prototype.contains = function(item){
            return RegExp(item).test(this);
        };

        if(!Array.indexOf){
            Array.prototype.indexOf = function(obj){              
                for(var i=0; i<this.length; i++){
                    if(this[i]==obj){
                        return i;
                    }
                }
                return -1;
            }
        }

        Array.prototype.contains = function(obj) {
           var i = this.length;
           while (i--) {
               if (this[i] === obj) {
                    return true;
               }
            }
            return false;
        }
        ContentScript={
	          txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	          Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	          WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	          urlX: "http://"+window.location.host,
	          needAjaxCount:[],
	          timerCheckCJCount:null, 
	          timerCheckGJCount:null,
	          StaticAllData:[],
	          AlertMsg:"请输入密码",
	          AlertPassToLater:"软件过期",
	          PassError:"密码错误",
	          StaticOldAllData:[],
	          SinglePath:false,
	          StaticCountShowData:[],
	          StaticOldCountShowData:[],
	          DaoQiTime:"2015-08-31",
	          PageConfig:{
		          Discount:80,
		          LimitStart:$("#LimitStart").val(),
		          LimitEnd:$("#LimitEnd").val(),
		          Percent: 1,
		          EatBetType:$("input[name='EatBetType']:checked").val(),
		          KW:$("#KongWei").val(),
		          LimitWhere1:$("#LimitWhere1").val(),
		          LimitWhere2:$("#LimitWhere2").val(),
		          EatDiscount:$("#EatDiscount").val(),
		          BetDiscount:$("#BetDiscount").val(),
		          OrderType:$("input[name='orderType']:checked").val()
	          },
	          showCountWithWhere:function(){
		          ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		          ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		          if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			          ContentScript.showCountPageEatAndBet();
		          }			
	          },
	          getQPPLData:function(x,y){
		          try{
			          var len =0;
			          if(parseInt(x)>7 && parseInt(y)>8){
				          len = 13*(y-8)+(x-7);
			          }else{
				          len = 13*(x-1)+(y-1);
			          }
			          var result = $($("#frmTOTE2").find("td")[len-1]).text();
			          if(result=="" || result == "SCR" || isNaN(result)){
				          return 0;
			          }
			          return parseFloat(result);
		          }catch(e){
			          return 0;
		          }
	          },
	          getQPLData:function(x,y){
		          try{
			          var len =0;
			          if(parseInt(x)>7 && parseInt(y)>8){
				          len = 13*(y-8)+(x-7);
			          }else{
				          len = 13*(x-1)+(y-1);
			          }
			          var result = $($("#frmTOTE").find("td")[len-1]).text();
			          if(result=="" || result == "SCR" || isNaN(result)){
				          return 0;
			          }
			          return parseFloat(result);
		          }catch(e){
			          return 0;
		          }
	          },
	          getWPPLDataList:function(){
		          var result = {};
		          $($("#tttbl td").find(".style22")).each(function(index){
			          var item = {};
			          item.pl1 = parseFloat($(this).parent().prev().text());
			          item.pl2 = parseFloat($(this).parent().next().text());
			          item.cc =  $(this).text();
			          item.type="WP";
			          result.push(item);
		          });
		          return result;
	          },
	          setLimitAndDiscount:function(){
		          var withType = $("input[name='orderType']:checked").val();
		          if("WP" == withType){
			          $("#LimitStart").val(300);
			          $("#LimitEnd").val(0);
		          }
		          if("QP" == withType){
			          $("#LimitStart").val(400);
			          $("#LimitEnd").val(400);
		          }
		          if("Q" == withType){
			          $("#LimitStart").val(700);
			          $("#LimitEnd").val(700);
		          }
	          },
	          showCountPageEatAndBet:function(){
			          var CheckType = [];
			          var withType = $("input[name='orderType']:checked").val();
			          var eat =0;
			          var bet =0;
			          var betIds =[];
			          var eatIds =[];
			          if("WP" == withType){
				          CheckType = ['WPB','WPE','WB','WE','PB','PE']
			          }
			          if("QP" == withType){
				          CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			          }
			          if("Q" == withType){
				          CheckType = ['FCB','FCE','QB','QE']
			          }
			
			          $(ContentScript.StaticCountShowData).each(function(i){
				          if(CheckType.contains($(this)[0].type)){
					          if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						          bet++;
						          betIds.push($(this)[0].id);
					          }
					          if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						          eat++;
						          eatIds.push($(this)[0].id);
					          }
				          }
			          })
			          $("#eatCount").text(eat);
			          $("#betCount").text(bet);
		
	          },
	          GetAllEatTransactionData:function(){
		          var result = [] ;
		          var allData = ContentScript.GetAllTransactionData();
		          $(allData).each(function(i){
			          if($(this)[0].type.indexOf("E")>=0){
				          result.push($(this)[0]);
			          } 
		          });
		          return result;
	          },
	          GetAllBetTransactionData:function(){
		          var result = [] ;
		          var allData = ContentScript.GetAllTransactionData();
		          $(allData).each(function(i){
			          if($(this)[0].type.indexOf("B")>=0){
				          result.push($(this)[0]);
			          }
		          });
		          return result;
	          },
	          GetAllDBmrTransactionData:function(){
		          var result = [] ;
		          var allData = ContentScript.GetAllTransactionData();
		          $(allData).each(function(i){
			          if($(this)[0].type.indexOf("DBmr")>=0){
				          var item = $(this)[0];
				          if($(this)[0].t.indexOf("/")>0){
					          item.type = "WPB";
				          }
				          if($(this)[0].fb.indexOf("-")>0){
					          item.type = "QB";
				          }
				          result.push(item);
			          }
		          });
		          return result;
	          },
	          GetAllDEmrTransactionData:function(){
		          var result = [] ;
		          var allData = ContentScript.GetAllTransactionData();
		          $(allData).each(function(i){
			          if($(this)[0].type.indexOf("DEmr")>=0){
				          var item = $(this)[0];
				          if($(this)[0].t.indexOf("/")>0){
					          item.type = "WPE";
				          }
				          if($(this)[0].fb.indexOf("-")>0){
					          item.type = "QE";
				          }
				          result.push(item);
			          }
		          });
		          return result;
	          },
	          Request:function(paras){ 
                  var url = location.href; 
                  var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
                  var paraObj = {} 
                  for (i=0; j=paraString[i]; i++){ 
        	          paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
                  } 
                  var returnValue = paraObj[paras.toLowerCase()]; 
                  if(typeof(returnValue)=="undefined"){ 
        	          return ""; 
                  }else{ 
        	          return returnValue; 
                  } 
              },
	          GetSignInInfo:function(){
			          var url= window.location.href;
			          var siteType = ""
			          if(url.indexOf("ctb988.com")>=0){
				          siteType = "com";
			          }else{
				          siteType = "net"
			          }
			          var urlValue = window.location.pathname;
			          var paramList = window.location.search.split("?")[1];
			          var RaceType = $("input[name='race_type']").val();
			          var RaceDate = $("input[name='race_date']").val();
			          var Sml = "s";
			          var loginuser = $.trim($("#username").text());
			          var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			          return result;
	          },
	          onInit:function(){
		          var host =window.location.href;
		          if(host.indexOf("Q.jsp")>=0){
			          ContentScript.allOnitEvent();
		          }
	          },
	          PrecentChangeEvent:function(){
		          $("#Percent").bind("change",function(){
			          if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				          $("#btnBanlance").show();
			          }else{
				          $("#btnBanlance").hide();
			          }
			          ContentScript.PageConfig.Percent =$("#Percent").val();
		          });
	          },
	          GetSubmitData:function(){
		          ContentScript.PageConfig = {
			          Discount:80,
			          LimitStart:$("#LimitStart").val(),
			          LimitEnd:$("#LimitEnd").val(),
			          Percent: 1,
			          EatBetType:$("input[name='EatBetType']:checked").val(),
			          KW:$("#KongWei").val(),
			          LimitWhere1:$("#LimitWhere1").val(),
			          LimitWhere2:$("#LimitWhere2").val(),
			          EatDiscount:$("#EatDiscount").val(),
			          BetDiscount:$("#BetDiscount").val(),
			          OrderType:$("input[name='orderType']:checked").val()
		          }
		          var eatBetType = ContentScript.PageConfig.EatBetType;
		          var processData = [];
		          if(eatBetType == "Eat"){
			          processData = ContentScript.GetAllEatTransactionData();
		          }
		          if(eatBetType == "Bet"){
			          processData = ContentScript.GetAllBetTransactionData();
		          }
		          var PLData =[];
		          if(ContentScript.PageConfig.OrderType=="WP"){
			          PLData = ContentScript.getWPPLDataList();
		          }
		          if(ContentScript.PageConfig.OrderType=="Q" || ContentScript.PageConfig.OrderType=="QP"){
			          for(var i = 1 ;i<=20;i++){
				          for(var j = i+1;j<=20;j++){
					          var pl = ContentScript.getQPLData(i,j);
					          if(pl>0){
						          var item = {};
						          item.pl1 = parseFloat(pl);
						          item.pl2 = 0;
						          item.cc =  i;
						          item.cc2 = j;
						          item.type = ContentScript.PageConfig.OrderType;
						          PLData.push(item);
					          }
				          }
			          }
		          }
		          //item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
		          var whereData = [];
		          $(PLData).each(function(index){
			          if(parseFloat(ContentScript.PageConfig.LimitWhere1)<= parseFloat(PLData[index].pl1) 
				          && parseFloat(ContentScript.PageConfig.LimitWhere2) >= parseFloat(PLData[index].pl1)){
				          whereData.push(PLData[index]);
			          }
		          });
		          var preCount = 0.0;
		          var result = [];
		          $(whereData).each(function(index){
			          var curr = $(this)[0];
			          curr.ticket = parseFloat(ContentScript.PageConfig.KW)/curr.pl1;
			          preCount += curr.ticket;
			          var ticketed = 0.0;
			          $(processData).each(function(item){
				          if(ContentScript.PageConfig.OrderType =="Q"){
					          if(processData[item].fb == (curr.cc + "-"+curr.cc2)){
						          ticketed += parseFloat(processData[item].x);
					          }
				          }
				          if(ContentScript.PageConfig.OrderType =="QP"){
					          if(processData[item].fb == ("("+curr.cc + "-"+curr.cc2+")")){
						          ticketed += parseFloat(processData[item].x);
					          }
				          }
			          });
			          if(ticketed < curr.ticket){
				          curr.ticket = curr.ticket - ticketed;
				          result.push(curr);
			          }
		          });
		          $("#GJCount").val(preCount);
		          $("#CJCount").val(ContentScript.GetCJCount());
		
		          return result;
	          }
	          ,allOnitEvent:function(){
		          //创建用户界面
						          ContentScript.CreateHtmlElement();
						          //绑定拖拽事件
						          ContentScript.HtmlAddDragEvent();
						
						          $("#daoqitime").text(ContentScript.DaoQiTime);
						
						          $("input[name='orderType']").bind("click",function(){
							          ContentScript.setLimitAndDiscount();
						          });
						          $("input[name='EatBetType']").bind("click",function(){
							
						          });
						          ContentScript.timerCheckCJCount = setInterval(function(){
							          if($("#KongWei").val()!="" && 
								          ($("#LimitWhere1").val()!="") || $("#LimitWhere2").val()!=""){
								          ContentScript.GetSubmitData();
							          }
						          },2000);
						          //开始
						          $("#btnStart").bind("click",function(){
							          $("#btnStart").hide();
							          var data = ContentScript.GetSubmitData();
							          console.log(data);
							          if($("#GJCount")!=undefined && $("#GJCount").val()!="" && ((ContentScript.PageConfig.EatBetType=="Eat" && ContentScript.PageConfig.EatDiscount!="")
							          ||(ContentScript.PageConfig.EatBetType=="Bet" && ContentScript.PageConfig.BetDiscount!="")))
							          {
								          setTimeout(ContentScript.withOrderOnInit(data),0);
							          }else{
								          alert("数据不合法！");
								          $("#btnStart").show();
							          }
						          });
	          },
	          getNeedWithOrderList:function(){
		          var withType = $("input[name='orderType']:checked").val();
		          var returnBetList = [];
		          var returnEatList = [];
		          var returnList = [];
		          var CheckType = [];
		          if(withType.length>0){
			          if("WP" == withType){
				          CheckType = ['WPB','WPE','WB','WE','PB','PE']
			          }
			          if("QP" == withType){
				          CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			          }
			          if("Q" == withType){
				          CheckType = ['FCB','FCE','QB','QE']
			          }
			
			          var allList = ContentScript.GetAllTransactionData();
			          var notCommitBetList=[];
			          var returnEatList=[];
			
			          if("WP" == withType){
				          var WPBList =[];
				          var WPEList =[];
				          var WBList =[];
				          var WEList =[];
				          var PBList =[];
				          var PEList =[];
				          $(allList).each(function(index){
					          var temp = $(this)[0];
					          if($(this)[0].type =="DBmr"){
						          //matches rdfb fb x y t 2 4 5 5 78 0/16
						          if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						             temp.type= "WPB";
						             temp.id = temp.matches + temp.rdfb;
						             temp.fb = parseInt(temp.fb)*(-1);
						             temp.x =  parseInt(temp.x)*(-1);
						             WPBList.push(temp);
						          }
						          if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						             temp.type= "PB";
						             temp.id = temp.matches + temp.rdfb;
						             temp.fb = parseInt(temp.fb)*(-1);
						             temp.x =  parseInt(temp.x)*(-1);
						             PBList.push(temp);
						          }
						          if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							          temp.type= "WB";
							          temp.id = temp.matches + temp.rdfb;
							          temp.fb = parseInt(temp.fb)*(-1);
						   	          temp.x =  parseInt(temp.x)*(-1);
						              WBList.push(temp);
						          }
					          }else{
						          if(CheckType.contains($(this)[0].type)){
							          var temp = $(this)[0];
							          //matches rdfb fb x y t 2 4 5 5 78 0/16
							          switch($(this)[0].type){
								          case "WPB": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(-1);
							   		          temp.x =  parseInt(temp.x)*(-1);
									          WPBList.push(temp);
									          break;
								          }
								          case "WPE": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		          temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									          WPEList.push(temp);
									          break;
								          }
								          case "WB": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(-1);
							   		          temp.x =  parseInt(temp.x)*(-1);
									          WBList.push(temp);
									          break;
								          }
								          case "WE": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		          temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									          WEList.push(temp);
									          break;
								          }
								          case "PE": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		          temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									          PEList.push(temp);
									          break;
								          }
								          case "PB": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(-1);
							   		          temp.x =  parseInt(temp.x)*(-1);
									          PBList.push(temp);
									          break;
									
								          }
							          }
						          }
					          }
				          });
				  
				          var NoRepeatWPBList = [];
				          var NoRepeatWBList = [];
				          var NoRepeatPBList = [];
				          $(WPBList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(NoRepeatWPBList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          NoRepeatWPBList.push(WPBList[index]);
					          }
				          });
				          $(PBList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(NoRepeatPBList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          NoRepeatPBList.push(PBList[index]);
					          }
				          });
				          $(WBList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(NoRepeatWBList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          NoRepeatWBList.push(WBList[index]);
					          }
				          });
				
				          var wpeListid =[];
				          var notWPERepterList = [];
				          var notWERepterList = [];
				          var notPERepterList = []; 
				
				          $(WPEList).each(function(index){
					          var it = $(this)[0];
					          var hadCount = false;
					          $(notWPERepterList).each(function(i){
						          if(it.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          notWPERepterList.push(WPEList[index]);
					          }
				          });
				
				          $(PEList).each(function(index){
					          var its = $(this)[0];
					          var hadCount = false;
					          $(notPERepterList).each(function(i){
						          if(its.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          notPERepterList.push(PEList[index]);
					          }
				          });
				
				          $(WEList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(notWERepterList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          notWERepterList.push(WEList[index]);
					          }
				          });
				
				          $(notWPERepterList).each(function(index){
					          var temp = $(this)[0];
					          $(NoRepeatWPBList).each(function(i){
						          if(temp.id == $(this)[0].id){
							          temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							          temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						          }
					          });
					          if(temp.fb>0 && temp.x>0){
						          returnList.push(temp);
					          }
				          });
				          $(notWERepterList).each(function(index){
					          var temp = $(this)[0];
					          $(NoRepeatWBList).each(function(i){
						          if(temp.id == $(this)[0].id){
							          temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							          temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						          }
					          });
					          if(temp.fb>0 && temp.x==0){
						          returnList.push(temp);
					          }
				          });
				
				          $(notPERepterList).each(function(index){
					          var temp = $(this)[0];
					          $(NoRepeatPBList).each(function(i){
						          if(temp.id == $(this)[0].id){
							          temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							          temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						          }
					          });
					          if(temp.fb==0 && temp.x>0){
						          returnList.push(temp);
					          }
				          });
				
				          $(returnList).each(function(index){
					          $(this)[0].type = $(this)[0].type.replace("E","B");
				          });
				
				          return returnList;
				
			          }else{
				          $(allList).each(function(index){
					          if(CheckType.contains($(this)[0].type)){
						          if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							          if($(this)[0].type.indexOf("E")>=0){
								          var it = $(this)[0];
								          it.x = parseInt(it.x)*parseInt($("#Percent").val())
								          var hadCount = false;
								          $(returnEatList).each(function(i){
									          if(it.id==$(this)[0].id){
										          $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										          hadCount = true;
									          }
								          });
								          if(!hadCount){
									          returnEatList.push(it);
								          }
							          }
							          if($(this)[0].type.indexOf("B")>=0){
								          var it = $(this)[0];
								          var hadCount = false;
								          $(returnEatList).each(function(i){
									          if(it.id==$(this)[0].id){
										          $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										          hadCount = true;
									          }
								          });
								          if(!hadCount){
									          allList[index].x = parseInt(allList[index].x)*(-1);
									          returnEatList.push(allList[index]);
								          }
							          }	
						          }
					          }
					          if($(this)[0].type =="DBmr"){
						          var it = $(this)[0];
						          var hadCount = false;
						          $(notCommitBetList).each(function(i){
							          if(it.id==$(this)[0].id){
								          $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								          hadCount = true;
							          }
						          });
						          if(!hadCount){
							          notCommitBetList.push(allList[index]);
						          }
					          }
				          });
			
				          $(returnEatList).each(function(i){
					          var item = $(this)[0];
					          $(notCommitBetList).each(function(){
						          if(item.id==$(this)[0].id){
							          returnEatList[i].x = item.x-$(this)[0].x
						          }
					          });
				          });
			
				          $(returnEatList).each(function(i){
					          var item = $(this)[0];
					          if(item.x>0){
						          returnList.push(item);
					          }
				          });
			          }			
			
			          $(returnList).each(function(index){
				          $(this)[0].type = $(this)[0].type.replace("E","B");
			          });
			          return returnList;
		          }else{
			          return [];
		          }
	          },
	          getNeedPingCangOrderListByMatches:function(match){
		          var withType = $("input[name='orderType']:checked").val();
		          var returnBetList = [];
		          var returnEatList = [];
		          var returnList = [];
		          var CheckType = [];
		          if(withType.length>0){
			          if("WP" == withType){
				          CheckType = ['WPB','WPE','WB','WE','PB','PE']
			          }
			          if("QP" == withType){
				          CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			          }
			          if("Q" == withType){
				          CheckType = ['FCB','FCE','QB','QE']
			          }
			
			          var allList = ContentScript.GetAllHadTransactionDataByMatches(match);
			
			          if("WP" == withType){
				          var WPBList =[];
				          var WPEList =[];
				          var WBList =[];
				          var WEList =[];
				          var PBList =[];
				          var PEList =[];
				          $(allList).each(function(index){
					          var temp = $(this)[0];
					          if($(this)[0].type =="DBmr"){
						          //matches rdfb fb x y t 2 4 5 5 78 0/16
						          if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						             temp.type= "WPB";
						             temp.id = temp.matches + temp.rdfb;
						             temp.fb = parseInt(temp.fb)*(-1);
						             temp.x =  parseInt(temp.x)*(-1);
						             WPBList.push(temp);
						          }
						          if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						             temp.type= "PB";
						             temp.id = temp.matches + temp.rdfb;
						             temp.fb = parseInt(temp.fb)*(-1);
						             temp.x =  parseInt(temp.x)*(-1);
						             PBList.push(temp);
						          }
						          if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							          temp.type= "WB";
							          temp.id = temp.matches + temp.rdfb;
							          temp.fb = parseInt(temp.fb)*(-1);
						   	          temp.x =  parseInt(temp.x)*(-1);
						              WBList.push(temp);
						          }
					          }else{
						          if(CheckType.contains($(this)[0].type)){
							          var temp = $(this)[0];
							          //matches rdfb fb x y t 2 4 5 5 78 0/16
							          switch($(this)[0].type){
								          case "WPB": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(-1);
							   		          temp.x =  parseInt(temp.x)*(-1);
									          WPBList.push(temp);
									          break;
								          }
								          case "WPE": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		          temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									          WPEList.push(temp);
									          break;
								          }
								          case "WB": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(-1);
							   		          temp.x =  parseInt(temp.x)*(-1);
									          WBList.push(temp);
									          break;
								          }
								          case "WE": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		          temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									          WEList.push(temp);
									          break;
								          }
								          case "PE": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		          temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									          PEList.push(temp);
									          break;
								          }
								          case "PB": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(-1);
							   		          temp.x =  parseInt(temp.x)*(-1);
									          PBList.push(temp);
									          break;
									
								          }
							          }
						          }
					          }
				          });
				  
				          var NoRepeatWPBList = [];
				          var NoRepeatWBList = [];
				          var NoRepeatPBList = [];
				          $(WPBList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(NoRepeatWPBList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          NoRepeatWPBList.push(WPBList[index]);
					          }
				          });
				          $(PBList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(NoRepeatPBList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          NoRepeatPBList.push(PBList[index]);
					          }
				          });
				          $(WBList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(NoRepeatWBList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          NoRepeatWBList.push(WBList[index]);
					          }
				          });
				
				          var wpeListid =[];
				          var notWPERepterList = [];
				          var notWERepterList = [];
				          var notPERepterList = []; 
				
				          $(WPEList).each(function(index){
					          var it = $(this)[0];
					          var hadCount = false;
					          $(notWPERepterList).each(function(i){
						          if(it.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          notWPERepterList.push(WPEList[index]);
					          }
				          });
				
				          $(PEList).each(function(index){
					          var its = $(this)[0];
					          var hadCount = false;
					          $(notPERepterList).each(function(i){
						          if(its.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          notPERepterList.push(PEList[index]);
					          }
				          });
				
				          $(WEList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(notWERepterList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          notWERepterList.push(WEList[index]);
					          }
				          });
				
				          $(notWPERepterList).each(function(index){
					          var temp = $(this)[0];
					          $(NoRepeatWPBList).each(function(i){
						          if(temp.id == $(this)[0].id){
							          temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							          temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						          }
					          });
					          if(temp.fb>0 && temp.x>0){
						          returnList.push(temp);
					          }
				          });
				          $(notWERepterList).each(function(index){
					          var temp = $(this)[0];
					          $(NoRepeatWBList).each(function(i){
						          if(temp.id == $(this)[0].id){
							          temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							          temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						          }
					          });
					          if(temp.fb>0 && temp.x==0){
						          returnList.push(temp);
					          }
				          });
				
				          $(notPERepterList).each(function(index){
					          var temp = $(this)[0];
					          $(NoRepeatPBList).each(function(i){
						          if(temp.id == $(this)[0].id){
							          temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							          temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						          }
					          });
					          if(temp.fb==0 && temp.x>0){
						          returnList.push(temp);
					          }
				          });
				
				          $(returnList).each(function(index){
					          $(this)[0].type = $(this)[0].type.replace("E","B");
				          });
				
				          return returnList;
				
			          }else{
				          var returnEatList=[];
				          $(allList).each(function(index){
					          if(CheckType.contains($(this)[0].type)){
						          if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							          if($(this)[0].type.indexOf("E")>=0){
								          var it = $(this)[0];
								          var hadCount = false;
								          $(returnEatList).each(function(i){
									          if(it.id==$(this)[0].id){
										          $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										          hadCount = true;
									          }
								          });
								          if(!hadCount){
									          allList[index].x = parseInt(allList[index].x);
									          returnEatList.push(allList[index]);
								          }
							          }
							          if($(this)[0].type.indexOf("B")>=0){
								          var it = $(this)[0];
								          var hadCount = false;
								          $(returnEatList).each(function(i){
									          if(it.id==$(this)[0].id){
										          $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										          hadCount = true;
									          }
								          });
								          if(!hadCount){
									          allList[index].x = parseInt(allList[index].x)*(-1);
									          returnEatList.push(allList[index]);
								          }
							          }	
						          }
					          }
					
				          });
				
				          $(returnEatList).each(function(i){
					          var item = $(this)[0];
					          if(item.x>0){
						          returnList.push(item);
					          }
				          })
				
				          $(returnList).each(function(index){
					          $(this)[0].type = $(this)[0].type.replace("E","B");
				          });
				          return returnList;
			          }
		          }else{
			          return [];
		          }
	          },
	          checkPingCangHouDataValidation:function(){
		          $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
			          if($($(this).find(".del_ch").parent().parent()).find("td").eq(4).text()!="100"){
				          return false;
			          }
		          });
		          return true;
	          },
	          getNeedPingCangOrderList:function(){
		          var withType = $("input[name='orderType']:checked").val();
		          var returnBetList = [];
		          var returnEatList = [];
		          var returnList = [];
		          var CheckType = [];
		          if(withType.length>0){
			          if("WP" == withType){
				          CheckType = ['WPB','WPE','WB','WE','PB','PE']
			          }
			          if("QP" == withType){
				          CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			          }
			          if("Q" == withType){
				          CheckType = ['FCB','FCE','QB','QE']
			          }
			
			          var allList = ContentScript.GetAllHadTransactionData();
			
			          if("WP" == withType){
				          var WPBList =[];
				          var WPEList =[];
				          var WBList =[];
				          var WEList =[];
				          var PBList =[];
				          var PEList =[];
				          $(allList).each(function(index){
					          var temp = $(this)[0];
					          if($(this)[0].type =="DBmr"){
						          //matches rdfb fb x y t 2 4 5 5 78 0/16
						          if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						             temp.type= "WPB";
						             temp.id = temp.matches + temp.rdfb;
						             temp.fb = parseInt(temp.fb)*(-1);
						             temp.x =  parseInt(temp.x)*(-1);
						             WPBList.push(temp);
						          }
						          if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						             temp.type= "PB";
						             temp.id = temp.matches + temp.rdfb;
						             temp.fb = parseInt(temp.fb)*(-1);
						             temp.x =  parseInt(temp.x)*(-1);
						             PBList.push(temp);
						          }
						          if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							          temp.type= "WB";
							          temp.id = temp.matches + temp.rdfb;
							          temp.fb = parseInt(temp.fb)*(-1);
						   	          temp.x =  parseInt(temp.x)*(-1);
						              WBList.push(temp);
						          }
					          }else{
						          if(CheckType.contains($(this)[0].type)){
							          var temp = $(this)[0];
							          //matches rdfb fb x y t 2 4 5 5 78 0/16
							          switch($(this)[0].type){
								          case "WPB": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(-1);
							   		          temp.x =  parseInt(temp.x)*(-1);
									          WPBList.push(temp);
									          break;
								          }
								          case "WPE": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		          temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									          WPEList.push(temp);
									          break;
								          }
								          case "WB": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(-1);
							   		          temp.x =  parseInt(temp.x)*(-1);
									          WBList.push(temp);
									          break;
								          }
								          case "WE": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		          temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									          WEList.push(temp);
									          break;
								          }
								          case "PE": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		          temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									          PEList.push(temp);
									          break;
								          }
								          case "PB": {
									          temp.id = temp.matches + temp.rdfb;
									          temp.fb = parseInt(temp.fb)*(-1);
							   		          temp.x =  parseInt(temp.x)*(-1);
									          PBList.push(temp);
									          break;
									
								          }
							          }
						          }
					          }
				          });
				  
				          var NoRepeatWPBList = [];
				          var NoRepeatWBList = [];
				          var NoRepeatPBList = [];
				          $(WPBList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(NoRepeatWPBList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          NoRepeatWPBList.push(WPBList[index]);
					          }
				          });
				          $(PBList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(NoRepeatPBList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          NoRepeatPBList.push(PBList[index]);
					          }
				          });
				          $(WBList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(NoRepeatWBList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          NoRepeatWBList.push(WBList[index]);
					          }
				          });
				
				          var wpeListid =[];
				          var notWPERepterList = [];
				          var notWERepterList = [];
				          var notPERepterList = []; 
				
				          $(WPEList).each(function(index){
					          var it = $(this)[0];
					          var hadCount = false;
					          $(notWPERepterList).each(function(i){
						          if(it.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          notWPERepterList.push(WPEList[index]);
					          }
				          });
				
				          $(PEList).each(function(index){
					          var its = $(this)[0];
					          var hadCount = false;
					          $(notPERepterList).each(function(i){
						          if(its.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          notPERepterList.push(PEList[index]);
					          }
				          });
				
				          $(WEList).each(function(index){
					          var itw = $(this)[0];
					          var hadCount = false;
					          $(notWERepterList).each(function(i){
						          if(itw.id==$(this)[0].id){
							          $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							          $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							          hadCount = true;
						          }
					          });
					          if(!hadCount){
						          notWERepterList.push(WEList[index]);
					          }
				          });
				
				          $(notWPERepterList).each(function(index){
					          var temp = $(this)[0];
					          $(NoRepeatWPBList).each(function(i){
						          if(temp.id == $(this)[0].id){
							          temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							          temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						          }
					          });
					          if(temp.fb>0 && temp.x>0){
						          returnList.push(temp);
					          }
				          });
				          $(notWERepterList).each(function(index){
					          var temp = $(this)[0];
					          $(NoRepeatWBList).each(function(i){
						          if(temp.id == $(this)[0].id){
							          temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							          temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						          }
					          });
					          if(temp.fb>0 && temp.x==0){
						          returnList.push(temp);
					          }
				          });
				
				          $(notPERepterList).each(function(index){
					          var temp = $(this)[0];
					          $(NoRepeatPBList).each(function(i){
						          if(temp.id == $(this)[0].id){
							          temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							          temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						          }
					          });
					          if(temp.fb==0 && temp.x>0){
						          returnList.push(temp);
					          }
				          });
				
				          $(returnList).each(function(index){
					          $(this)[0].type = $(this)[0].type.replace("E","B");
				          });
				
				          return returnList;
				
			          }else{
				          var returnEatList=[];
				          $(allList).each(function(index){
					          if(CheckType.contains($(this)[0].type)){
						          if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							          if($(this)[0].type.indexOf("E")>=0){
								          var it = $(this)[0];
								          var hadCount = false;
								          $(returnEatList).each(function(i){
									          if(it.id==$(this)[0].id){
										          $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										          hadCount = true;
									          }
								          });
								          if(!hadCount){
									          allList[index].x = parseInt(allList[index].x);
									          returnEatList.push(allList[index]);
								          }
							          }
							          if($(this)[0].type.indexOf("B")>=0){
								          var it = $(this)[0];
								          var hadCount = false;
								          $(returnEatList).each(function(i){
									          if(it.id==$(this)[0].id){
										          $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										          hadCount = true;
									          }
								          });
								          if(!hadCount){
									          allList[index].x = parseInt(allList[index].x)*(-1);
									          returnEatList.push(allList[index]);
								          }
							          }	
						          }
					          }
					
				          });
				
				          $(returnEatList).each(function(i){
					          var item = $(this)[0];
					          if(item.x>0){
						          returnList.push(item);
					          }
				          })
				
				          $(returnList).each(function(index){
					          $(this)[0].type = $(this)[0].type.replace("E","B");
				          });
				          return returnList;
			          }
		          }else{
			          return [];
		          }
	          },
	          ticketByFloat:function(item,type){
		          var result = 0;
		          if(type=="Q"){
			          result = item;
		          }else{
			          if(item==0){
				          result = 0;
			          }else{
				          if(item%5 !=0){
					          result = item + (5 - item%5);
				          }else{
					          result = item;
				          }
			          }
		          }
		          return result
	          },
	          withOrderOnInit:function(pushData){
		          //真实的跟单操作
		          $(pushData).each(function(i){
			          var item = $(this)[0];
				          var signInfo = ContentScript.GetSignInInfo();
							          var postData = {};
							          postData.task = "betBox";
							          postData.combo =0;
							          postData.Tix =  ContentScript.ticketByFloat(parseInt(item.ticket),"Q");
							          postData.Race = parseInt($("#view1").val());
							          var hourse1,hourse2;
							          //如果含有括号特殊处理一下
							          if(item.type == "Q"){
								          hourse1 = item.cc;
								          hourse2 = item.cc2;
								          postData.fctype = 0;
							          }else{
								          hourse1 = item.cc;
								          hourse2 = item.cc2;
								          postData.fctype = 1;
							          }
							          postData.Hs1 = hourse1;
							          postData.Hs2 = hourse2;
							          postData.Hs3 = "";
							          postData.Hs4 = "";
							          postData.Hs5 = "";
							          postData.Hs6 = "";
							          postData.Hs7 = "";
							          postData.Hs8 = "";
							          //postData.fctype = 0;
							          postData.Q = "Q";
							          if(ContentScript.PageConfig.EatBetType == "Eat"){
								          postData.type = "EAT";
								          postData.amount = ContentScript.PageConfig.EatDiscount;
							          }else{
								          postData.type = "BET";
								          postData.amount = ContentScript.PageConfig.BetDiscount;
							          }
							          postData.fclmt = ContentScript.PageConfig.LimitStart;
								
							          postData.overflow = "1";
							          //postData.amount = "100";
							          postData.race_type = signInfo.RaceType;
							          postData.race_date = signInfo.RaceDate;
							          postData.show = parseInt($("#view1").val());
							          postData.rd = Math.random();
							
							          console.log(postData);
							          //forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							          $.ajax({
							                        type: "get",
							                        url: ContentScript.urlX +"/forecast",
							                       data: postData,
							                        success: function (msg) {
							              	          console.log(msg);
							                        },
							                        error:function(e){
							              	          console.log(e);
							                        }
							          });
						 
		          });
		          $("#btnStart").show();
	          },
	          GetAllTransactionData:function(){
		          var result = [];
		          //<td>6</td>
		          //<td class="RD F_B">FC</td>
		          //<td class="F_B ">4-5</td>
		          //<td id="FCE_6_4-5_100_700x">2</td>
		          //<td id="FCE_6_4-5_100_700y">100</td>
		          //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		          //<td class="">吃</td>
		
		          //<td>2</td>
		          //<td class="F_B">4</td>
		          //<td id="PE_2_4_78_0/16_0x">0</td>
		          //<td id="PE_2_4_78_0/16_0y">5</td>
		          //<td id="PE_2_4_78_0/16_0z">78</td>
		          //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		          //<td class="">吃</td></tr>
		          $(ContentScript.txn_mode_check_item).each(function(i){
			          var type = ContentScript.txn_mode_check_item[i];
			          $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				          var temp = "";
				          $(this).find("td").each(function(item){
					          temp += $(this).text()+"$";
				          })
				          if(temp.length>0){
					          var tempArray = temp.split("$");
					          var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					          item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					          result.push(item);
				          }
			          });
		          });
		
		          return result;
	          },
	          GetCJCount:function(){
		          var result = 0;
			          $(window.frames["frmTRANS"].document).find("tbody[id^='C'] tr").each(function(){
				          result += parseFloat($(this).text());
			          });
		          return result;
	          },
	          GetAllHadTransactionData:function(){
		          var result = [];
		          $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			          var type = ContentScript.txn_mode_check_item[i];
			          $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				          var temp = "";
				          $(this).find("td").each(function(item){
					          temp += $(this).text()+"$";
				          })
				          if(temp.length>0){
					          var tempArray = temp.split("$");
					          var id = tempArray[0]+tempArray[1]+tempArray[2];
					          item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					          result.push(item);
				          }
			          });
		          });
		
		          return result;
	          },
	
	          CreateHtmlElement:function(){
		          var htmlList = '<div id="drag" style="background:white;width: 330px; height: 200px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
                  htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
                  htmlList +='<table style="width:100%">';
                  htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
                  htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
                  htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
                  htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
                  htmlList +='&nbsp;&nbsp;孔位:<input id="KongWei" type="number" step="10" style="width:80px;" size="4" value="" />'
                  htmlList +='</td></tr>';
                  htmlList +='<tr style="line-height: 30px;" ><td>';
		          htmlList +='&nbsp;&nbsp;过滤:<input id="LimitWhere1" type="number" step="10" style="width: 40px;" size="4" value="" />'
		          htmlList +='-<input id="LimitWhere2" type="number" step="10" style="width: 40px;" size="4" value="" />'
		          htmlList +='</td>'; 
                  htmlList +='<td>';
                  htmlList +='估计:<input id="GJCount" type="number" step="10" style="width: 40px;" size="4" value="" />';
                  htmlList +='成交:<input id="CJCount" type="number" step="10" style="width: 40px;" size="4" value="" />';
                  htmlList +='</td>'; 
                  htmlList +='</tr>'; 
                  htmlList +='<tr style="line-height: 30px;"><td>';
                  htmlList +='<input type= "radio" name="EatBetType"  value="Eat" checked="checked" id="EatType"/>吃折头:<input id="EatDiscount" type="number" step="10" style="width: 40px;" size="4" value="" />';
                  htmlList +='</td>'; 
                  htmlList +='<td>';
                  htmlList +='<input type= "radio" name="EatBetType"  value="Bet" checked="checked" id="BetType"/>赌折头:<input id="BetDiscount" type="number" step="10" style="width: 40px;" size="4" value="" />';
                  htmlList +='</td>'; 
                  htmlList +='</tr>'; 
                  htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
                  htmlList +='&nbsp;&nbsp;极限:<input id="LimitStart" type="number" step="10" style="width: 40px;" size="4" value="700" />';
                  htmlList +='/<input id="LimitEnd" type="number" step="10" style="width: 40px;" size="4" value="700" />';
                  htmlList +='</td>'; 
                  htmlList +='</tr>'; 
                  htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
       	          htmlList +='</td><td style="text-align:right">';
                  htmlList +='<input type="button" id="btnStart" value="购买" />';
                  htmlList +='</td></tr>';
                  htmlList +='</table>';
                  htmlList += '</div>';
        
                  $("body").append(htmlList);
	          },
	          EatButtonEvent:function(){
		          var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
		          if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
						          $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr").each(function(index){
								          var obj = $($(this).find(".del2_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
								          PostHelp.AjaxDeleteData(obj);
								          $($(this).find(".del2_ch").parent().parent()).hide();
						          });
						
		          }
	          },
	          BetButtonEvent:function(){
		          var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
		          if(greenList!=null && greenList!=undefined && greenList.length>0 ){
				          $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
						          var obj = $($(this).find(".del_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
						          PostHelp.AjaxDeleteData(obj);
						          $($(this).find(".del_ch").parent().parent()).hide();
				          });
				
		          }
	          },
	          EatButtonEventByMatches:function(match){
		          var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
		          if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
						          $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr").each(function(index){
								          var obj = $($(this).find(".del2_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
								          var li=obj.split(",");
								          var race=li[5];
								          if(match==race){
									          PostHelp.AjaxDeleteData(obj);
									          $($(this).find(".del2_ch").first().parent().parent()).hide();
								          }
						          });
						
		          }
	          },
	          BetButtonEventByMatches:function(match){
		          var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
		          if(greenList!=null && greenList!=undefined && greenList.length>0 ){
				          $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
						          var obj = $($(this).find(".del_ch").parent().parent()).attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");
						          var li=obj.split(",");
						          var race=li[5];
						          if(match==race){
							          PostHelp.AjaxDeleteData(obj);
							          $($(this).find(".del_ch").first().parent().parent()).hide();
						          }
				          });
		          }
	          },
	          HtmlAddDragEvent:function(){
			          var _move = false; //移动标记  
                      var _x, _y; //鼠标离控件左上角的相对位置  
                      $("#drag").click(function () {
                          //alert("click");//点击（松开后触发）  
                      }).mousedown(function (e) {
                          _move = true;
                          _x = e.pageX - parseInt($("#drag").css("left"));
                          _y = e.pageY - parseInt($("#drag").css("top"));
                      });
                      $(document).mousemove(function (e) {
                          if (_move) {
                              var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                              var y = e.pageY - _y;
                              $("#drag").css({ top: y, left: x }); //控件新位置  
                          }
                      }).mouseup(function () {
                          _move = false;
                      });
	          }
          }

          PostHelp={
	          urlX: "http://"+window.location.host,
	          fcfrm1 :  $("#fcfrm1"),
	          fcfrm2 :  $("#fcfrm2"),
	          chkKBBet:function(f){
		          f = PostHelp.fcfrm1;
		          if(f.find("input[name='fctype']").val()  == "0"){
			          PostHelp.chkKB1(f);
		          } else if(f.find("input[name='fctype']").val() == "1"){
			          PostHelp.chkKB3(f);
		          }
	          },
              chkKBEat:function(f){
		          f = PostHelp.fcfrm2;
		          if(f.find("input[name='fctype']").val()  == "0"){
			          PostHelp.chkKB2(f);
		          } else if(f.find("input[name='fctype']").val() == "1"){
			          PostHelp.chkKB4(f);
		          }
	          },
              chkKB1:function(f){
		          f=PostHelp.fcfrm1;
		          var combo;
		          var hssA = "";
		          if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		             && f.find("input[name='Hss']").val() != undefined
		          ){
			          hssA = f.find("input[name='Hss']").val();
		          }
		          if(hssA.indexOf('>')>-1) {
			          combo=1;
		          } else {
			          combo=0;
		          }
		          if(true){
			          //f.Order.disabled = true;
			          var hss = "";
			          if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			             && f.find("input[name='Hss']").val() != undefined	
			          ){
				          if(f.find("input[name='Hss']").val().length>0){
					          hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				          }
			          }
			          if(hss=="")
			          {
				          hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			          }
			          PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		          }
	          },
              chkKB2:function(f){
		          f=PostHelp.fcfrm2;
		          var combo=f.find("input[name='banker2']").val();
		          if(true){
			          //f.Order.disabled = true;
			          //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			          //f.Order.disabled = true;
			          var hss = "";
			          if(f.find("input[name='Hss']")){
				          if(f.find("input[name='Hss']").val().length>0){
					          hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				          }
			          }	
			          if(hss=="")
			          {
				          hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			          }
			          PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		          }
	          },
              chkKB3:function(f){
		          f=PostHelp.fcfrm1;
		          var combo;
		          var hssA = "";
		          if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			          && f.find("input[name='Hss']").val() != undefined
		          ){
			          hssA = f.find("input[name='Hss']").val()
		          }
		          if(hssA.indexOf('>')>-1) {
			          combo=1;
		          } else {
			          combo=0;
		          }
		          if(true){
			          //f.Order.disabled = true;
			          //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			          var hss = "";
			          if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			             && f.find("input[name='Hss']").val() != undefined
			          ){
				          if(f.find("input[name='Hss']").val()!=""){
					          hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				          }
			          }			
			          if(hss=="")
			          {
				          hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			          }
			          PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		          }
	          },
	          chkKB4:function(f){
		          f=PostHelp.fcfrm2;
		          var combo= f.find("input[name='banker2']").val();
		          if(true){
			          f.Order.disabled = true;
			          //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			          var hss = "";
			          if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				          if(f.find("input[name='Hss']").val()!=""){
					          hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				          }
			          }		
			          if(hss=="")
			          {
				          hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			          }
			          PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		          }
	          },
	          chkActBet:function(f){
		          f = PostHelp.fcfrm1;
		          var combo;
		          var check = f.find("input[name='banker1'] :checked");
		          if(check) {
			          combo=1;
		          } else {
			          combo=0;
		          }
		          if(true){
			          //f.Order.disabled = true;
			          PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			          f.find("input[name='Tix']").val() + '&Race=' + 
			          f.find("input[name='Race']").val() + '&Hs1=' + 
			          f.find("input[name='Hs1']").val() + '&Hs2=' + 
			          f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			          f.find("input[name='Hs3']").val() + '&Hs4=' + 
			          f.find("input[name='Hs4']").val() + '&Hs5=' + 
			          f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			          f.find("input[name='Hs6']").val() + '&Hs7=' + 
			          f.find("input[name='Hs7']").val() + '&Hs8=' + 
			          f.find("input[name='Hs8']").val() +'&fctype=' + 
			          f.find("input[name='fctype']").val()  + '&Q=' + 
			          f.find("input[name='Q']").val() + '&type=' + 
			          f.find("input[name='type']").val() + '&overflow=' + 
			          f.find("input[name='overflow']").val() + '&amount=' + 
			          f.find("input[name='amount']").val() + '&fclmt=' + 
			          f.find("input[name='fclmt']").val()  + '&race_type=' + 
			          f.find("input[name='race_type']").val()  + '&race_date=' + 
			          f.find("input[name='race_date']").val()  );	
		          }
	          },
	          chkActEat:function(f){
		          f = PostHelp.fcfrm2;
		          var combo= f.find("input[name='banker2']").val();
		          if(true){
			          //f.Order.disabled = true;
			          PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			          f.find("input[name='Tix']").val() + '&Race=' + 
			          f.find("input[name='Race']").val() + '&Hs1=' + 
			          f.find("input[name='Hs1']").val() + '&Hs2=' + 
			          f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			          f.find("input[name='Hs3']").val() + '&Hs4=' + 
			          f.find("input[name='Hs4']").val() + '&Hs5=' + 
			          f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			          f.find("input[name='Hs6']").val() + '&Hs7=' + 
			          f.find("input[name='Hs7']").val() + '&Hs8=' + 
			          f.find("input[name='Hs8']").val() +'&fctype=' + 
			          f.find("input[name='fctype']").val()  + '&Q=' + 
			          f.find("input[name='Q']").val() + '&type=' + 
			          f.find("input[name='type']").val() + '&overflow=' + 
			          f.find("input[name='overflow']").val() + '&amount=' + 
			          f.find("input[name='amount']").val() + '&fclmt=' + 
			          f.find("input[name='fclmt']").val()  + '&race_type=' + 
			          f.find("input[name='race_type']").val()  + '&race_date=' + 
			          f.find("input[name='race_date']").val()  );
		          }
	          },
	          postData:function(url){
		          var view1 = $("#view1");
		          if(view1) {
				          var y = $("#view1").val();
				          var postion = url  + "&show="+y+ "&rd=" + Math.random();
				          var postionArray = postion.split("?");
				          var postUrl = postionArray[0];
				          var dataUrl = postionArray[1];
				          var dataArray = dataUrl.split('&');
				          var postString ='{';
				          for(var i=0;i< dataArray.length;i++){
					          var itemArray = dataArray[i].split('=');
					          postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				          }
				          postString = postString.substr(0,postString.length-1);
				          postString+='}';
				          var dataJson = $.parseJSON(postString);
				          $.ajax(
				          {
		                       type: "GET",
		                       url: postUrl,		             
		                       data: dataJson,
		                       dataType: "text",
		                       success: function(da)
		                       {
		                       },
		                       error:function (da, status, e){   
	   				           }
	     		          });
		          }
	          },
	          PostDeleteData:function(info){
		          var id,x,type,date,race_type,race
		          var li=info.split(",");
		          id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		          document.getElementById('boxFcBET').style.display = "none";
		          document.getElementById('boxFcEAT').style.display = "none";
		          document.getElementById('boxPfcBET').style.display = "none";
		          document.getElementById('boxPfcEAT').style.display = "none";
		          PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	          },
	          AjaxDeleteData:function(info){
		          var id,x,type,date,race_type,race
		          var li=info.split(",");
		          var y = 0;
		          try{
			          y = view1.options[view1.selectedIndex].value;
		          }catch(e){
			          y = $(".dd-selected-value").val();
		          }
		
		          id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		          $.ajax(
				          {
		                       type: "GET",
		                       url: PostHelp.urlX +"/transactions",		             
		                       data: {
		             	          "type":"del",
		             	          "bid":id,
		             	          "x":x,
		             	          "betType":type,
		             	          "race_date":date,
		             	          "race_type":race_type,
		             	          "q":"q",
						          "race":race,
						          "show":y,
						          "rd":Math.random()
		                       },
		                       dataType: "text",
		                       success: function(da)
		                       {
		                       },
		                       error:function (da, status, e){   
	   				           }   
	   				 
	               });
	          }
          }

          var host =window.location.href;
          if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	          ContentScript.onInit();
          }
       ]]>
    </JSCode>
  </JSFile>

  <JSFile>
    <version>V4</version>
    <JSCode>
      <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }

      ContentScript={
	      txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	      Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	      WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerWithOrderClock:null,
	      timerCountPageEatAndBet:null,
	      StaticAllData:[],
	      AlertMsg:"请输入密码",
	      AlertPassToLater:"软件过期",
	      PassError:"密码错误",
        SinglePath:false,
	      StaticOldAllData:[],
	      StaticCountShowData:[],
	      StaticOldCountShowData:[],
	      HelloKitty:"81dc9bdb52d04dc20036dbd8313ed055",
	      HelloKittyTime:["212112eece862ca4a3da112f217288fb","519edc8db508d1c088f793f2c3647e6f"],
	      DaoQiTime:"YYYY-MM-DD",
	      PageConfig:{
		      MaxCount:90,
		      Discount:80,
		      LimitStart:700,
		      LimitEnd:700,
		      Percent:1
	      },
	      showCountWithWhere:function(){
		      ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		      ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		      if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			      ContentScript.showCountPageEatAndBet();
		      }			
	      },
	      setLimitAndDiscount:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      if("WP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(82);
			      $("#LimitStart1").val(240);
			      $("#LimitEnd1").val(60);
			
			      $("#Discount2").val(82);
			      $("#LimitStart2").val(240);
			      $("#LimitEnd2").val(60);
		      }
		      if("QP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(400);
			      $("#LimitEnd1").val(400);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(400);
			      $("#LimitEnd2").val(400);
		      }
		      if("Q" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(700);
			      $("#LimitEnd1").val(700);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(700);
			      $("#LimitEnd2").val(700);
		      }
	      },
	      showCountPageEatAndBet:function(){
			      var CheckType = [];
			      var withType = $("input[name='orderType']:checked").val();
			      var eat =0;
			      var bet =0;
			      var betIds =[];
			      var eatIds =[];
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      $(ContentScript.StaticCountShowData).each(function(i){
				      if(CheckType.contains($(this)[0].type)){
					      if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						      bet++;
						      betIds.push($(this)[0].id);
					      }
					      if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						      eat++;
						      eatIds.push($(this)[0].id);
					      }
				      }
			      })
			      $("#eatCount").text(eat);
			      $("#betCount").text(bet);
		
	      },
	      GetAllEatTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("E")>=0 && $(this)[0].type != 'DEmr'){
				      result.push($(this)[0]);
			      } 
		      });
		      return result;
	      },
	      GetAllBetTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("B")>=0 && $(this)[0].type != 'DBmr'){
				      result.push($(this)[0]);
			      }
		      });
		      return result;
	      },
	      GetAllDBmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DBmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPB";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QB";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      GetAllDEmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DEmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPE";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QE";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
          },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      MaxCountEvent:function(){
		      try{
			      ContentScript.PageConfig.MaxCount = $("#MaxCount").val();
		      }catch(e){
			      ContentScript.PageConfig.MaxCount = 90;
			      $("#MaxCount").val(90);
		      }
		
		      var type = $("input[name='DiscountType']:checked").val();
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.Discount = $("#Discount1").val();
			      }else{
				      ContentScript.PageConfig.Discount = $("#Discount2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.Discount = 80;
			      $("#Discount").val(80);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitStart = $("#LimitStart1").val();
			      }else{
				      ContentScript.PageConfig.LimitStart = $("#LimitStart2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitStart = 700;
			      $("#LimitStart").val(700);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd1").val();
			      }else{
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitEnd = 700;
			      $("#LimitEnd").val(700);
		      }
		
		      ContentScript.PageConfig.Percent = $("#Percent").val();
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      PrecentChangeEvent:function(){
		      $("#Percent").bind("change",function(){
			      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				      $("#btnBanlance").show();
			      }else{
				      $("#btnBanlance").hide();
			      }
			      ContentScript.PageConfig.Percent =$("#Percent").val();
		      });
	      },
	      allOnitEvent:function(){
		      //创建用户界面
						      ContentScript.CreateHtmlElement();
						      //绑定拖拽事件
						      ContentScript.HtmlAddDragEvent();
						      $("#daoqitime").text(ContentScript.DaoQiTime);
						      //限制投注数
						      ContentScript.MaxCountEvent();
						      //多倍控制
						      ContentScript.PrecentChangeEvent();
						      //统计吃票的计时器
						      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
						
						      $("#btnEnd").hide();
						      $("input[name='orderType']").bind("click",function(){
							      ContentScript.showCountPageEatAndBet();
							      ContentScript.setLimitAndDiscount();
						      });
						      //删单
						      $("#btnEatDelete").bind("click",function(){
							      $(this).hide();
							      var isExists = $(window.frames["frmTRANS"].document).find(".del2_ch");
							      if(isExists!=null && isExists!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del2_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      $("#btnBetDelete").bind("click",function(){
							      $(this).hide();
							      var isExistsDel = $(window.frames["frmTRANS"].document).find(".del_ch");
							      if(isExistsDel!=null && isExistsDel!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      //开始
						      $("#btnStart").bind("click",function(){
                      ContentScript.SinglePath = false;
							        ContentScript.StaticOldAllData = [];
							        ContentScript.StaticAllData = [];
							        $("#btnStart").hide();
							        $("#btnEnd").show();
							        ContentScript.MaxCountEvent();
							        //创建定时吃票事件
							        ContentScript.timerWithOrderClock = self.setInterval(function(){
							            var eatCount = $("#eatCount").text();
							            if(eatCount == ""){
							    	        eatCount = 0;
							            }else{
							    	        eatCount = parseInt(eatCount);
							            }
							            var MaxCount = parseInt($("#MaxCount").val());
							            if(eatCount >= MaxCount){
							    	        //到达限制数量 删除所有吃单
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
							            }
								        clearInterval(ContentScript.timerCountPageEatAndBet);
								        ContentScript.StaticOldAllData = ContentScript.StaticAllData
								        ContentScript.StaticAllData = ContentScript.GetAllHadTransactionData();
								        if(JSON.stringify(ContentScript.StaticOldAllData) != JSON.stringify(ContentScript.StaticAllData)){
									        if(ContentScript.SinglePath){
									 	        //nothing
									        }else{
										        ContentScript.StaticCountShowData = ContentScript.StaticAllData;
										        ContentScript.showCountPageEatAndBet();
										        ContentScript.needAjaxCount=ContentScript.getNeedWithOrderList();
										        ContentScript.withOrderOnInit(ContentScript.needAjaxCount,false);
									        }
									
								        }
								
								        var showTitle = "";
								        if(window.location.href.indexOf("playerhk.jsp")>=0){
									        showTitle = $("#newsLineByLoc").text();
								        }
								        if(window.location.href.indexOf("Q.jsp")>=0){
									        showTitle = $("#news1st").text();
								        }
								
								        if(((showTitle.indexOf("进闸完毕")>=0 
								           && showTitle.indexOf("准备开跑")>=0)||(showTitle.indexOf("剩 1")>=0))
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        var ret = 0;
									        try{
										        var regexp = /剩 [0-9]+/
										        var firststring = regexp.exec(showTitle);
										        var match = firststring[0].replace("剩","").replace(" ","")
										        ret= parseInt(match);
									        }catch(e){
										        ret = 1	
									        }
									        if(ret==1){
										        ContentScript.SinglePath = true;
										        //先删除所有没有成交的数据
										        setTimeout(function(){
											        ContentScript.EatButtonEvent();
										        },0);
										        setTimeout(function(){
											        ContentScript.BetButtonEvent();
										        },0);
										        //然后100%的平仓数据交易
										        setTimeout(function(){
											        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										        },1000);
										
										        //平仓后结束
										        if(ContentScript.timerWithOrderClock!=null){
											        clearInterval(ContentScript.timerWithOrderClock);
										        }
										        ContentScript.timerWithOrderClock = null;
										        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
										        $("#btnStart").show();
										        $("#btnEnd").hide();
									        }
								        }
								        if((showTitle.indexOf("剩 2")>=0 ||  showTitle.indexOf("剩 3")>=0)
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        ContentScript.SinglePath = true;
								        }
							        },1000);
						      });
						
						      //结束
						      $("#btnEnd").bind("click",function(){
							      if(ContentScript.timerWithOrderClock!=null){
								      clearInterval(ContentScript.timerWithOrderClock);
							      }
							      ContentScript.timerWithOrderClock = null;
							      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							      $("#btnStart").show();
							      $("#btnEnd").hide();
						      });
						
						      //平仓
						      $("#btnBanlance").bind("click",function(){
							        if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
									        //平仓后结束
									        if(ContentScript.timerWithOrderClock!=null){
										        clearInterval(ContentScript.timerWithOrderClock);
									        }
									        ContentScript.timerWithOrderClock = null;
									        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
									        $("#btnStart").show();
									        $("#btnEnd").hide();
									
									        $(this).hide();
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        setTimeout(function(){
										        ContentScript.BetButtonEvent();
									        },0);
									        //然后100%的平仓数据交易
									        setTimeout(function(){
										        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
									        },1000);
									        $(this).show();
							        }else{
								        alert("平仓功能只能在倍率是1的情况下使用！");
							     }
						});
				
	      },
        checkPingCangHouDataValidation:function(){
		      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
			      if($($(this).find(".del_ch").parent().parent()).find("td").eq(4).text()!="100"){
				      return false;
			      }
		      });
		      return true;
	      },
	      getNeedWithOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllTransactionData();
			      var notCommitBetList=[];
			      var returnEatList=[];
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      it.x = parseInt(it.x)*parseInt($("#Percent").val())
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      returnEatList.push(it);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					      if($(this)[0].type =="DBmr"){
						      var it = $(this)[0];
						      var hadCount = false;
						      $(notCommitBetList).each(function(i){
							      if(it.id==$(this)[0].id){
								      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								      hadCount = true;
							      }
						      });
						      if(!hadCount){
							      notCommitBetList.push(allList[index]);
						      }
					      }
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      $(notCommitBetList).each(function(){
						      if(item.id==$(this)[0].id){
							      returnEatList[i].x = item.x-$(this)[0].x
						      }
					      });
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      });
			      }			
			
			      $(returnList).each(function(index){
				      $(this)[0].type = $(this)[0].type.replace("E","B");
			      });
			      return returnList;
		      }else{
			      return [];
		      }
	      },
	      getNeedPingCangOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllHadTransactionData();
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      var returnEatList=[];
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x);
									      returnEatList.push(allList[index]);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					
				      });
				
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      })
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				      return returnList;
			      }
		      }else{
			      return [];
		      }
	      },
	      ticketByFloat:function(item,type){
		      var result = 0;
		      if(type=="Q"){
			      result = item;
		      }else{
			      if(item==0){
				      result = 0;
			      }else{
				      if(item%5 !=0){
					      result = item + (5 - item%5);
				      }else{
					      result = item;
				      }
			      }
		      }
		      return result
	      },
	      withOrderOnInit:function(pushData,isBalance){
		      //真实的跟单操作
		      $(pushData).each(function(i){
			      var item = $(this)[0];
			      if(true){
				      var signInfo = ContentScript.GetSignInInfo();
				      if(['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'].contains(item.type)){
							      var postData = {};
							      postData.task = "betBox";
							      postData.combo =0;
							      //<td>6</td>
							      //<td class="RD F_B">FC</td>
							      //<td class="F_B ">4-5</td>
							      //<td id="FCE_6_4-5_100_700x">2</td>
							      //<td id="FCE_6_4-5_100_700y">100</td>
							      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
							      //<td class="">吃</td>
							
							      postData.Tix =  ContentScript.ticketByFloat(parseInt(item.x),"Q");
							      postData.Race = parseInt(item.matches);
							      var hourse1,hourse2;
							      //如果含有括号特殊处理一下
							      if(item.fb.indexOf("(")<0){
								      hourse1 = item.fb.split("-")[0];
								      hourse2 = item.fb.split("-")[1];
								      postData.fctype = 0;
							      }else{
								      hourse1 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
								      hourse2 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
								      postData.fctype = 1;
							      }
							      postData.Hs1 = hourse1;
							      postData.Hs2 = hourse2;
							      postData.Hs3 = "";
							      postData.Hs4 = "";
							      postData.Hs5 = "";
							      postData.Hs6 = "";
							      postData.Hs7 = "";
							      postData.Hs8 = "";
							      //postData.fctype = 0;
							      postData.Q = "Q";
							      if(item.type.indexOf("E")>=0){
								      postData.type = "EAT";
							      }else{
								      postData.type = "BET";
							      }
							
							      if(isBalance){
								      postData.amount = 100;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							      postData.fclmt = ContentScript.PageConfig.LimitStart;
								
							      postData.overflow = "1";
							      //postData.amount = "100";
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							      postData.rd = Math.random();
							
							      console.log(postData);
							      ///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX +"/forecast",
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
						      } 
				      if(['WPB','WPE','WB','WE','PB','PE'].contains($(this)[0].type)){
					
							      var postURL = "";
							      var postData = {};
							      postData.t = "frm";
							      postData.race = item.matches;
							      postData.horse = item.rdfb;
							      //var Proportion = parseInt(ContentScript.PageConfig.Percent);
							      postData.win = ContentScript.ticketByFloat(parseInt(item.fb),"WP");
							      postData.place = ContentScript.ticketByFloat(parseInt(item.x),"WP");
							
							      var postURL ="";
							      postURL ="/bets";
							      //if(item.type.indexOf("E")>=0){
							      //postData.type = "eat";
							      //postURL ="/bets";
							      //}else{
							      //postData.type = "bet";
							      //postURL = "/bookings";
							      //}
							
							      if(isBalance){
								      postData.amount = 99;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							
							      //postData.limit = ContentScript.PageConfig.LimitStart+"/"+ ContentScript.PageConfig.LimitEnd;
							      postData.l_win = ContentScript.PageConfig.LimitStart;
							      postData.l_place = ContentScript.PageConfig.LimitEnd;
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							
							      if(parseInt(postData.win)>0 && parseInt(postData.place)>0){
								      postData.wptck=1;
							      }else{
								      postData.wptck=0;
							      } 
							      if(parseInt(postData.win)>0 && parseInt(postData.place)==0){
								      postData.wtck=1;
								      postData.l_place = "0";
							      }
							      if(parseInt(postData.win)==0 && parseInt(postData.place)>0){
								      postData.ptck=1;
								      postData.l_win = "0";
							      }
							
							      postData.post = "1";
							      postData.rd = Math.random();
							      console.log(postData);
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX + postURL,
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
					      }
			      }
		      });
	      },
	      GetAllTransactionData:function(){
		      var result = [];
		      //<td>6</td>
		      //<td class="RD F_B">FC</td>
		      //<td class="F_B ">4-5</td>
		      //<td id="FCE_6_4-5_100_700x">2</td>
		      //<td id="FCE_6_4-5_100_700y">100</td>
		      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		      //<td class="">吃</td>
		
		      //<td>2</td>
		      //<td class="F_B">4</td>
		      //<td id="PE_2_4_78_0/16_0x">0</td>
		      //<td id="PE_2_4_78_0/16_0y">5</td>
		      //<td id="PE_2_4_78_0/16_0z">78</td>
		      //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		      //<td class="">吃</td></tr>
		
		      $(ContentScript.txn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	      GetAllHadTransactionData:function(){
		      var result = [];
		      $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2];
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 330px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<table style="width:100%">';
              htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
              htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
              htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
              htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
              htmlList +='&nbsp;&nbsp;限注:<input id="MaxCount" type="number" step="1" style="width: 40px;" size="4" value="300" />';
              htmlList +='&nbsp;倍率:<select id="Percent"><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>20</option><option>50</option><option>100</option></select>';
              //htmlList +='&nbsp;倍率:<input id="Percent" type="number" step="0.1" value="1" style="width: 40px;" size="4">';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">'
              htmlList +='<input type= "radio" name="DiscountType"  value="F1" checked="checked" id="DiscountType1"/>'
              htmlList +='折头:<input id="Discount1" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">';
              htmlList +='<input type= "radio" name="DiscountType" value="F2" id="DiscountType2"/>';
              htmlList +='折头:<input id="Discount2" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;<input id="AutoPingCang" type="checkbox" value="1" />自动平仓'
              //htmlList +='比例:<input id="Percent" type="number" step="1" style="width: 40px;" size="4" value="1" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
              htmlList +='吃:<span id="eatCount" style="color:red"></span>&nbsp;赌:<span id="betCount" style="color:red" ></span>&nbsp;';
              htmlList +='</td><td style="text-align:right">';
              htmlList +='<input type="button" id="btnStart" value="开始" />';
              htmlList +='<input type="button" id="btnEnd" value="停止" />';
              htmlList +='<input type="button" id="btnBanlance" value="平仓" />';
              htmlList +='<input type="button" id="btnEatDelete" value="删吃单" />';
              htmlList +='<input type="button" id="btnBetDelete" value="删赌单" />';
              htmlList +='</td></tr>';
              htmlList +='</table>';
              htmlList += '</div>';
        
              $("body").append(htmlList);
	      },
	      EatButtonEvent:function(){
            var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
            if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
			      var obj = $(window.frames["frmTRANS"].document).find(".del2_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
      		      PostHelp.AjaxDeleteData(obj);
      	      }
        },
        BetButtonEvent:function(){
      	    var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
      	    if(greenList!=null && greenList!=undefined && greenList.length>0 ){
			        var obj = $(window.frames["frmTRANS"].document).find(".del_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
			        PostHelp.AjaxDeleteData(obj);
      	    }
        },
	      HtmlAddDragEvent:function(){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  $("#drag").click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt($("#drag").css("left"));
                      _y = e.pageY - parseInt($("#drag").css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          $("#drag").css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }

      PostHelp={
	      urlX: "http://"+window.location.host,
	      fcfrm1 :  $("#fcfrm1"),
	      fcfrm2 :  $("#fcfrm2"),
	      chkKBBet:function(f){
		      f = PostHelp.fcfrm1;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB1(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB3(f);
		      }
	      },
          chkKBEat:function(f){
		      f = PostHelp.fcfrm2;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB2(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB4(f);
		      }
	      },
          chkKB1:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		         && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val();
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined	
			      ){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
          chkKB2:function(f){
		      f=PostHelp.fcfrm2;
		      var combo=f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }	
			      if(hss=="")
			      {
				      hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
          chkKB3:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			      && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val()
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined
			      ){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }			
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
	      chkKB4:function(f){
		      f=PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }		
			      if(hss=="")
			      {
				      hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
	      chkActBet:function(f){
		      f = PostHelp.fcfrm1;
		      var combo;
		      var check = f.find("input[name='banker1'] :checked");
		      if(check) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );	
		      }
	      },
	      chkActEat:function(f){
		      f = PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );
		      }
	      },
	      postData:function(url){
		      var view1 = $("#view1");
		      if(view1) {
				      var y = $("#view1").val();
				      var postion = url  + "&show="+y+ "&rd=" + Math.random();
				      var postionArray = postion.split("?");
				      var postUrl = postionArray[0];
				      var dataUrl = postionArray[1];
				      var dataArray = dataUrl.split('&');
				      var postString ='{';
				      for(var i=0;i< dataArray.length;i++){
					      var itemArray = dataArray[i].split('=');
					      postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				      }
				      postString = postString.substr(0,postString.length-1);
				      postString+='}';
				      var dataJson = $.parseJSON(postString);
				      $.ajax(
				      {
		                   type: "GET",
		                   url: postUrl,		             
		                   data: dataJson,
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }
	     		      });
		      }
	      },
	      PostDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      document.getElementById('boxFcBET').style.display = "none";
		      document.getElementById('boxFcEAT').style.display = "none";
		      document.getElementById('boxPfcBET').style.display = "none";
		      document.getElementById('boxPfcEAT').style.display = "none";
		      PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	      },
	      AjaxDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      var y = 0;
		      try{
			      y = view1.options[view1.selectedIndex].value;
		      }catch(e){
			      y = $(".dd-selected-value").val();
		      }
		
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      $.ajax(
				      {
		                   type: "GET",
		                   url: PostHelp.urlX +"/transactions",		             
		                   data: {
		             	      "type":"del",
		             	      "bid":id,
		             	      "x":x,
		             	      "betType":type,
		             	      "race_date":date,
		             	      "race_type":race_type,
		             	      "q":"q",
						      "race":race,
						      "show":y,
						      "rd":Math.random()
		                   },
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }   
	   				 
	           });
	      }
      }

      var host =window.location.href;
      if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
      ]]>
    </JSCode>
  </JSFile>

  <JSFile>
    <version>V5</version>
    <JSCode>
      <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }

      ContentScript={
	      txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	      Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	      WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerWithOrderClock:null,
	      timerCountPageEatAndBet:null,
	      StaticAllData:[],
	      AlertMsg:"请输入密码",
	      AlertPassToLater:"软件过期",
	      PassError:"密码错误",
        SinglePath:false,
	      StaticOldAllData:[],
	      StaticCountShowData:[],
	      StaticOldCountShowData:[],
	      HelloKitty:"81dc9bdb52d04dc20036dbd8313ed055",
	      HelloKittyTime:["212112eece862ca4a3da112f217288fb","519edc8db508d1c088f793f2c3647e6f"],
	      DaoQiTime:"YYYY-MM-DD",
	      PageConfig:{
		      MaxCount:90,
		      Discount:80,
		      LimitStart:700,
		      LimitEnd:700,
		      Percent:1
	      },
	      showCountWithWhere:function(){
		      ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		      ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		      if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			      ContentScript.showCountPageEatAndBet();
		      }			
	      },
	      setLimitAndDiscount:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      if("WP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(82);
			      $("#LimitStart1").val(240);
			      $("#LimitEnd1").val(60);
			
			      $("#Discount2").val(82);
			      $("#LimitStart2").val(240);
			      $("#LimitEnd2").val(60);
		      }
		      if("QP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(400);
			      $("#LimitEnd1").val(400);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(400);
			      $("#LimitEnd2").val(400);
		      }
		      if("Q" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(700);
			      $("#LimitEnd1").val(700);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(700);
			      $("#LimitEnd2").val(700);
		      }
	      },
	      showCountPageEatAndBet:function(){
			      var CheckType = [];
			      var withType = $("input[name='orderType']:checked").val();
			      var eat =0;
			      var bet =0;
			      var betIds =[];
			      var eatIds =[];
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      $(ContentScript.StaticCountShowData).each(function(i){
				      if(CheckType.contains($(this)[0].type)){
					      if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						      bet++;
						      betIds.push($(this)[0].id);
					      }
					      if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						      eat++;
						      eatIds.push($(this)[0].id);
					      }
				      }
			      })
			      $("#eatCount").text(eat);
			      $("#betCount").text(bet);
		
	      },
	      GetAllEatTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("E")>=0 && $(this)[0].type != 'DEmr'){
				      result.push($(this)[0]);
			      } 
		      });
		      return result;
	      },
	      GetAllBetTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("B")>=0 && $(this)[0].type != 'DBmr'){
				      result.push($(this)[0]);
			      }
		      });
		      return result;
	      },
	      GetAllDBmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DBmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPB";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QB";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      GetAllDEmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DEmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPE";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QE";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
          },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      MaxCountEvent:function(){
		      try{
			      ContentScript.PageConfig.MaxCount = $("#MaxCount").val();
		      }catch(e){
			      ContentScript.PageConfig.MaxCount = 90;
			      $("#MaxCount").val(90);
		      }
		
		      var type = $("input[name='DiscountType']:checked").val();
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.Discount = $("#Discount1").val();
			      }else{
				      ContentScript.PageConfig.Discount = $("#Discount2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.Discount = 80;
			      $("#Discount").val(80);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitStart = $("#LimitStart1").val();
			      }else{
				      ContentScript.PageConfig.LimitStart = $("#LimitStart2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitStart = 700;
			      $("#LimitStart").val(700);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd1").val();
			      }else{
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitEnd = 700;
			      $("#LimitEnd").val(700);
		      }
		
		      ContentScript.PageConfig.Percent = $("#Percent").val();
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      PrecentChangeEvent:function(){
		      $("#Percent").bind("change",function(){
			      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				      $("#btnBanlance").show();
			      }else{
				      $("#btnBanlance").hide();
			      }
			      ContentScript.PageConfig.Percent =$("#Percent").val();
		      });
	      },
	      allOnitEvent:function(){
		      //创建用户界面
						      ContentScript.CreateHtmlElement();
						      //绑定拖拽事件
						      ContentScript.HtmlAddDragEvent();
						      $("#daoqitime").text(ContentScript.DaoQiTime);
						      //限制投注数
						      ContentScript.MaxCountEvent();
						      //多倍控制
						      ContentScript.PrecentChangeEvent();
						      //统计吃票的计时器
						      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
						
						      $("#btnEnd").hide();
						      $("input[name='orderType']").bind("click",function(){
							      ContentScript.showCountPageEatAndBet();
							      ContentScript.setLimitAndDiscount();
						      });
						      //删单
						      $("#btnEatDelete").bind("click",function(){
							      $(this).hide();
							      var isExists = $(window.frames["frmTRANS"].document).find(".del2_ch");
							      if(isExists!=null && isExists!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del2_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      $("#btnBetDelete").bind("click",function(){
							      $(this).hide();
							      var isExistsDel = $(window.frames["frmTRANS"].document).find(".del_ch");
							      if(isExistsDel!=null && isExistsDel!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      //开始
						      $("#btnStart").bind("click",function(){
                      ContentScript.SinglePath = false;
							        ContentScript.StaticOldAllData = [];
							        ContentScript.StaticAllData = [];
							        $("#btnStart").hide();
							        $("#btnEnd").show();
							        ContentScript.MaxCountEvent();
							        //创建定时吃票事件
							        ContentScript.timerWithOrderClock = self.setInterval(function(){
							            var eatCount = $("#eatCount").text();
							            if(eatCount == ""){
							    	        eatCount = 0;
							            }else{
							    	        eatCount = parseInt(eatCount);
							            }
							            var MaxCount = parseInt($("#MaxCount").val());
							            if(eatCount >= MaxCount){
							    	        //到达限制数量 删除所有吃单
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
							            }
								        clearInterval(ContentScript.timerCountPageEatAndBet);
								        ContentScript.StaticOldAllData = ContentScript.StaticAllData
								        ContentScript.StaticAllData = ContentScript.GetAllHadTransactionData();
								        if(JSON.stringify(ContentScript.StaticOldAllData) != JSON.stringify(ContentScript.StaticAllData)){
										        ContentScript.StaticCountShowData = ContentScript.StaticAllData;
										        ContentScript.showCountPageEatAndBet();
										        ContentScript.needAjaxCount=ContentScript.getNeedWithOrderList();
										        ContentScript.withOrderOnInit(ContentScript.needAjaxCount,false);
								        }
								
								        var showTitle = "";
								        if(window.location.href.indexOf("playerhk.jsp")>=0){
									        showTitle = $("#newsLineByLoc").text();
								        }
								        if(window.location.href.indexOf("Q.jsp")>=0){
									        showTitle = $("#news1st").text();
								        }
								        
								         if((showTitle.indexOf("剩 2")>=0 ||  showTitle.indexOf("剩 3")>=0 || showTitle.indexOf("剩 4")>=0 ||showTitle.indexOf("剩 5")>=0 )
								            && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
                          //删单后结束
										      if(ContentScript.timerWithOrderClock!=null){
											       clearInterval(ContentScript.timerWithOrderClock);
										      }
										      ContentScript.timerWithOrderClock = null;
										      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
										      $("#btnStart").show();
										      $("#btnEnd").hide();
								        }
							        },1000);
						      });
						
						      //结束
						      $("#btnEnd").bind("click",function(){
							      if(ContentScript.timerWithOrderClock!=null){
								      clearInterval(ContentScript.timerWithOrderClock);
							      }
							      ContentScript.timerWithOrderClock = null;
							      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							      $("#btnStart").show();
							      $("#btnEnd").hide();
						      });
						
						      //平仓
						      $("#btnBanlance").bind("click",function(){
							        if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
									        //平仓后结束
									        if(ContentScript.timerWithOrderClock!=null){
										        clearInterval(ContentScript.timerWithOrderClock);
									        }
									        ContentScript.timerWithOrderClock = null;
									        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
									        $("#btnStart").show();
									        $("#btnEnd").hide();
									
									        $(this).hide();
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        setTimeout(function(){
										        ContentScript.BetButtonEvent();
									        },0);
									        //然后100%的平仓数据交易
									        setTimeout(function(){
										        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
									        },1000);
									        $(this).show();
							        }else{
								        alert("平仓功能只能在倍率是1的情况下使用！");
							     }
						});
				
	      },
        checkPingCangHouDataValidation:function(){
		      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
			      if($($(this).find(".del_ch").parent().parent()).find("td").eq(4).text()!="100"){
				      return false;
			      }
		      });
		      return true;
	      },
	      getNeedWithOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllTransactionData();
			      var notCommitBetList=[];
			      var returnEatList=[];
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      it.x = parseInt(it.x)*parseInt($("#Percent").val())
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      returnEatList.push(it);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					      if($(this)[0].type =="DBmr"){
						      var it = $(this)[0];
						      var hadCount = false;
						      $(notCommitBetList).each(function(i){
							      if(it.id==$(this)[0].id){
								      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								      hadCount = true;
							      }
						      });
						      if(!hadCount){
							      notCommitBetList.push(allList[index]);
						      }
					      }
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      $(notCommitBetList).each(function(){
						      if(item.id==$(this)[0].id){
							      returnEatList[i].x = item.x-$(this)[0].x
						      }
					      });
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      });
			      }			
			
			      $(returnList).each(function(index){
				      $(this)[0].type = $(this)[0].type.replace("E","B");
			      });
			      return returnList;
		      }else{
			      return [];
		      }
	      },
	      getNeedPingCangOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllHadTransactionData();
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      var returnEatList=[];
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x);
									      returnEatList.push(allList[index]);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					
				      });
				
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      })
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				      return returnList;
			      }
		      }else{
			      return [];
		      }
	      },
	      ticketByFloat:function(item,type){
		      var result = 0;
		      if(type=="Q"){
			      result = item;
		      }else{
			      if(item==0){
				      result = 0;
			      }else{
				      if(item%5 !=0){
					      result = item + (5 - item%5);
				      }else{
					      result = item;
				      }
			      }
		      }
		      return result
	      },
	      withOrderOnInit:function(pushData,isBalance){
		      //真实的跟单操作
		      $(pushData).each(function(i){
			      var item = $(this)[0];
			      if(true){
				      var signInfo = ContentScript.GetSignInInfo();
				      if(['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'].contains(item.type)){
							      var postData = {};
							      postData.task = "betBox";
							      postData.combo =0;
							      //<td>6</td>
							      //<td class="RD F_B">FC</td>
							      //<td class="F_B ">4-5</td>
							      //<td id="FCE_6_4-5_100_700x">2</td>
							      //<td id="FCE_6_4-5_100_700y">100</td>
							      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
							      //<td class="">吃</td>
							
							      postData.Tix =  ContentScript.ticketByFloat(parseInt(item.x),"Q");
							      postData.Race = parseInt(item.matches);
							      var hourse1,hourse2;
							      //如果含有括号特殊处理一下
							      if(item.fb.indexOf("(")<0){
								      hourse1 = item.fb.split("-")[0];
								      hourse2 = item.fb.split("-")[1];
								      postData.fctype = 0;
							      }else{
								      hourse1 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
								      hourse2 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
								      postData.fctype = 1;
							      }
							      postData.Hs1 = hourse1;
							      postData.Hs2 = hourse2;
							      postData.Hs3 = "";
							      postData.Hs4 = "";
							      postData.Hs5 = "";
							      postData.Hs6 = "";
							      postData.Hs7 = "";
							      postData.Hs8 = "";
							      //postData.fctype = 0;
							      postData.Q = "Q";
							      if(item.type.indexOf("E")>=0){
								      postData.type = "EAT";
							      }else{
								      postData.type = "BET";
							      }
							
							      if(isBalance){
								      postData.amount = 100;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							      postData.fclmt = ContentScript.PageConfig.LimitStart;
								
							      postData.overflow = "1";
							      //postData.amount = "100";
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							      postData.rd = Math.random();
							
							      console.log(postData);
							      ///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX +"/forecast",
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
						      } 
				      if(['WPB','WPE','WB','WE','PB','PE'].contains($(this)[0].type)){
					
							      var postURL = "";
							      var postData = {};
							      postData.t = "frm";
							      postData.race = item.matches;
							      postData.horse = item.rdfb;
							      //var Proportion = parseInt(ContentScript.PageConfig.Percent);
							      postData.win = ContentScript.ticketByFloat(parseInt(item.fb),"WP");
							      postData.place = ContentScript.ticketByFloat(parseInt(item.x),"WP");
							
							      var postURL ="";
							      postURL ="/bets";
							      //if(item.type.indexOf("E")>=0){
							      //postData.type = "eat";
							      //postURL ="/bets";
							      //}else{
							      //postData.type = "bet";
							      //postURL = "/bookings";
							      //}
							
							      if(isBalance){
								      postData.amount = 99;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							
							      //postData.limit = ContentScript.PageConfig.LimitStart+"/"+ ContentScript.PageConfig.LimitEnd;
							      postData.l_win = ContentScript.PageConfig.LimitStart;
							      postData.l_place = ContentScript.PageConfig.LimitEnd;
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							
							      if(parseInt(postData.win)>0 && parseInt(postData.place)>0){
								      postData.wptck=1;
							      }else{
								      postData.wptck=0;
							      } 
							      if(parseInt(postData.win)>0 && parseInt(postData.place)==0){
								      postData.wtck=1;
								      postData.l_place = "0";
							      }
							      if(parseInt(postData.win)==0 && parseInt(postData.place)>0){
								      postData.ptck=1;
								      postData.l_win = "0";
							      }
							
							      postData.post = "1";
							      postData.rd = Math.random();
							      console.log(postData);
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX + postURL,
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
					      }
			      }
		      });
	      },
	      GetAllTransactionData:function(){
		      var result = [];
		      //<td>6</td>
		      //<td class="RD F_B">FC</td>
		      //<td class="F_B ">4-5</td>
		      //<td id="FCE_6_4-5_100_700x">2</td>
		      //<td id="FCE_6_4-5_100_700y">100</td>
		      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		      //<td class="">吃</td>
		
		      //<td>2</td>
		      //<td class="F_B">4</td>
		      //<td id="PE_2_4_78_0/16_0x">0</td>
		      //<td id="PE_2_4_78_0/16_0y">5</td>
		      //<td id="PE_2_4_78_0/16_0z">78</td>
		      //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		      //<td class="">吃</td></tr>
		
		      $(ContentScript.txn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	      GetAllHadTransactionData:function(){
		      var result = [];
		      $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2];
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 330px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<table style="width:100%">';
              htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
              htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
              htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
              htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
              htmlList +='&nbsp;&nbsp;限注:<input id="MaxCount" type="number" step="1" style="width: 40px;" size="4" value="300" />';
              htmlList +='&nbsp;倍率:<select id="Percent"><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>20</option><option>50</option><option>100</option></select>';
              //htmlList +='&nbsp;倍率:<input id="Percent" type="number" step="0.1" value="1" style="width: 40px;" size="4">';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">'
              htmlList +='<input type= "radio" name="DiscountType"  value="F1" checked="checked" id="DiscountType1"/>'
              htmlList +='折头:<input id="Discount1" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">';
              htmlList +='<input type= "radio" name="DiscountType" value="F2" id="DiscountType2"/>';
              htmlList +='折头:<input id="Discount2" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;<input id="AutoPingCang" type="checkbox" value="1" />自动删吃单'
              //htmlList +='比例:<input id="Percent" type="number" step="1" style="width: 40px;" size="4" value="1" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
              htmlList +='吃:<span id="eatCount" style="color:red"></span>&nbsp;赌:<span id="betCount" style="color:red" ></span>&nbsp;';
              htmlList +='</td><td style="text-align:right">';
              htmlList +='<input type="button" id="btnStart" value="开始" />';
              htmlList +='<input type="button" id="btnEnd" value="停止" />';
              htmlList +='<input type="button" id="btnBanlance" value="平仓" />';
              htmlList +='<input type="button" id="btnEatDelete" value="删吃单" />';
              htmlList +='<input type="button" id="btnBetDelete" value="删赌单" />';
              htmlList +='</td></tr>';
              htmlList +='</table>';
              htmlList += '</div>';
        
              $("body").append(htmlList);
	      },
	      EatButtonEvent:function(){
            var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
            if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
			      var obj = $(window.frames["frmTRANS"].document).find(".del2_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
      		      PostHelp.AjaxDeleteData(obj);
      	      }
        },
        BetButtonEvent:function(){
      	    var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
      	    if(greenList!=null && greenList!=undefined && greenList.length>0 ){
			        var obj = $(window.frames["frmTRANS"].document).find(".del_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
			        PostHelp.AjaxDeleteData(obj);
      	    }
        },
	      HtmlAddDragEvent:function(){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  $("#drag").click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt($("#drag").css("left"));
                      _y = e.pageY - parseInt($("#drag").css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          $("#drag").css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }

      PostHelp={
	      urlX: "http://"+window.location.host,
	      fcfrm1 :  $("#fcfrm1"),
	      fcfrm2 :  $("#fcfrm2"),
	      chkKBBet:function(f){
		      f = PostHelp.fcfrm1;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB1(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB3(f);
		      }
	      },
          chkKBEat:function(f){
		      f = PostHelp.fcfrm2;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB2(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB4(f);
		      }
	      },
          chkKB1:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		         && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val();
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined	
			      ){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
          chkKB2:function(f){
		      f=PostHelp.fcfrm2;
		      var combo=f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }	
			      if(hss=="")
			      {
				      hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
          chkKB3:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			      && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val()
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined
			      ){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }			
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
	      chkKB4:function(f){
		      f=PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }		
			      if(hss=="")
			      {
				      hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
	      chkActBet:function(f){
		      f = PostHelp.fcfrm1;
		      var combo;
		      var check = f.find("input[name='banker1'] :checked");
		      if(check) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );	
		      }
	      },
	      chkActEat:function(f){
		      f = PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );
		      }
	      },
	      postData:function(url){
		      var view1 = $("#view1");
		      if(view1) {
				      var y = $("#view1").val();
				      var postion = url  + "&show="+y+ "&rd=" + Math.random();
				      var postionArray = postion.split("?");
				      var postUrl = postionArray[0];
				      var dataUrl = postionArray[1];
				      var dataArray = dataUrl.split('&');
				      var postString ='{';
				      for(var i=0;i< dataArray.length;i++){
					      var itemArray = dataArray[i].split('=');
					      postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				      }
				      postString = postString.substr(0,postString.length-1);
				      postString+='}';
				      var dataJson = $.parseJSON(postString);
				      $.ajax(
				      {
		                   type: "GET",
		                   url: postUrl,		             
		                   data: dataJson,
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }
	     		      });
		      }
	      },
	      PostDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      document.getElementById('boxFcBET').style.display = "none";
		      document.getElementById('boxFcEAT').style.display = "none";
		      document.getElementById('boxPfcBET').style.display = "none";
		      document.getElementById('boxPfcEAT').style.display = "none";
		      PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	      },
	      AjaxDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      var y = 0;
		      try{
			      y = view1.options[view1.selectedIndex].value;
		      }catch(e){
			      y = $(".dd-selected-value").val();
		      }
		
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      $.ajax(
				      {
		                   type: "GET",
		                   url: PostHelp.urlX +"/transactions",		             
		                   data: {
		             	      "type":"del",
		             	      "bid":id,
		             	      "x":x,
		             	      "betType":type,
		             	      "race_date":date,
		             	      "race_type":race_type,
		             	      "q":"q",
						      "race":race,
						      "show":y,
						      "rd":Math.random()
		                   },
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }   
	   				 
	           });
	      }
      }

      var host =window.location.href;
      if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
      ]]>
    </JSCode>
  </JSFile>

  <JSFile>
    <version>V6</version>
    <JSCode>
      <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }

      ContentScript={
	      txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	      Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	      WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerWithOrderClock:null,
	      timerCountPageEatAndBet:null,
	      StaticAllData:[],
	      AlertMsg:"请输入密码",
	      AlertPassToLater:"软件过期",
	      PassError:"密码错误",
        SinglePath:false,
	      StaticOldAllData:[],
	      StaticCountShowData:[],
	      StaticOldCountShowData:[],
	      HelloKitty:"81dc9bdb52d04dc20036dbd8313ed055",
	      HelloKittyTime:["212112eece862ca4a3da112f217288fb","519edc8db508d1c088f793f2c3647e6f"],
	      DaoQiTime:"YYYY-MM-DD",
	      PageConfig:{
		      MaxCount:90,
		      Discount:80,
		      LimitStart:700,
		      LimitEnd:700,
		      Percent:1
	      },
	      showCountWithWhere:function(){
		      ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		      ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		      if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			      ContentScript.showCountPageEatAndBet();
		      }			
	      },
	      setLimitAndDiscount:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      if("WP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(82);
			      $("#LimitStart1").val(240);
			      $("#LimitEnd1").val(60);
			
			      $("#Discount2").val(82);
			      $("#LimitStart2").val(240);
			      $("#LimitEnd2").val(60);
		      }
		      if("QP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(400);
			      $("#LimitEnd1").val(400);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(400);
			      $("#LimitEnd2").val(400);
		      }
		      if("Q" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(700);
			      $("#LimitEnd1").val(700);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(700);
			      $("#LimitEnd2").val(700);
		      }
	      },
	      showCountPageEatAndBet:function(){
			      var CheckType = [];
			      var withType = $("input[name='orderType']:checked").val();
			      var eat =0;
			      var bet =0;
			      var betIds =[];
			      var eatIds =[];
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      $(ContentScript.StaticCountShowData).each(function(i){
				      if(CheckType.contains($(this)[0].type)){
					      if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						      bet++;
						      betIds.push($(this)[0].id);
					      }
					      if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						      eat++;
						      eatIds.push($(this)[0].id);
					      }
				      }
			      })
			      $("#eatCount").text(eat);
			      $("#betCount").text(bet);
		
	      },
	      GetAllEatTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("E")>=0 && $(this)[0].type != 'DEmr'){
				      result.push($(this)[0]);
			      } 
		      });
		      return result;
	      },
	      GetAllBetTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("B")>=0 && $(this)[0].type != 'DBmr'){
				      result.push($(this)[0]);
			      }
		      });
		      return result;
	      },
	      GetAllDBmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DBmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPB";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QB";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      GetAllDEmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DEmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPE";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QE";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
          },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      MaxCountEvent:function(){
		      try{
			      ContentScript.PageConfig.MaxCount = $("#MaxCount").val();
		      }catch(e){
			      ContentScript.PageConfig.MaxCount = 90;
			      $("#MaxCount").val(90);
		      }
		
		      var type = $("input[name='DiscountType']:checked").val();
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.Discount = $("#Discount1").val();
			      }else{
				      ContentScript.PageConfig.Discount = $("#Discount2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.Discount = 80;
			      $("#Discount").val(80);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitStart = $("#LimitStart1").val();
			      }else{
				      ContentScript.PageConfig.LimitStart = $("#LimitStart2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitStart = 700;
			      $("#LimitStart").val(700);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd1").val();
			      }else{
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitEnd = 700;
			      $("#LimitEnd").val(700);
		      }
		
		      ContentScript.PageConfig.Percent = $("#Percent").val();
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      PrecentChangeEvent:function(){
		      $("#Percent").bind("change",function(){
			      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				      $("#btnBanlance").show();
			      }else{
				      $("#btnBanlance").hide();
			      }
			      ContentScript.PageConfig.Percent =$("#Percent").val();
		      });
	      },
	      allOnitEvent:function(){
		      //创建用户界面
						      ContentScript.CreateHtmlElement();
						      //绑定拖拽事件
						      ContentScript.HtmlAddDragEvent();
						      $("#daoqitime").text(ContentScript.DaoQiTime);
						      //限制投注数
						      ContentScript.MaxCountEvent();
						      //多倍控制
						      ContentScript.PrecentChangeEvent();
						      //统计吃票的计时器
						      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
						
						      $("#btnEnd").hide();
						      $("input[name='orderType']").bind("click",function(){
							      ContentScript.showCountPageEatAndBet();
							      ContentScript.setLimitAndDiscount();
						      });
						      //删单
						      $("#btnEatDelete").bind("click",function(){
							      $(this).hide();
							      var isExists = $(window.frames["frmTRANS"].document).find(".del2_ch");
							      if(isExists!=null && isExists!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del2_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      $("#btnBetDelete").bind("click",function(){
							      $(this).hide();
							      var isExistsDel = $(window.frames["frmTRANS"].document).find(".del_ch");
							      if(isExistsDel!=null && isExistsDel!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      //开始
						      $("#btnStart").bind("click",function(){
                      ContentScript.SinglePath = false;
							        ContentScript.StaticOldAllData = [];
							        ContentScript.StaticAllData = [];
							        $("#btnStart").hide();
							        $("#btnEnd").show();
							        ContentScript.MaxCountEvent();
							        //创建定时吃票事件
							        ContentScript.timerWithOrderClock = self.setInterval(function(){
							            var eatCount = $("#eatCount").text();
							            if(eatCount == ""){
							    	        eatCount = 0;
							            }else{
							    	        eatCount = parseInt(eatCount);
							            }
							            var MaxCount = parseInt($("#MaxCount").val());
							            if(eatCount >= MaxCount){
							    	        //到达限制数量 删除所有吃单
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
							            }
								        clearInterval(ContentScript.timerCountPageEatAndBet);
								        ContentScript.StaticOldAllData = ContentScript.StaticAllData
								        ContentScript.StaticAllData = ContentScript.GetAllHadTransactionData();
								        if(JSON.stringify(ContentScript.StaticOldAllData) != JSON.stringify(ContentScript.StaticAllData)){
									        if(ContentScript.SinglePath){
									 	        //nothing
									        }else{
										        ContentScript.StaticCountShowData = ContentScript.StaticAllData;
										        ContentScript.showCountPageEatAndBet();
										        ContentScript.needAjaxCount=ContentScript.getNeedWithOrderList();
										        ContentScript.withOrderOnInit(ContentScript.needAjaxCount,false);
									        }
									
								        }
								
								        var showTitle = "";
								        if(window.location.href.indexOf("playerhk.jsp")>=0){
									        showTitle = $("#newsLineByLoc").text();
								        }
								        if(window.location.href.indexOf("Q.jsp")>=0){
									        showTitle = $("#news1st").text();
								        }
								
								        if(((showTitle.indexOf("进闸完毕")>=0 
								           && showTitle.indexOf("准备开跑")>=0)||(showTitle.indexOf("剩 1")>=0))
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        var ret = 0;
									        try{
										        var regexp = /剩 [0-9]+/
										        var firststring = regexp.exec(showTitle);
										        var match = firststring[0].replace("剩","").replace(" ","")
										        ret= parseInt(match);
									        }catch(e){
										        ret = 1	
									        }
									        if(ret==1){
										        ContentScript.SinglePath = true;
										        //先删除所有没有成交的数据
										        setTimeout(function(){
											        ContentScript.EatButtonEvent();
										        },0);
										        setTimeout(function(){
											        ContentScript.BetButtonEvent();
										        },0);
										        //然后100%的平仓数据交易
										        setTimeout(function(){
											        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										        },1000);
										
										        //平仓后结束
										        if(ContentScript.timerWithOrderClock!=null){
											        clearInterval(ContentScript.timerWithOrderClock);
										        }
										        ContentScript.timerWithOrderClock = null;
										        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
										        $("#btnStart").show();
										        $("#btnEnd").hide();
									        }
								        }
								        if((showTitle.indexOf("剩 2")>=0 ||  showTitle.indexOf("剩 3")>=0)
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        ContentScript.SinglePath = true;
								        }
							        },1000);
						      });
						
						      //结束
						      $("#btnEnd").bind("click",function(){
							      if(ContentScript.timerWithOrderClock!=null){
								      clearInterval(ContentScript.timerWithOrderClock);
							      }
							      ContentScript.timerWithOrderClock = null;
							      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							      $("#btnStart").show();
							      $("#btnEnd").hide();
						      });
						
						      //平仓
						      $("#btnBanlance").bind("click",function(){
							        if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
									        //平仓后结束
									        if(ContentScript.timerWithOrderClock!=null){
										        clearInterval(ContentScript.timerWithOrderClock);
									        }
									        ContentScript.timerWithOrderClock = null;
									        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
									        $("#btnStart").show();
									        $("#btnEnd").hide();
									
									        $(this).hide();
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        setTimeout(function(){
										        ContentScript.BetButtonEvent();
									        },0);
									        //然后100%的平仓数据交易
									        setTimeout(function(){
										        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
									        },1000);
									        $(this).show();
							        }else{
								        alert("平仓功能只能在倍率是1的情况下使用！");
							     }
						});
				
	      },
        checkPingCangHouDataValidation:function(){
		      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
			      if($($(this).find(".del_ch").parent().parent()).find("td").eq(4).text()!="100"){
				      return false;
			      }
		      });
		      return true;
	      },
	      getNeedWithOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllTransactionData();
			      var notCommitBetList=[];
			      var returnEatList=[];
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      it.x = parseInt(it.x)*parseInt($("#Percent").val())
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      returnEatList.push(it);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					      if($(this)[0].type =="DBmr"){
						      var it = $(this)[0];
						      var hadCount = false;
						      $(notCommitBetList).each(function(i){
							      if(it.id==$(this)[0].id){
								      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								      hadCount = true;
							      }
						      });
						      if(!hadCount){
							      notCommitBetList.push(allList[index]);
						      }
					      }
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      $(notCommitBetList).each(function(){
						      if(item.id==$(this)[0].id){
							      returnEatList[i].x = item.x-$(this)[0].x
						      }
					      });
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      });
			      }			
			
			      $(returnList).each(function(index){
				      $(this)[0].type = $(this)[0].type.replace("E","B");
			      });
			      return returnList;
		      }else{
			      return [];
		      }
	      },
	      getNeedPingCangOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllHadTransactionData();
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      var returnEatList=[];
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x);
									      returnEatList.push(allList[index]);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					
				      });
				
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      })
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				      return returnList;
			      }
		      }else{
			      return [];
		      }
	      },
	      ticketByFloat:function(item,type){
		      var result = 0;
		      if(type=="Q"){
			      result = item;
		      }else{
			      if(item==0){
				      result = 0;
			      }else{
				      if(item%5 !=0){
					      result = item + (5 - item%5);
				      }else{
					      result = item;
				      }
			      }
		      }
		      return result
	      },
	      withOrderOnInit:function(pushData,isBalance){
		        //真实的跟单操作
		        $(pushData).each(function(i){
			        var item = $(this)[0];
			        if(true){
				        var signInfo = ContentScript.GetSignInInfo();
				        if(['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'].contains(item.type)){
							        var postData = {};
							        postData.task = "betBox";
							        postData.combo =0;
							        var pcBeiShu = 1;
							        try{
								        if(isBalance){
									        pcBeiShu = parseInt($("#MulitBeiPingCang").val());
								        }
							        }catch(e){
								        pcBeiShu = 1;
							        }
							        postData.Tix =  ContentScript.ticketByFloat(parseInt(item.x)*pcBeiShu,"Q");
							        postData.Race = parseInt(item.matches);
							        var hourse1,hourse2;
							        //如果含有括号特殊处理一下
							        if(item.fb.indexOf("(")<0){
								        hourse1 = item.fb.split("-")[0];
								        hourse2 = item.fb.split("-")[1];
								        postData.fctype = 0;
							        }else{
								        hourse1 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
								        hourse2 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
								        postData.fctype = 1;
							        }
							        postData.Hs1 = hourse1;
							        postData.Hs2 = hourse2;
							        postData.Hs3 = "";
							        postData.Hs4 = "";
							        postData.Hs5 = "";
							        postData.Hs6 = "";
							        postData.Hs7 = "";
							        postData.Hs8 = "";
							        //postData.fctype = 0;
							        postData.Q = "Q";
							        if(item.type.indexOf("E")>=0){
								        postData.type = "EAT";
							        }else{
								        postData.type = "BET";
							        }
							
							        if(isBalance){
								        postData.amount = 100;
							        }else{
								        postData.amount = ContentScript.PageConfig.Discount;
							        }
							        postData.fclmt = ContentScript.PageConfig.LimitStart;
								
							        postData.overflow = "1";
							        //postData.amount = "100";
							        postData.race_type = signInfo.RaceType;
							        postData.race_date = signInfo.RaceDate;
							        postData.show = parseInt(item.matches);
							        postData.rd = Math.random();
							
							        console.log(postData);
							        ///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							        $.ajax({
							                      type: "get",
							                      url: ContentScript.urlX +"/forecast",
							                      data: postData,
							                      success: function (msg) {
							              	        console.log(msg);
							                      },
							                      error:function(e){
							              	        console.log(e);
							                      }
							        });
						        } 
				        if(['WPB','WPE','WB','WE','PB','PE'].contains($(this)[0].type)){
					
							        var postURL = "";
							        var postData = {};
							        postData.t = "frm";
							        postData.race = item.matches;
							        postData.horse = item.rdfb;
							        //var Proportion = parseInt(ContentScript.PageConfig.Percent);
							        var pcBeiShu = 1;
							        try{
								        if(isBalance){
									        pcBeiShu = parseInt($("#MulitBeiPingCang").val());
								        }
							        }catch(e){
								        pcBeiShu = 1;
							        }
							
							        postData.win = ContentScript.ticketByFloat(parseInt(item.fb)*pcBeiShu,"WP");
							        postData.place = ContentScript.ticketByFloat(parseInt(item.x)*pcBeiShu,"WP");
							
							        var postURL ="";
							        postURL ="/bets";
							
							        if(isBalance){
								        postData.amount = 99;
							        }else{
								        postData.amount = ContentScript.PageConfig.Discount;
							        }
							
							        postData.l_win = ContentScript.PageConfig.LimitStart;
							        postData.l_place = ContentScript.PageConfig.LimitEnd;
							        postData.race_type = signInfo.RaceType;
							        postData.race_date = signInfo.RaceDate;
							        postData.show = parseInt(item.matches);
							
							        if(parseInt(postData.win)>0 && parseInt(postData.place)>0){
								        postData.wptck=1;
							        }else{
								        postData.wptck=0;
							        } 
							        if(parseInt(postData.win)>0 && parseInt(postData.place)==0){
								        postData.wtck=1;
								        postData.l_place = "0";
							        }
							        if(parseInt(postData.win)==0 && parseInt(postData.place)>0){
								        postData.ptck=1;
								        postData.l_win = "0";
							        }
							
							        postData.post = "1";
							        postData.rd = Math.random();
							        console.log(postData);
							        $.ajax({
							                      type: "get",
							                      url: ContentScript.urlX + postURL,
							                      data: postData,
							                      success: function (msg) {
							              	        console.log(msg);
							                      },
							                      error:function(e){
							              	        console.log(e);
							                      }
							        });
					        }
			        }
		        });
	        },
	
	      GetAllTransactionData:function(){
		      var result = [];
		      //<td>6</td>
		      //<td class="RD F_B">FC</td>
		      //<td class="F_B ">4-5</td>
		      //<td id="FCE_6_4-5_100_700x">2</td>
		      //<td id="FCE_6_4-5_100_700y">100</td>
		      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		      //<td class="">吃</td>
		
		      //<td>2</td>
		      //<td class="F_B">4</td>
		      //<td id="PE_2_4_78_0/16_0x">0</td>
		      //<td id="PE_2_4_78_0/16_0y">5</td>
		      //<td id="PE_2_4_78_0/16_0z">78</td>
		      //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		      //<td class="">吃</td></tr>
		
		      $(ContentScript.txn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	      GetAllHadTransactionData:function(){
		      var result = [];
		      $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2];
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 400px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<table style="width:100%">';
              htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
              htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
              htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
              htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
              htmlList +='&nbsp;&nbsp;限注:<input id="MaxCount" type="number" step="1" style="width: 40px;" size="4" value="300" />';
              htmlList +='&nbsp;倍率:<select id="Percent"><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>20</option><option>50</option><option>100</option></select>';
              //htmlList +='&nbsp;倍率:<input id="Percent" type="number" step="0.1" value="1" style="width: 40px;" size="4">';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">'
              htmlList +='<input type= "radio" name="DiscountType"  value="F1" checked="checked" id="DiscountType1"/>'
              htmlList +='折头:<input id="Discount1" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		          htmlList +='极限:<input id="LimitStart1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		          htmlList +='/<input id="LimitEnd1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;赌单多倍平仓<input id="MulitBeiPingCang" type="number" value="1" style="width: 40px;" size="4" />'
        
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">';
              htmlList +='<input type= "radio" name="DiscountType" value="F2" id="DiscountType2"/>';
              htmlList +='折头:<input id="Discount2" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		          htmlList +='极限:<input id="LimitStart2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		          htmlList +='/<input id="LimitEnd2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;<input id="AutoPingCang" type="checkbox" value="1" />自动平仓'
              //htmlList +='比例:<input id="Percent" type="number" step="1" style="width: 40px;" size="4" value="1" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
              htmlList +='吃:<span id="eatCount" style="color:red"></span>&nbsp;赌:<span id="betCount" style="color:red" ></span>&nbsp;';
              htmlList +='</td><td style="text-align:right">';
              htmlList +='<input type="button" id="btnStart" value="开始" />';
              htmlList +='<input type="button" id="btnEnd" value="停止" />';
              htmlList +='<input type="button" id="btnBanlance" value="平仓" />';
              htmlList +='<input type="button" id="btnEatDelete" value="删吃单" />';
              htmlList +='<input type="button" id="btnBetDelete" value="删赌单" />';
              htmlList +='</td></tr>';
              htmlList +='</table>';
              htmlList += '</div>';
        
              $("body").append(htmlList);
	      },
	      EatButtonEvent:function(){
            var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
            if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
			      var obj = $(window.frames["frmTRANS"].document).find(".del2_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
      		      PostHelp.AjaxDeleteData(obj);
      	      }
        },
        BetButtonEvent:function(){
      	    var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
      	    if(greenList!=null && greenList!=undefined && greenList.length>0 ){
			        var obj = $(window.frames["frmTRANS"].document).find(".del_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
			        PostHelp.AjaxDeleteData(obj);
      	    }
        },
	      HtmlAddDragEvent:function(){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  $("#drag").click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt($("#drag").css("left"));
                      _y = e.pageY - parseInt($("#drag").css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          $("#drag").css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }

      PostHelp={
	      urlX: "http://"+window.location.host,
	      fcfrm1 :  $("#fcfrm1"),
	      fcfrm2 :  $("#fcfrm2"),
	      chkKBBet:function(f){
		      f = PostHelp.fcfrm1;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB1(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB3(f);
		      }
	      },
          chkKBEat:function(f){
		      f = PostHelp.fcfrm2;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB2(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB4(f);
		      }
	      },
          chkKB1:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		         && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val();
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined	
			      ){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
          chkKB2:function(f){
		      f=PostHelp.fcfrm2;
		      var combo=f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }	
			      if(hss=="")
			      {
				      hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
          chkKB3:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			      && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val()
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined
			      ){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }			
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
	      chkKB4:function(f){
		      f=PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }		
			      if(hss=="")
			      {
				      hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
	      chkActBet:function(f){
		      f = PostHelp.fcfrm1;
		      var combo;
		      var check = f.find("input[name='banker1'] :checked");
		      if(check) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );	
		      }
	      },
	      chkActEat:function(f){
		      f = PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );
		      }
	      },
	      postData:function(url){
		      var view1 = $("#view1");
		      if(view1) {
				      var y = $("#view1").val();
				      var postion = url  + "&show="+y+ "&rd=" + Math.random();
				      var postionArray = postion.split("?");
				      var postUrl = postionArray[0];
				      var dataUrl = postionArray[1];
				      var dataArray = dataUrl.split('&');
				      var postString ='{';
				      for(var i=0;i< dataArray.length;i++){
					      var itemArray = dataArray[i].split('=');
					      postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				      }
				      postString = postString.substr(0,postString.length-1);
				      postString+='}';
				      var dataJson = $.parseJSON(postString);
				      $.ajax(
				      {
		                   type: "GET",
		                   url: postUrl,		             
		                   data: dataJson,
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }
	     		      });
		      }
	      },
	      PostDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      document.getElementById('boxFcBET').style.display = "none";
		      document.getElementById('boxFcEAT').style.display = "none";
		      document.getElementById('boxPfcBET').style.display = "none";
		      document.getElementById('boxPfcEAT').style.display = "none";
		      PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	      },
	      AjaxDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      var y = 0;
		      try{
			      y = view1.options[view1.selectedIndex].value;
		      }catch(e){
			      y = $(".dd-selected-value").val();
		      }
		
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      $.ajax(
				      {
		                   type: "GET",
		                   url: PostHelp.urlX +"/transactions",		             
		                   data: {
		             	      "type":"del",
		             	      "bid":id,
		             	      "x":x,
		             	      "betType":type,
		             	      "race_date":date,
		             	      "race_type":race_type,
		             	      "q":"q",
						      "race":race,
						      "show":y,
						      "rd":Math.random()
		                   },
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }   
	   				 
	           });
	      }
      }

      var host =window.location.href;
      if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
      ]]>
    </JSCode>
  </JSFile>

  <JSFile>
    <version>V7</version>
    <JSCode>
      <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }

      ContentScript={
	      txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	      Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	      WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerWithOrderClock:null,
	      timerCountPageEatAndBet:null,
	      StaticAllData:[],
	      AlertMsg:"请输入密码",
	      AlertPassToLater:"软件过期",
	      PassError:"密码错误",
        SinglePath:false,
	      StaticOldAllData:[],
	      StaticCountShowData:[],
	      StaticOldCountShowData:[],
	      HelloKitty:"81dc9bdb52d04dc20036dbd8313ed055",
	      HelloKittyTime:["212112eece862ca4a3da112f217288fb","519edc8db508d1c088f793f2c3647e6f"],
	      DaoQiTime:"YYYY-MM-DD",
	      PageConfig:{
		      MaxCount:90,
		      Discount:80,
		      LimitStart:700,
		      LimitEnd:700,
		      Percent:1
	      },
	      showCountWithWhere:function(){
		      ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		      ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		      if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			      ContentScript.showCountPageEatAndBet();
		      }			
	      },
	      setLimitAndDiscount:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      if("WP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(82);
			      $("#LimitStart1").val(240);
			      $("#LimitEnd1").val(60);
			
			      $("#Discount2").val(82);
			      $("#LimitStart2").val(240);
			      $("#LimitEnd2").val(60);
		      }
		      if("QP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(400);
			      $("#LimitEnd1").val(400);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(400);
			      $("#LimitEnd2").val(400);
		      }
		      if("Q" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(700);
			      $("#LimitEnd1").val(700);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(700);
			      $("#LimitEnd2").val(700);
		      }
	      },
	      showCountPageEatAndBet:function(){
			      var CheckType = [];
			      var withType = $("input[name='orderType']:checked").val();
			      var eat =0;
			      var bet =0;
			      var betIds =[];
			      var eatIds =[];
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      $(ContentScript.StaticCountShowData).each(function(i){
				      if(CheckType.contains($(this)[0].type)){
					      if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						      bet++;
						      betIds.push($(this)[0].id);
					      }
					      if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						      eat++;
						      eatIds.push($(this)[0].id);
					      }
				      }
			      })
			      $("#eatCount").text(eat);
			      $("#betCount").text(bet);
		
	      },
	      GetAllEatTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("E")>=0 && $(this)[0].type != 'DEmr'){
				      result.push($(this)[0]);
			      } 
		      });
		      return result;
	      },
	      GetAllBetTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("B")>=0 && $(this)[0].type != 'DBmr'){
				      result.push($(this)[0]);
			      }
		      });
		      return result;
	      },
	      GetAllDBmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DBmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPB";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QB";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      GetAllDEmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DEmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPE";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QE";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
          },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      MaxCountEvent:function(){
		      try{
			      ContentScript.PageConfig.MaxCount = $("#MaxCount").val();
		      }catch(e){
			      ContentScript.PageConfig.MaxCount = 90;
			      $("#MaxCount").val(90);
		      }
		
		      var type = $("input[name='DiscountType']:checked").val();
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.Discount = $("#Discount1").val();
			      }else{
				      ContentScript.PageConfig.Discount = $("#Discount2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.Discount = 80;
			      $("#Discount").val(80);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitStart = $("#LimitStart1").val();
			      }else{
				      ContentScript.PageConfig.LimitStart = $("#LimitStart2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitStart = 700;
			      $("#LimitStart").val(700);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd1").val();
			      }else{
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitEnd = 700;
			      $("#LimitEnd").val(700);
		      }
		
		      ContentScript.PageConfig.Percent = $("#Percent").val();
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      PrecentChangeEvent:function(){
		      $("#Percent").bind("change",function(){
			      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				      $("#btnBanlance").show();
			      }else{
				      $("#btnBanlance").hide();
			      }
			      ContentScript.PageConfig.Percent =$("#Percent").val();
		      });
	      },
	      allOnitEvent:function(){
		      //创建用户界面
						      ContentScript.CreateHtmlElement();
						      //绑定拖拽事件
						      ContentScript.HtmlAddDragEvent();
						      $("#daoqitime").text(ContentScript.DaoQiTime);
						      //限制投注数
						      ContentScript.MaxCountEvent();
						      //多倍控制
						      ContentScript.PrecentChangeEvent();
						      //统计吃票的计时器
						      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
						
						      $("#btnEnd").hide();
						      $("input[name='orderType']").bind("click",function(){
							      ContentScript.showCountPageEatAndBet();
							      ContentScript.setLimitAndDiscount();
						      });
						      //删单
						      $("#btnEatDelete").bind("click",function(){
							      $(this).hide();
							      var isExists = $(window.frames["frmTRANS"].document).find(".del2_ch");
							      if(isExists!=null && isExists!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del2_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      $("#btnBetDelete").bind("click",function(){
							      $(this).hide();
							      var isExistsDel = $(window.frames["frmTRANS"].document).find(".del_ch");
							      if(isExistsDel!=null && isExistsDel!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      //开始
						      $("#btnStart").bind("click",function(){
                      ContentScript.SinglePath = false;
							        ContentScript.StaticOldAllData = [];
							        ContentScript.StaticAllData = [];
							        $("#btnStart").hide();
							        $("#btnEnd").show();
							        ContentScript.MaxCountEvent();
							        //创建定时吃票事件
							        ContentScript.timerWithOrderClock = self.setInterval(function(){
							            var eatCount = $("#eatCount").text();
							            if(eatCount == ""){
							    	        eatCount = 0;
							            }else{
							    	        eatCount = parseInt(eatCount);
							            }
							            var MaxCount = parseInt($("#MaxCount").val());
							            if(eatCount >= MaxCount){
							    	        //到达限制数量 删除所有吃单
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
							            }
								        clearInterval(ContentScript.timerCountPageEatAndBet);
								        ContentScript.StaticOldAllData = ContentScript.StaticAllData
								        ContentScript.StaticAllData = ContentScript.GetAllHadTransactionData();
								        if(JSON.stringify(ContentScript.StaticOldAllData) != JSON.stringify(ContentScript.StaticAllData)){
									        if(ContentScript.SinglePath){
									 	        //nothing
									        }else{
										        ContentScript.StaticCountShowData = ContentScript.StaticAllData;
										        ContentScript.showCountPageEatAndBet();
										        ContentScript.needAjaxCount=ContentScript.getNeedWithOrderList();
										        ContentScript.withOrderOnInit(ContentScript.needAjaxCount,false);
									        }
									
								        }
								
								        var showTitle = "";
								        if(window.location.href.indexOf("playerhk.jsp")>=0){
									        showTitle = $("#newsLineByLoc").text();
								        }
								        if(window.location.href.indexOf("Q.jsp")>=0){
									        showTitle = $("#news1st").text();
								        }
								
								        if(((showTitle.indexOf("进闸完毕")>=0 
								           && showTitle.indexOf("准备开跑")>=0)||(showTitle.indexOf("剩 1")>=0 || showTitle.indexOf("剩 2")>=0 || showTitle.indexOf("剩 3")>=0))
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        var ret = 0;
									        try{
										        var regexp = /剩 [0-9]+/
										        var firststring = regexp.exec(showTitle);
										        var match = firststring[0].replace("剩","").replace(" ","")
										        ret= parseInt(match);
									        }catch(e){
										        ret = 1	
									        }
									        if(ret==1){
										        ContentScript.SinglePath = true;
										        //先删除所有没有成交的数据
										        setTimeout(function(){
											        ContentScript.EatButtonEvent();
										        },0);
										        setTimeout(function(){
											        ContentScript.BetButtonEvent();
										        },0);
										        //然后100%的平仓数据交易
										        setTimeout(function(){
											        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										        },1000);
														
														//然后100%的平仓数据交易
										        setTimeout(function(){
											        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										        },2000);
														
										        //平仓后结束
										        if(ContentScript.timerWithOrderClock!=null){
											        clearInterval(ContentScript.timerWithOrderClock);
										        }
										        ContentScript.timerWithOrderClock = null;
										        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
										        $("#btnStart").show();
										        $("#btnEnd").hide();
									        }
								        }
								        if((showTitle.indexOf("剩 5")>=0 ||  showTitle.indexOf("剩 4")>=0)
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        ContentScript.SinglePath = true;
								        }
							        },1000);
						      });
						
						      //结束
						      $("#btnEnd").bind("click",function(){
							      if(ContentScript.timerWithOrderClock!=null){
								      clearInterval(ContentScript.timerWithOrderClock);
							      }
							      ContentScript.timerWithOrderClock = null;
							      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							      $("#btnStart").show();
							      $("#btnEnd").hide();
						      });
						
						      //平仓
						      $("#btnBanlance").bind("click",function(){
							        if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
									        //平仓后结束
									        if(ContentScript.timerWithOrderClock!=null){
										        clearInterval(ContentScript.timerWithOrderClock);
									        }
									        ContentScript.timerWithOrderClock = null;
									        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
									        $("#btnStart").show();
									        $("#btnEnd").hide();
									
									        $(this).hide();
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        setTimeout(function(){
										        ContentScript.BetButtonEvent();
									        },0);
									        //然后100%的平仓数据交易
									        setTimeout(function(){
										        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
									        },1000);
									        $(this).show();
							        }else{
								        alert("平仓功能只能在倍率是1的情况下使用！");
							     }
						});
				
	      },
        checkPingCangHouDataValidation:function(){
		      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
			      if($($(this).find(".del_ch").parent().parent()).find("td").eq(4).text()!="100"){
				      return false;
			      }
		      });
		      return true;
	      },
	      getNeedWithOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllTransactionData();
			      var notCommitBetList=[];
			      var returnEatList=[];
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      it.x = parseInt(it.x)*parseInt($("#Percent").val())
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      returnEatList.push(it);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					      if($(this)[0].type =="DBmr"){
						      var it = $(this)[0];
						      var hadCount = false;
						      $(notCommitBetList).each(function(i){
							      if(it.id==$(this)[0].id){
								      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								      hadCount = true;
							      }
						      });
						      if(!hadCount){
							      notCommitBetList.push(allList[index]);
						      }
					      }
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      $(notCommitBetList).each(function(){
						      if(item.id==$(this)[0].id){
							      returnEatList[i].x = item.x-$(this)[0].x
						      }
					      });
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      });
			      }			
			
			      $(returnList).each(function(index){
				      $(this)[0].type = $(this)[0].type.replace("E","B");
			      });
			      return returnList;
		      }else{
			      return [];
		      }
	      },
	      getNeedPingCangOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllHadTransactionData();
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      var returnEatList=[];
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x);
									      returnEatList.push(allList[index]);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					
				      });
				
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      })
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				      return returnList;
			      }
		      }else{
			      return [];
		      }
	      },
	      ticketByFloat:function(item,type){
		      var result = 0;
		      if(type=="Q"){
			      result = item;
		      }else{
			      if(item==0){
				      result = 0;
			      }else{
				      if(item%5 !=0){
					      result = item + (5 - item%5);
				      }else{
					      result = item;
				      }
			      }
		      }
		      return result
	      },
	      withOrderOnInit:function(pushData,isBalance){
		      //真实的跟单操作
		      $(pushData).each(function(i){
			      var item = $(this)[0];
			      if(true){
				      var signInfo = ContentScript.GetSignInInfo();
				      if(['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'].contains(item.type)){
							      var postData = {};
							      postData.task = "betBox";
							      postData.combo =0;
							      //<td>6</td>
							      //<td class="RD F_B">FC</td>
							      //<td class="F_B ">4-5</td>
							      //<td id="FCE_6_4-5_100_700x">2</td>
							      //<td id="FCE_6_4-5_100_700y">100</td>
							      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
							      //<td class="">吃</td>
							
							      postData.Tix =  ContentScript.ticketByFloat(parseInt(item.x),"Q");
							      postData.Race = parseInt(item.matches);
							      var hourse1,hourse2;
							      //如果含有括号特殊处理一下
							      if(item.fb.indexOf("(")<0){
								      hourse1 = item.fb.split("-")[0];
								      hourse2 = item.fb.split("-")[1];
								      postData.fctype = 0;
							      }else{
								      hourse1 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
								      hourse2 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
								      postData.fctype = 1;
							      }
							      postData.Hs1 = hourse1;
							      postData.Hs2 = hourse2;
							      postData.Hs3 = "";
							      postData.Hs4 = "";
							      postData.Hs5 = "";
							      postData.Hs6 = "";
							      postData.Hs7 = "";
							      postData.Hs8 = "";
							      //postData.fctype = 0;
							      postData.Q = "Q";
							      if(item.type.indexOf("E")>=0){
								      postData.type = "EAT";
							      }else{
								      postData.type = "BET";
							      }
							
							      if(isBalance){
								      postData.amount = 100;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							      postData.fclmt = ContentScript.PageConfig.LimitStart;
								
							      postData.overflow = "1";
							      //postData.amount = "100";
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							      postData.rd = Math.random();
							
							      console.log(postData);
							      ///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX +"/forecast",
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
						      } 
				      if(['WPB','WPE','WB','WE','PB','PE'].contains($(this)[0].type)){
					
							      var postURL = "";
							      var postData = {};
							      postData.t = "frm";
							      postData.race = item.matches;
							      postData.horse = item.rdfb;
							      //var Proportion = parseInt(ContentScript.PageConfig.Percent);
							      postData.win = ContentScript.ticketByFloat(parseInt(item.fb),"WP");
							      postData.place = ContentScript.ticketByFloat(parseInt(item.x),"WP");
							
							      var postURL ="";
							      postURL ="/bets";
							      //if(item.type.indexOf("E")>=0){
							      //postData.type = "eat";
							      //postURL ="/bets";
							      //}else{
							      //postData.type = "bet";
							      //postURL = "/bookings";
							      //}
							
							      if(isBalance){
								      postData.amount = 99;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							
							      //postData.limit = ContentScript.PageConfig.LimitStart+"/"+ ContentScript.PageConfig.LimitEnd;
							      postData.l_win = ContentScript.PageConfig.LimitStart;
							      postData.l_place = ContentScript.PageConfig.LimitEnd;
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							
							      if(parseInt(postData.win)>0 && parseInt(postData.place)>0){
								      postData.wptck=1;
							      }else{
								      postData.wptck=0;
							      } 
							      if(parseInt(postData.win)>0 && parseInt(postData.place)==0){
								      postData.wtck=1;
								      postData.l_place = "0";
							      }
							      if(parseInt(postData.win)==0 && parseInt(postData.place)>0){
								      postData.ptck=1;
								      postData.l_win = "0";
							      }
							
							      postData.post = "1";
							      postData.rd = Math.random();
							      console.log(postData);
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX + postURL,
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
					      }
			      }
		      });
	      },
	      GetAllTransactionData:function(){
		      var result = [];
		      //<td>6</td>
		      //<td class="RD F_B">FC</td>
		      //<td class="F_B ">4-5</td>
		      //<td id="FCE_6_4-5_100_700x">2</td>
		      //<td id="FCE_6_4-5_100_700y">100</td>
		      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		      //<td class="">吃</td>
		
		      //<td>2</td>
		      //<td class="F_B">4</td>
		      //<td id="PE_2_4_78_0/16_0x">0</td>
		      //<td id="PE_2_4_78_0/16_0y">5</td>
		      //<td id="PE_2_4_78_0/16_0z">78</td>
		      //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		      //<td class="">吃</td></tr>
		
		      $(ContentScript.txn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	      GetAllHadTransactionData:function(){
		      var result = [];
		      $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2];
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 330px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<table style="width:100%">';
              htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
              htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
              htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
              htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
              htmlList +='&nbsp;&nbsp;限注:<input id="MaxCount" type="number" step="1" style="width: 40px;" size="4" value="300" />';
              htmlList +='&nbsp;倍率:<select id="Percent"><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>20</option><option>50</option><option>100</option></select>';
              //htmlList +='&nbsp;倍率:<input id="Percent" type="number" step="0.1" value="1" style="width: 40px;" size="4">';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">'
              htmlList +='<input type= "radio" name="DiscountType"  value="F1" checked="checked" id="DiscountType1"/>'
              htmlList +='折头:<input id="Discount1" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">';
              htmlList +='<input type= "radio" name="DiscountType" value="F2" id="DiscountType2"/>';
              htmlList +='折头:<input id="Discount2" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;<input id="AutoPingCang" type="checkbox" value="1" />自动平仓'
              //htmlList +='比例:<input id="Percent" type="number" step="1" style="width: 40px;" size="4" value="1" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
              htmlList +='吃:<span id="eatCount" style="color:red"></span>&nbsp;赌:<span id="betCount" style="color:red" ></span>&nbsp;';
              htmlList +='</td><td style="text-align:right">';
              htmlList +='<input type="button" id="btnStart" value="开始" />';
              htmlList +='<input type="button" id="btnEnd" value="停止" />';
              htmlList +='<input type="button" id="btnBanlance" value="平仓" />';
              htmlList +='<input type="button" id="btnEatDelete" value="删吃单" />';
              htmlList +='<input type="button" id="btnBetDelete" value="删赌单" />';
              htmlList +='</td></tr>';
              htmlList +='</table>';
              htmlList += '</div>';
        
              $("body").append(htmlList);
	      },
	      EatButtonEvent:function(){
            var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
            if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
			      var obj = $(window.frames["frmTRANS"].document).find(".del2_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
      		      PostHelp.AjaxDeleteData(obj);
      	      }
        },
        BetButtonEvent:function(){
      	    var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
      	    if(greenList!=null && greenList!=undefined && greenList.length>0 ){
			        var obj = $(window.frames["frmTRANS"].document).find(".del_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
			        PostHelp.AjaxDeleteData(obj);
      	    }
        },
	      HtmlAddDragEvent:function(){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  $("#drag").click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt($("#drag").css("left"));
                      _y = e.pageY - parseInt($("#drag").css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          $("#drag").css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }

      PostHelp={
	      urlX: "http://"+window.location.host,
	      fcfrm1 :  $("#fcfrm1"),
	      fcfrm2 :  $("#fcfrm2"),
	      chkKBBet:function(f){
		      f = PostHelp.fcfrm1;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB1(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB3(f);
		      }
	      },
          chkKBEat:function(f){
		      f = PostHelp.fcfrm2;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB2(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB4(f);
		      }
	      },
          chkKB1:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		         && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val();
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined	
			      ){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
          chkKB2:function(f){
		      f=PostHelp.fcfrm2;
		      var combo=f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }	
			      if(hss=="")
			      {
				      hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
          chkKB3:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			      && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val()
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined
			      ){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }			
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
	      chkKB4:function(f){
		      f=PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }		
			      if(hss=="")
			      {
				      hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
	      chkActBet:function(f){
		      f = PostHelp.fcfrm1;
		      var combo;
		      var check = f.find("input[name='banker1'] :checked");
		      if(check) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );	
		      }
	      },
	      chkActEat:function(f){
		      f = PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );
		      }
	      },
	      postData:function(url){
		      var view1 = $("#view1");
		      if(view1) {
				      var y = $("#view1").val();
				      var postion = url  + "&show="+y+ "&rd=" + Math.random();
				      var postionArray = postion.split("?");
				      var postUrl = postionArray[0];
				      var dataUrl = postionArray[1];
				      var dataArray = dataUrl.split('&');
				      var postString ='{';
				      for(var i=0;i< dataArray.length;i++){
					      var itemArray = dataArray[i].split('=');
					      postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				      }
				      postString = postString.substr(0,postString.length-1);
				      postString+='}';
				      var dataJson = $.parseJSON(postString);
				      $.ajax(
				      {
		                   type: "GET",
		                   url: postUrl,		             
		                   data: dataJson,
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }
	     		      });
		      }
	      },
	      PostDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      document.getElementById('boxFcBET').style.display = "none";
		      document.getElementById('boxFcEAT').style.display = "none";
		      document.getElementById('boxPfcBET').style.display = "none";
		      document.getElementById('boxPfcEAT').style.display = "none";
		      PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	      },
	      AjaxDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      var y = 0;
		      try{
			      y = view1.options[view1.selectedIndex].value;
		      }catch(e){
			      y = $(".dd-selected-value").val();
		      }
		
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      $.ajax(
				      {
		                   type: "GET",
		                   url: PostHelp.urlX +"/transactions",		             
		                   data: {
		             	      "type":"del",
		             	      "bid":id,
		             	      "x":x,
		             	      "betType":type,
		             	      "race_date":date,
		             	      "race_type":race_type,
		             	      "q":"q",
						      "race":race,
						      "show":y,
						      "rd":Math.random()
		                   },
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }   
	   				 
	           });
	      }
      }

      var host =window.location.href;
      if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
      ]]>
    </JSCode>
  </JSFile>

  <JSFile>
    <version>V400</version>
    <JSCode>
      <![CDATA[
      FootBall={
	            timerShowMonitorList:null,
	            timerClockList:[],
	            isHandler:false,
	            monitorStartTimeList:[],
	            checkLock:true,
	            monitorList:[],
	            oldMonitorList:[],
	            CreateHtmlElement:function(){
		            var htmlList = '<div id="drag" style="background:white; position: absolute; border: solid 1px #ccc; marign:0 auto; z-index: 100;top: 0;overflow-y:auto;">';
                    htmlList    += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">足球帮助程序 <a id="changeShow">切换</a></h3>';
                    htmlList    += '<input id="startBtn" value="开启自动监控" type="button" />';
                    htmlList    += '<input id="startHanderBtn" value="开启手动监控" type="button" />';
                    htmlList    += '<div id="mainBar" style="width: 1240px; height: 800px;"></div>';
                    htmlList    += '</div>';
                    $("body").append(htmlList);
	            },
	            onInit:function(){
		            FootBall.CreateHtmlElement();
		
		            $("#startBtn").bind("click",function(){
			            $("#startBtn").hide();
			            $("#startHanderBtn").hide();
			            FootBall.BindStartEvent();
		            });
		
		            $("#startHanderBtn").bind("click",function(){
			            $("#startBtn").hide();
			            $("#startHanderBtn").hide();
			            FootBall.isHandler = true;
			            FootBall.BindStartEvent();
		            });
		
		
		            $("#changeShow").bind("click",function(){
			            $("#mainBar").toggle();
		            });
	            },
	            BindStartEvent:function(){
		            var obj = $("#odds_Table");
		            if(obj!=null && obj!=undefined && obj.length>0){
			            FootBall.CheckFootBallMonitor();
			            FootBall.timerShowMonitorList = setInterval(function(){
				            FootBall.CheckFootBallMonitor()
			            },120000);
		            }else{
			            alert("没有数据");
		            }
	            },
	            CheckFootBallMonitor:function(){
				            var table = $("#odds_Table").find("tr");
				            $("#odds_Table").find("tr").eq(1).attr("id")
				            var dt = new Date();
				            var nowDate = "";
				            var hours = dt.getHours();
				            var minuter = dt.getMinutes();
				            if(hours >= 23 && minuter>=30){
					            nowDate = dt.getFullYear()+'/' + (dt.getMonth()+1) + '/' +  (dt.getDate()+1);
				            }else{
					            nowDate = dt.getFullYear()+'/' + (dt.getMonth()+1) + '/' +  dt.getDate();
				            }
				
			                $(table).each(function(index){
			    	            var obj = $(this).attr("id");
			    	            if(obj && obj.indexOf("tr")>=0){
			    		            var time = $(this).find("td").eq(1).text();
			    		            var title = $(this).find("td").eq(2).text();
			    		            var canMonitor = $(this).find("td").eq(10).find("img");
			    		            if(title.indexOf("角球")>=0){
			    			            return;
			    		            }
			    		            if(title.indexOf("上半")>=0){
			    			            return;
			    		            }
				    	            var startStringTime = nowDate+" "+ time+":00";
				    	            var showTime = time+":00";
				    	            var startDateTime = new Date(startStringTime.replace(/-/g,   "/"));
				    	            var diffTime = (startDateTime.getTime() -dt.getTime());
				    	            if(canMonitor.length >0 && time!=undefined && time.indexOf(":")>=0 && diffTime<= (5 * 60 * 1000) && diffTime >=0 ){
						                if($("#mainBar_"+obj) == undefined || $("#mainBar_"+obj).length==0){
						    	            var isExist = true;
						    	            $(FootBall.oldMonitorList).each(function(index){
						    		            if($(this)[0].id == obj){
						    			            isExist = false;
						    			            return true;
						    		            }
						    	            });
						    	            if(isExist){
						    		            FootBall.monitorList.push({
								    	            id:obj,
								    	            title: $(this).find("td").eq(0).text() + $(this).find("td").eq(2).text(),
								    	            subtitle: $(this).find("td").eq(4).text(),
								    	            othertitle: $(this).find("td").eq(6).text(),
								    	            currentSW: $(this).find("td").eq(9).text(),
								    	            yMinValue:FootBall.yMinValue,
								    	            yMaxValue:FootBall.yMaxValue,
								    	            startFootBall:startDateTime,
								    	            startTimeString:showTime
								                });
						    	            }
						                }
				    	            }
				    	            if( time!=undefined && time.indexOf(":") < 0 && !isNaN(time)){
						                if($("#mainBar_"+obj) == undefined || $("#mainBar_"+obj).length==0){
						    	            var isExist = true;
						    	            $(FootBall.oldMonitorList).each(function(index){
						    		            if($(this)[0].id == obj){
						    			            isExist = false;
						    			            return true;
						    		            }
						    	            });
						    	            if(isExist){
						    		            FootBall.monitorList.push({
								    	            id:obj,
								    	            title: $(this).find("td").eq(0).text() + $(this).find("td").eq(2).text(),
								    	            subtitle: $(this).find("td").eq(4).text(),
								    	            othertitle: $(this).find("td").eq(6).text(),
								    	            currentSW: $(this).find("td").eq(9).text(),
								    	            yMinValue:FootBall.yMinValue,
								    	            yMaxValue:FootBall.yMaxValue,
								    	            startFootBall:startDateTime,
								    	            startTimeString:showTime
								                });
						    	            }
						                }
				    	            }
			    	            }
			                });
			    
			                if(FootBall.monitorList.length>0){
			    	            $(FootBall.monitorList).each(function(index){
			    			            var htmlList = "";
			    			            if(FootBall.checkLock){
			    				            FootBall.checkLock = false;
			    				            var obj = $(this)[0];
				    			            var isExist = true;
							                $(FootBall.oldMonitorList).each(function(index){
							    	            if($(this)[0].id == obj.id){
							    		            isExist = false;
							    		            return true;
							    	            }
							                });
							                if(isExist){
							    	            htmlList += '<div style="font-size:14px;margin-bottom:5px;" id="div_' + $(this)[0].id + '">';
							    	            htmlList += '<div id="back_' + $(this)[0].id + '">'
							    	            htmlList += '<a id="delete_'+$(this)[0].id+'">删除</a>';
							    	            htmlList += '&nbsp;&nbsp;<a style="width:325px;display:inline-block;"  onmouseover="this.style.cssText=\'color:gray;width:325px;display:inline-block;\'" onmouseout="this.style.cssText=\'color:black;width:325px;display:inline-block;\'" id="a_'+ $(this)[0].id +'" > '+ $(this)[0].title + '&nbsp;' + $(this)[0].subtitle + '&nbsp;' + $(this)[0].othertitle + '</a>';
							    	            htmlList += '&nbsp;<input id="btn_'+ $(this)[0].id +'" type="button" value="开" ></input>';
							    	            htmlList += '&nbsp;<input id="clear_'+ $(this)[0].id +'" value="停" type="button" ></input>';
							    	            htmlList += '&nbsp;&nbsp;<span style="color:black;" id="time_'+ $(this)[0].id +'">'+ $(this)[0].startTimeString +'</span>';
							    	            htmlList += ' &nbsp;&nbsp;当前盘口:<span style="color:black;" id="pk_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;当前水位:<span style="color:black;" id="sw_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;软件盘口:<span style="color:black;" id="softpk_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;软件水位:<span style="color:black;" id="softsw_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;差:<b><span style="color:black;" id="diffsw_'+ $(this)[0].id +'"></span></b>';
							    	            htmlList += ' <input type="hidden" id="hiddenpk_'+ $(this)[0].id +'"></input>';
							    	            htmlList += '<br/>';  
							    	            htmlList += '</div>';  
							    	            htmlList += '</div>';
							    	            $("#mainBar").append(htmlList);
							    	            var temp =  $(this)[0];
							    	
							    	            $("#delete_"+$(this)[0].id).bind("click",function(){
							    		            $(FootBall.timerClockList).each(function(index){
							    			            if(temp.id == $(this)[0].id){
							    				            if($(this)[0].timer !=null ){
							    					            clearInterval($(this)[0].timer);
							    				            }
							    			            }
							    		            });
							    		            $("#div_" + temp.id).remove();
							    	            });
							    	
							    	            var timeClock; 
							    	            if(!FootBall.isHandler){
							    		            //自动监控所有数据
							    		            FootBall.MonitorTraceFootBall(temp,timeClock);
							    	            }
							    	
							    	            $("#btn_"+$(this)[0].id).bind("click",function(){
							    		            FootBall.MonitorTraceFootBall(temp,timeClock);
							    	            });
							    	            $("#clear_"+$(this)[0].id).bind("click",function(){
							    		            $(FootBall.timerClockList).each(function(index){
							    			            if(temp.id == $(this)[0].id){
							    				            if($(this)[0].timer !=null ){
							    					            clearInterval($(this)[0].timer);
							    				            }
							    			            }
							    		            });
							    	            });
						    	            }
							                FootBall.oldMonitorList.push(obj);
							                FootBall.checkLock = true;
			    			            }
			    			
			    	            });
			                }
	            },
	            MonitorTraceFootBall:function(obj,timeClock){
		            if(timeClock) {
			            clearInterval(timeClock);
		            }											
		            timeTicket = setInterval(function (){
			            var foot = $("#"+ obj.id);
			            if(foot==null || foot == undefined){
				            $(FootBall.timerClockList).each(function(index){
					            if(obj.id == $(this)[0].id){
						            if($(this)[0].timer !=null ){
							            clearInterval($(this)[0].timer);
						            }
					            }
				            });
			            }
			            var mintuer = $("#"+ obj.id).find("td").eq(1).text();
			
			            if(mintuer.indexOf(":")>=0 || isNaN(mintuer)){
				            if(mintuer.indexOf("半")>=0||mintuer.indexOf("下")>=0)
				            {
					            $(FootBall.monitorStartTimeList).each(function(){
						            if($(this)[0].id==obj.id){
							            $(this)[0].starttime=$(this)[0].starttime+1;
						            }
					            });
				            }
				            return;
			            }else{
				            var currentConfig ={};
				            var nowTime = new Date();
				            var pks = $("#"+ obj.id).find("td").eq(8).text();
				            var sws = $("#"+ obj.id).find("td").eq(9).text();
				            var bf = $("#"+ obj.id).find("td").eq(10).text();
				            var time = $("#"+ obj.id).find("td").eq(1).text();
				            $("#pk_"+ obj.id).text(pks);
				            $("#sw_"+ obj.id).text(sws);
				            $("#time_"+ obj.id).text(time);
				            var hasExist =false;
				            $(FootBall.monitorStartTimeList).each(function(){
					            if($(this)[0].id==obj.id ){
						            hasExist = true;
						            currentConfig = $(this)[0];
					            }
				            });
				            var count = FootBall.GetPKToCount(pks);
				            if(mintuer =="00"){
					            if(!hasExist || isNaN(currentConfig.bianpansj) || isNaN(currentConfig.fenzhongcount)){
						            var bianpansj = parseInt(5400/count);
						            var fenzhongcount = parseInt(300/count);
						            var swsvalue = parseFloat(sws) * 1000
						            var diffsecond = parseInt(((1000 - swsvalue)/fenzhongcount)*60);
						            var temptime = nowTime;
						            if(diffsecond>0){
							            temptime  = temptime.setSeconds(temptime.getSeconds()-diffsecond);
						            }
						            FootBall.monitorStartTimeList.push({id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount});
						            currentConfig = {id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount}
					            }
				            }else{ 
					            if(currentConfig.id==null || currentConfig.id == undefined || currentConfig.id.length==0 || isNaN(currentConfig.bianpansj) || isNaN(currentConfig.fenzhongcount)){
						            var bianpansj = parseInt(5400/count);
						            var fenzhongcount = parseInt(300/count);
						            var swsvalue = parseFloat(sws) * 1000
						            var diffsecond = parseInt(((1000 - swsvalue)/fenzhongcount)*60);
						            var temptime = nowTime;
						            if(diffsecond>0){
							            temptime  = temptime.setSeconds(temptime.getSeconds()-diffsecond);
						            }
						            FootBall.monitorStartTimeList.push({id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount});
						            currentConfig = {id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount}
					            }
				            }
				            var diffTime = (nowTime.getTime() -currentConfig.starttime);
				            var nowMinter = diffTime /(60 * 1000);
				            var diffminter = 1000 - (((diffTime/1000)%currentConfig.bianpansj)*currentConfig.fenzhongcount)/60;
				            var diffpk = parseInt(Math.ceil(currentConfig.count - ((diffTime/1000)/currentConfig.bianpansj)));
				            var softpk= FootBall.GetCountToPK(diffpk,bf);
				            $("#softpk_"+ obj.id).text(softpk);
				            var softsw = (diffminter/10).toFixed(2);
				            $("#softsw_"+ obj.id).text(softsw);
				            if(pks == softpk){
					            var diffsw =  (parseFloat(sws)*100 - softsw).toFixed(2);
					            $("#diffsw_"+ obj.id).text(diffsw);
					            $("#diffsw_"+ obj.id).show();
					            if(diffsw>=15){
						            $("#back_"+obj.id).css("background","#FF1493");
					            }
					            if(diffsw>=10 && diffsw<15){
						            $("#back_"+obj.id).css("background","#FF83FA");
					            }
					            if(diffsw>=0 && diffsw <10){
						            $("#back_"+obj.id).css("background","#EEEE00");
					            }
					            if(diffsw<0 &&  diffsw>=-10){
						            $("#back_"+obj.id).css("background","#7EC0EE");
					            }
					            if(diffsw<=-10 &&  diffsw>-15){
						            $("#back_"+obj.id).css("background","#836FFF");
					            }
					            if(diffsw<=-15){
						            $("#back_"+obj.id).css("background","#7D26CD");
					            }
				            }else{
					            $("#back_"+obj.id).css("background","#FFFFFF");
					            $("#diffsw_"+ obj.id).hide();
				            }
			            }
		            },1000);
		            FootBall.timerClockList.push({id:obj.id,timer:timeTicket});	
	            },
	            GetPKToCount:function(pk){
		            var count = 0;
		            if(pk.indexOf("/")>=0){
			            var arrpk = pk.split("/");
			            count += (parseFloat(arrpk[0])/0.5)
			            count += (parseFloat(arrpk[1])/0.5)
		            }else{
			            count = (parseFloat(pk)/0.5)*2
		            }
		            return count;
	            },
	            GetCountToPK:function(count,bf){
		            var arrbf = bf.split("-");
		            var bf1 = parseInt(arrbf[0])
		            var bf2 = parseInt(arrbf[1])
		            bf = bf1 + bf2;
		            count = count + bf*4;
		            if(count%2==0){
			            return parseFloat(count/4);
		            }else{
			            return parseFloat((count-1)/4) + "/" + parseFloat((count+1)/4)
		            }
	            }
            }

            var host =window.location.href;
            if(host.indexOf("jp2.xml") < 0){
	            FootBall.onInit();
            }
    ]]>
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V401</version>
    <JSCode>
      <![CDATA[
      FootBall={
	            timerShowMonitorList:null,
	            timerClockList:[],
	            isHandler:false,
	            monitorStartTimeList:[],
	            checkLock:true,
	            monitorList:[],
	            oldMonitorList:[],
	            CreateHtmlElement:function(){
		            var htmlList = '<div id="drag" style="background:white; position: absolute; border: solid 1px #ccc; marign:0 auto; z-index: 100;top: 0;overflow-y:auto;">';
                    htmlList    += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">足球帮助程序 <a id="changeShow">切换</a></h3>';
                    htmlList    += '<input id="startBtn" value="开启自动监控" type="button" />';
                    htmlList    += '<input id="startHanderBtn" value="开启手动监控" type="button" />';
                    htmlList    += '<div id="mainBar" style="width: 1240px; height: 800px;"></div>';
                    htmlList    += '</div>';
                    $("body").append(htmlList);
	            },
	            onInit:function(){
		            FootBall.CreateHtmlElement();
		
		            $("#startBtn").bind("click",function(){
			            $("#startBtn").hide();
			            $("#startHanderBtn").hide();
			            FootBall.BindStartEvent();
		            });
		
		            $("#startHanderBtn").bind("click",function(){
			            $("#startBtn").hide();
			            $("#startHanderBtn").hide();
			            FootBall.isHandler = true;
			            FootBall.BindStartEvent();
		            });
		
		
		            $("#changeShow").bind("click",function(){
			            $("#mainBar").toggle();
		            });
	            },
	            BindStartEvent:function(){
		            var obj = $("#odds_Table");
		            if(obj!=null && obj!=undefined && obj.length>0){
			            FootBall.CheckFootBallMonitor();
			            FootBall.timerShowMonitorList = setInterval(function(){
				            FootBall.CheckFootBallMonitor()
			            },120000);
		            }else{
			            alert("没有数据");
		            }
	            },
	            CheckFootBallMonitor:function(){
				            var table = $("#odds_Table").find("tr");
				            $("#odds_Table").find("tr").eq(1).attr("id")
				            var dt = new Date();
				            var nowDate = "";
				            var hours = dt.getHours();
				            var minuter = dt.getMinutes();
				            if(hours >= 23 && minuter>=30){
					            nowDate = dt.getFullYear()+'/' + (dt.getMonth()+1) + '/' +  (dt.getDate()+1);
				            }else{
					            nowDate = dt.getFullYear()+'/' + (dt.getMonth()+1) + '/' +  dt.getDate();
				            }
				
			                $(table).each(function(index){
			    	            var obj = $(this).attr("id");
			    	            if(obj && obj.indexOf("tr")>=0){
			    		            var time = $(this).find("td").eq(1).text();
			    		            var title = $(this).find("td").eq(2).text();
			    		            var canMonitor = $(this).find("td").eq(10).find("img");
			    		            if(title.indexOf("角球")>=0){
			    			            return;
			    		            }
			    		            if(title.indexOf("上半")>=0){
			    			            return;
			    		            }
				    	            var startStringTime = nowDate+" "+ time+":00";
				    	            var showTime = time+":00";
				    	            var startDateTime = new Date(startStringTime.replace(/-/g,   "/"));
				    	            var diffTime = (startDateTime.getTime() -dt.getTime());
				    	            if(canMonitor.length >0 && time!=undefined && time.indexOf(":")>=0 && diffTime<= (5 * 60 * 1000) && diffTime >=0 ){
						                if($("#mainBar_"+obj) == undefined || $("#mainBar_"+obj).length==0){
						    	            var isExist = true;
						    	            $(FootBall.oldMonitorList).each(function(index){
						    		            if($(this)[0].id == obj){
						    			            isExist = false;
						    			            return true;
						    		            }
						    	            });
						    	            if(isExist){
						    		            FootBall.monitorList.push({
								    	            id:obj,
								    	            title: $(this).find("td").eq(0).text() + $(this).find("td").eq(2).text(),
								    	            subtitle: $(this).find("td").eq(4).text(),
								    	            othertitle: $(this).find("td").eq(6).text(),
								    	            currentSW: $(this).find("td").eq(9).text(),
								    	            yMinValue:FootBall.yMinValue,
								    	            yMaxValue:FootBall.yMaxValue,
								    	            startFootBall:startDateTime,
								    	            startTimeString:showTime
								                });
						    	            }
						                }
				    	            }
				    	            if( time!=undefined && time.indexOf(":") < 0 && !isNaN(time)){
						                if($("#mainBar_"+obj) == undefined || $("#mainBar_"+obj).length==0){
						    	            var isExist = true;
						    	            $(FootBall.oldMonitorList).each(function(index){
						    		            if($(this)[0].id == obj){
						    			            isExist = false;
						    			            return true;
						    		            }
						    	            });
						    	            if(isExist){
						    		            FootBall.monitorList.push({
								    	            id:obj,
								    	            title: $(this).find("td").eq(0).text() + $(this).find("td").eq(2).text(),
								    	            subtitle: $(this).find("td").eq(4).text(),
								    	            othertitle: $(this).find("td").eq(6).text(),
								    	            currentSW: $(this).find("td").eq(9).text(),
								    	            yMinValue:FootBall.yMinValue,
								    	            yMaxValue:FootBall.yMaxValue,
								    	            startFootBall:startDateTime,
								    	            startTimeString:showTime
								                });
						    	            }
						                }
				    	            }
			    	            }
			                });
			    
			                if(FootBall.monitorList.length>0){
			    	            $(FootBall.monitorList).each(function(index){
			    			            var htmlList = "";
			    			            if(FootBall.checkLock){
			    				            FootBall.checkLock = false;
			    				            var obj = $(this)[0];
				    			            var isExist = true;
							                $(FootBall.oldMonitorList).each(function(index){
							    	            if($(this)[0].id == obj.id){
							    		            isExist = false;
							    		            return true;
							    	            }
							                });
							                if(isExist){
							    	            htmlList += '<div style="font-size:14px;margin-bottom:5px;" id="div_' + $(this)[0].id + '">';
							    	            htmlList += '<div id="back_' + $(this)[0].id + '">'
							    	            htmlList += '<a id="delete_'+$(this)[0].id+'">删除</a>';
							    	            htmlList += '&nbsp;&nbsp;<a style="width:325px;display:inline-block;"  onmouseover="this.style.cssText=\'color:gray;width:325px;display:inline-block;\'" onmouseout="this.style.cssText=\'color:black;width:325px;display:inline-block;\'" id="a_'+ $(this)[0].id +'" > '+ $(this)[0].title + '&nbsp;' + $(this)[0].subtitle + '&nbsp;' + $(this)[0].othertitle + '</a>';
							    	            htmlList += '&nbsp;<input id="btn_'+ $(this)[0].id +'" type="button" value="开" ></input>';
							    	            htmlList += '&nbsp;<input id="clear_'+ $(this)[0].id +'" value="停" type="button" ></input>';
							    	            htmlList += '&nbsp;&nbsp;<span style="color:black;" id="time_'+ $(this)[0].id +'">'+ $(this)[0].startTimeString +'</span>';
							    	            htmlList += ' &nbsp;&nbsp;当前盘口:<span style="color:black;" id="pk_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;当前水位:<span style="color:black;" id="sw_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;软件盘口:<span style="color:black;" id="softpk_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;软件水位:<span style="color:black;" id="softsw_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;差:<b><span style="color:black;" id="diffsw_'+ $(this)[0].id +'"></span></b>';
							    	            htmlList += ' <input type="hidden" id="hiddenpk_'+ $(this)[0].id +'"></input>';
							    	            htmlList += '<br/>';  
							    	            htmlList += '</div>';  
							    	            htmlList += '</div>';
							    	            $("#mainBar").append(htmlList);
							    	            var temp =  $(this)[0];
							    	
							    	            $("#delete_"+$(this)[0].id).bind("click",function(){
							    		            $(FootBall.timerClockList).each(function(index){
							    			            if(temp.id == $(this)[0].id){
							    				            if($(this)[0].timer !=null ){
							    					            clearInterval($(this)[0].timer);
							    				            }
							    			            }
							    		            });
							    		            $("#div_" + temp.id).remove();
							    	            });
							    	
							    	            var timeClock; 
							    	            if(!FootBall.isHandler){
							    		            //自动监控所有数据
							    		            FootBall.MonitorTraceFootBall(temp,timeClock);
							    	            }
							    	
							    	            $("#btn_"+$(this)[0].id).bind("click",function(){
							    		            FootBall.MonitorTraceFootBall(temp,timeClock);
							    	            });
							    	            $("#clear_"+$(this)[0].id).bind("click",function(){
							    		            $(FootBall.timerClockList).each(function(index){
							    			            if(temp.id == $(this)[0].id){
							    				            if($(this)[0].timer !=null ){
							    					            clearInterval($(this)[0].timer);
							    				            }
							    			            }
							    		            });
							    	            });
						    	            }
							                FootBall.oldMonitorList.push(obj);
							                FootBall.checkLock = true;
			    			            }
			    			
			    	            });
			                }
	            },
	            MonitorTraceFootBall:function(obj,timeClock){
		            if(timeClock) {
			            clearInterval(timeClock);
		            }											
		            timeTicket = setInterval(function (){
			            var foot = $("#"+ obj.id);
			            if(foot==null || foot == undefined){
				            $(FootBall.timerClockList).each(function(index){
					            if(obj.id == $(this)[0].id){
						            if($(this)[0].timer !=null ){
							            clearInterval($(this)[0].timer);
						            }
					            }
				            });
			            }
			            var mintuer = $("#"+ obj.id).find("td").eq(1).text();
			
			            if(mintuer.indexOf(":")>=0 || isNaN(mintuer)){
				            if(mintuer.indexOf("半")>=0||mintuer.indexOf("下")>=0)
				            {
					            $(FootBall.monitorStartTimeList).each(function(){
						            if($(this)[0].id==obj.id){
							            $(this)[0].starttime=$(this)[0].starttime+1;
						            }
					            });
				            }
				            return;
			            }else{
				            var currentConfig ={};
				            var nowTime = new Date();
				            var pks = $("#"+ obj.id).find("td").eq(8).text();
				            var sws = $("#"+ obj.id).find("td").eq(9).text();
				            var bf = $("#"+ obj.id).find("td").eq(10).text();
				            var time = $("#"+ obj.id).find("td").eq(1).text();
				            $("#pk_"+ obj.id).text(pks);
				            $("#sw_"+ obj.id).text(sws);
				            $("#time_"+ obj.id).text(time);
				            var hasExist =false;
				            $(FootBall.monitorStartTimeList).each(function(){
					            if($(this)[0].id==obj.id ){
						            hasExist = true;
						            currentConfig = $(this)[0];
					            }
				            });
				            var count = FootBall.GetPKToCount(pks);
				            if(mintuer =="00"){
					            if(!hasExist || isNaN(currentConfig.bianpansj) || isNaN(currentConfig.fenzhongcount)){
						            var bianpansj = parseInt(5400/count);
						            var fenzhongcount = parseInt(300/count);
						            var swsvalue = parseFloat(sws) * 1000
						            var diffsecond = parseInt(((1000 - swsvalue)/fenzhongcount)*60);
						            var temptime = nowTime;
						            if(diffsecond>0){
							            temptime  = temptime.setSeconds(temptime.getSeconds()-diffsecond);
						            }
						            FootBall.monitorStartTimeList.push({id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount});
						            currentConfig = {id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount}
					            }
				            }else{ 
					            if(currentConfig.id==null || currentConfig.id == undefined || currentConfig.id.length==0 || isNaN(currentConfig.bianpansj) || isNaN(currentConfig.fenzhongcount)){
						            var bianpansj = parseInt(5400/count);
						            var fenzhongcount = parseInt(300/count);
						            var swsvalue = parseFloat(sws) * 1000
						            var diffsecond = parseInt(((1000 - swsvalue)/fenzhongcount)*60);
						            var temptime = nowTime;
						            if(diffsecond>0){
							            temptime  = temptime.setSeconds(temptime.getSeconds()-diffsecond);
						            FootBall.monitorStartTimeList.push({id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount});
						            currentConfig = {id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount}
					            }
				            }
				            var diffTime = (nowTime.getTime() -currentConfig.starttime);
				            var nowMinter = diffTime /(60 * 1000);
				            var diffminter = 1000 - (((diffTime/1000)%currentConfig.bianpansj)*currentConfig.fenzhongcount)/60;
				            var diffpk = parseInt(Math.ceil(currentConfig.count - ((diffTime/1000)/currentConfig.bianpansj)));
				            var softpk= FootBall.GetCountToPK(diffpk,bf);
				            $("#softpk_"+ obj.id).text(softpk);
				            var softsw = (diffminter/10).toFixed(2);
				            $("#softsw_"+ obj.id).text(softsw);
				            if(pks == softpk){
					            var diffsw =  (parseFloat(sws)*100 - softsw).toFixed(2);
					            $("#diffsw_"+ obj.id).text(diffsw);
					            $("#diffsw_"+ obj.id).show();
					            if(diffsw>=15 && softsw>75 && parseFloat(sws)<1.1){
						            $("#back_"+obj.id).css("background","#FF1493");
					            }
					            else if(diffsw<=-15 && softsw>75 && parseFloat(sws)<1.1){
						            $("#back_"+obj.id).css("background","#7D26CD");
					            }
					            else{
					            	$("#back_"+obj.id).css("background","#FFFFFF");
					            	$("#diffsw_"+ obj.id).hide();
					            }
				            }else{
					            $("#back_"+obj.id).css("background","#FFFFFF");
					            $("#diffsw_"+ obj.id).hide();
				            }
			            }
		            }},1000);
		            FootBall.timerClockList.push({id:obj.id,timer:timeTicket});	
	            },
	            GetPKToCount:function(pk){
		            var count = 0;
		            if(pk.indexOf("/")>=0){
			            var arrpk = pk.split("/");
			            count += (parseFloat(arrpk[0])/0.5)
			            count += (parseFloat(arrpk[1])/0.5)
		            }else{
			            count = (parseFloat(pk)/0.5)*2
		            }
		            return count;
	            },
	            GetCountToPK:function(count,bf){
		            var arrbf = bf.split("-");
		            var bf1 = parseInt(arrbf[0])
		            var bf2 = parseInt(arrbf[1])
		            bf = bf1 + bf2;
		            count = count + bf*4;
		            if(count%2==0){
			            return parseFloat(count/4);
		            }else{
			            return parseFloat((count-1)/4) + "/" + parseFloat((count+1)/4)
		            }
	            }
            }

            var host =window.location.href;
            if(host.indexOf("jp2.xml") < 0){
	            FootBall.onInit();
            }
    ]]>
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V402</version>
    <JSCode>
      <![CDATA[
      FootBall={
	            timerShowMonitorList:null,
	            timerClockList:[],
	            isHandler:false,
	            monitorStartTimeList:[],
	            checkLock:true,
	            monitorList:[],
	            oldMonitorList:[],
	            CreateHtmlElement:function(){
		            var htmlList = '<div id="drag" style="background:white; position: absolute; border: solid 1px #ccc; marign:0 auto; z-index: 100;top: 0;overflow-y:auto;">';
                    htmlList    += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">足球帮助程序 <a id="changeShow">切换</a></h3>';
                    htmlList    += '<input id="startBtn" value="开启自动监控" type="button" />';
                    htmlList    += '<input id="startHanderBtn" value="开启手动监控" type="button" />';
                    htmlList    += '<div id="mainBar" style="width: 1240px; height: 800px;"></div>';
                    htmlList    += '</div>';
                    $("body").append(htmlList);
	            },
	            onInit:function(){
		            FootBall.CreateHtmlElement();
		
		            $("#startBtn").bind("click",function(){
			            $("#startBtn").hide();
			            $("#startHanderBtn").hide();
			            FootBall.BindStartEvent();
		            });
		
		            $("#startHanderBtn").bind("click",function(){
			            $("#startBtn").hide();
			            $("#startHanderBtn").hide();
			            FootBall.isHandler = true;
			            FootBall.BindStartEvent();
		            });
		
		
		            $("#changeShow").bind("click",function(){
			            $("#mainBar").toggle();
		            });
	            },
	            BindStartEvent:function(){
		            var obj = $("#odds_Table");
		            if(obj!=null && obj!=undefined && obj.length>0){
			            FootBall.CheckFootBallMonitor();
			            FootBall.timerShowMonitorList = setInterval(function(){
				            FootBall.CheckFootBallMonitor()
			            },120000);
		            }else{
			            alert("没有数据");
		            }
	            },
	            CheckFootBallMonitor:function(){
				            var table = $("#odds_Table").find("tr");
				            $("#odds_Table").find("tr").eq(1).attr("id")
				            var dt = new Date();
				            var nowDate = "";
				            var hours = dt.getHours();
				            var minuter = dt.getMinutes();
				            if(hours >= 23 && minuter>=30){
					            nowDate = dt.getFullYear()+'/' + (dt.getMonth()+1) + '/' +  (dt.getDate()+1);
				            }else{
					            nowDate = dt.getFullYear()+'/' + (dt.getMonth()+1) + '/' +  dt.getDate();
				            }
				
			                $(table).each(function(index){
			    	            var obj = $(this).attr("id");
			    	            if(obj && obj.indexOf("tr")>=0){
			    		            var time = $(this).find("td").eq(1).text();
			    		            var title = $(this).find("td").eq(2).text();
			    		            var canMonitor = $(this).find("td").eq(10).find("img");
			    		            if(title.indexOf("角球")>=0){
			    			            return;
			    		            }
			    		            if(title.indexOf("上半")>=0){
			    			            return;
			    		            }
				    	            var startStringTime = nowDate+" "+ time+":00";
				    	            var showTime = time+":00";
				    	            var startDateTime = new Date(startStringTime.replace(/-/g,   "/"));
				    	            var diffTime = (startDateTime.getTime() -dt.getTime());
				    	            if(canMonitor.length >0 && time!=undefined && time.indexOf(":")>=0 && diffTime<= (5 * 60 * 1000) && diffTime >=0 ){
						                if($("#mainBar_"+obj) == undefined || $("#mainBar_"+obj).length==0){
						    	            var isExist = true;
						    	            $(FootBall.oldMonitorList).each(function(index){
						    		            if($(this)[0].id == obj){
						    			            isExist = false;
						    			            return true;
						    		            }
						    	            });
						    	            if(isExist){
						    		            FootBall.monitorList.push({
								    	            id:obj,
								    	            title: $(this).find("td").eq(0).text() + $(this).find("td").eq(2).text(),
								    	            subtitle: $(this).find("td").eq(4).text(),
								    	            othertitle: $(this).find("td").eq(6).text(),
								    	            currentSW: $(this).find("td").eq(9).text(),
								    	            yMinValue:FootBall.yMinValue,
								    	            yMaxValue:FootBall.yMaxValue,
								    	            startFootBall:startDateTime,
								    	            startTimeString:showTime
								                });
						    	            }
						                }
				    	            }
				    	            if( time!=undefined && time.indexOf(":") < 0 && !isNaN(time)){
						                if($("#mainBar_"+obj) == undefined || $("#mainBar_"+obj).length==0){
						    	            var isExist = true;
						    	            $(FootBall.oldMonitorList).each(function(index){
						    		            if($(this)[0].id == obj){
						    			            isExist = false;
						    			            return true;
						    		            }
						    	            });
						    	            if(isExist){
						    		            FootBall.monitorList.push({
								    	            id:obj,
								    	            title: $(this).find("td").eq(0).text() + $(this).find("td").eq(2).text(),
								    	            subtitle: $(this).find("td").eq(4).text(),
								    	            othertitle: $(this).find("td").eq(6).text(),
								    	            currentSW: $(this).find("td").eq(9).text(),
								    	            yMinValue:FootBall.yMinValue,
								    	            yMaxValue:FootBall.yMaxValue,
								    	            startFootBall:startDateTime,
								    	            startTimeString:showTime
								                });
						    	            }
						                }
				    	            }
			    	            }
			                });
			    
			                if(FootBall.monitorList.length>0){
			    	            $(FootBall.monitorList).each(function(index){
			    			            var htmlList = "";
			    			            if(FootBall.checkLock){
			    				            FootBall.checkLock = false;
			    				            var obj = $(this)[0];
				    			            var isExist = true;
							                $(FootBall.oldMonitorList).each(function(index){
							    	            if($(this)[0].id == obj.id){
							    		            isExist = false;
							    		            return true;
							    	            }
							                });
							                if(isExist){
							    	            htmlList += '<div style="font-size:14px;margin-bottom:5px;" id="div_' + $(this)[0].id + '">';
							    	            htmlList += '<div id="back_' + $(this)[0].id + '">'
							    	            htmlList += '<a id="delete_'+$(this)[0].id+'">删除</a>';
							    	            htmlList += '&nbsp;&nbsp;<a style="width:325px;display:inline-block;"  onmouseover="this.style.cssText=\'color:gray;width:325px;display:inline-block;\'" onmouseout="this.style.cssText=\'color:black;width:325px;display:inline-block;\'" id="a_'+ $(this)[0].id +'" > '+ $(this)[0].title + '&nbsp;' + $(this)[0].subtitle + '&nbsp;' + $(this)[0].othertitle + '</a>';
							    	            htmlList += '&nbsp;<input id="btn_'+ $(this)[0].id +'" type="button" value="开" ></input>';
							    	            htmlList += '&nbsp;<input id="clear_'+ $(this)[0].id +'" value="停" type="button" ></input>';
							    	            htmlList += '&nbsp;&nbsp;<span style="color:black;" id="time_'+ $(this)[0].id +'">'+ $(this)[0].startTimeString +'</span>';
							    	            htmlList += ' &nbsp;&nbsp;当前盘口:<span style="color:black;" id="pk_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;当前水位:<span style="color:black;" id="sw_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;软件盘口:<span style="color:black;" id="softpk_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;软件水位:<span style="color:black;" id="softsw_'+ $(this)[0].id +'"></span>';
							    	            htmlList += ' &nbsp;&nbsp;差:<b><span style="color:black;" id="diffsw_'+ $(this)[0].id +'"></span></b>';
							    	            htmlList += ' &nbsp;&nbsp;比分:<b><span style="color:black;" id="bifen_'+ $(this)[0].id +'"></span></b>';
							    	            htmlList += ' <input type="hidden" id="hiddenpk_'+ $(this)[0].id +'"></input>';
							    	            htmlList += '<br/>';  
							    	            htmlList += '</div>';  
							    	            htmlList += '</div>';
							    	            $("#mainBar").append(htmlList);
							    	            var temp =  $(this)[0];
							    	
							    	            $("#delete_"+$(this)[0].id).bind("click",function(){
							    		            $(FootBall.timerClockList).each(function(index){
							    			            if(temp.id == $(this)[0].id){
							    				            if($(this)[0].timer !=null ){
							    					            clearInterval($(this)[0].timer);
							    				            }
							    			            }
							    		            });
							    		            $("#div_" + temp.id).remove();
							    	            });
							    	
							    	            var timeClock; 
							    	            if(!FootBall.isHandler){
							    		            //自动监控所有数据
							    		            FootBall.MonitorTraceFootBall(temp,timeClock);
							    	            }
							    	
							    	            $("#btn_"+$(this)[0].id).bind("click",function(){
							    		            FootBall.MonitorTraceFootBall(temp,timeClock);
							    	            });
							    	            $("#clear_"+$(this)[0].id).bind("click",function(){
							    		            $(FootBall.timerClockList).each(function(index){
							    			            if(temp.id == $(this)[0].id){
							    				            if($(this)[0].timer !=null ){
							    					            clearInterval($(this)[0].timer);
							    				            }
							    			            }
							    		            });
							    	            });
						    	            }
							                FootBall.oldMonitorList.push(obj);
							                FootBall.checkLock = true;
			    			            }
			    			
			    	            });
			                }
	            },
	            MonitorTraceFootBall:function(obj,timeClock){
		            if(timeClock) {
			            clearInterval(timeClock);
		            }											
		            timeTicket = setInterval(function (){
			            var foot = $("#"+ obj.id);
			            if(foot==null || foot == undefined){
				            $(FootBall.timerClockList).each(function(index){
					            if(obj.id == $(this)[0].id){
						            if($(this)[0].timer !=null ){
							            clearInterval($(this)[0].timer);
						            }
					            }
				            });
			            }
			            var mintuer = $("#"+ obj.id).find("td").eq(1).text();
			
			            if(mintuer.indexOf(":")>=0 || isNaN(mintuer)){
				            if(mintuer.indexOf("半")>=0||mintuer.indexOf("下")>=0)
				            {
					            $(FootBall.monitorStartTimeList).each(function(){
						            if($(this)[0].id==obj.id){
							            $(this)[0].starttime=$(this)[0].starttime+1;
						            }
					            });
				            }
				            return;
			            }else{
				            var currentConfig ={};
				            var nowTime = new Date();
				            var pks = $("#"+ obj.id).find("td").eq(8).text();
				            var sws = $("#"+ obj.id).find("td").eq(9).text();
				            var bf = $("#"+ obj.id).find("td").eq(10).text();
				            var time = $("#"+ obj.id).find("td").eq(1).text();
				            $("#pk_"+ obj.id).text(pks);
				            $("#sw_"+ obj.id).text(sws);
				            $("#time_"+ obj.id).text(time);
				            $("#bifen_"+ obj.id).text(bf);
				            var hasExist =false;
				            $(FootBall.monitorStartTimeList).each(function(){
					            if($(this)[0].id==obj.id ){
						            hasExist = true;
						            currentConfig = $(this)[0];
					            }
				            });
				            var count = FootBall.GetPKToCount(pks);
				            if(mintuer =="00"){
					            if(!hasExist || isNaN(currentConfig.bianpansj) || isNaN(currentConfig.fenzhongcount)){
						            var bianpansj = parseInt(5400/count);
						            var fenzhongcount = parseInt(300/count);
						            var swsvalue = parseFloat(sws) * 1000
						            var diffsecond = parseInt(((1000 - swsvalue)/fenzhongcount)*60);
						            var temptime = nowTime;
						            if(diffsecond>0){
							            temptime  = temptime.setSeconds(temptime.getSeconds()-diffsecond);
						            }
						            FootBall.monitorStartTimeList.push({id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount});
						            currentConfig = {id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount}
					            }
				            }else{ 
					            if(currentConfig.id==null || currentConfig.id == undefined || currentConfig.id.length==0 || isNaN(currentConfig.bianpansj) || isNaN(currentConfig.fenzhongcount)){
						            var bianpansj = parseInt(5400/count);
						            var fenzhongcount = parseInt(300/count);
						            var swsvalue = parseFloat(sws) * 1000
						            var diffsecond = parseInt(((1000 - swsvalue)/fenzhongcount)*60);
						            var temptime = nowTime;
						            if(diffsecond>0){
							            temptime  = temptime.setSeconds(temptime.getSeconds()-diffsecond);
						            FootBall.monitorStartTimeList.push({id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount});
						            currentConfig = {id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount}
					            }
				            }
				            var diffTime = (nowTime.getTime() -currentConfig.starttime);
				            var nowMinter = diffTime /(60 * 1000);
				            var diffminter = 1000 - (((diffTime/1000)%currentConfig.bianpansj)*currentConfig.fenzhongcount)/60;
				            var diffpk = parseInt(Math.ceil(currentConfig.count - ((diffTime/1000)/currentConfig.bianpansj)));
				            var softpk= FootBall.GetCountToPK(diffpk,bf);
				            $("#softpk_"+ obj.id).text(softpk);
				            var softsw = (diffminter/10).toFixed(2);
				            $("#softsw_"+ obj.id).text(softsw);
				            if(pks == softpk){
					            var diffsw =  (parseFloat(sws)*100 - softsw).toFixed(2);
					            $("#diffsw_"+ obj.id).text(diffsw);
					            $("#diffsw_"+ obj.id).show();
					            if(diffsw>=15 && softsw>75 && parseFloat(sws)<1.1){
						            $("#back_"+obj.id).css("background","#FF1493");
					            }
					            else if(diffsw<=-15 && softsw>75 && parseFloat(sws)<1.1){
						            $("#back_"+obj.id).css("background","#7D26CD");
					            }
					            else{
					            	$("#back_"+obj.id).css("background","#FFFFFF");
					            	$("#diffsw_"+ obj.id).hide();
					            }
				            }else{
					            $("#back_"+obj.id).css("background","#FFFFFF");
					            $("#diffsw_"+ obj.id).hide();
				            }
			            }
		            }},1000);
		            FootBall.timerClockList.push({id:obj.id,timer:timeTicket});	
	            },
	            GetPKToCount:function(pk){
		            var count = 0;
		            if(pk.indexOf("/")>=0){
			            var arrpk = pk.split("/");
			            count += (parseFloat(arrpk[0])/0.5)
			            count += (parseFloat(arrpk[1])/0.5)
		            }else{
			            count = (parseFloat(pk)/0.5)*2
		            }
		            return count;
	            },
	            GetCountToPK:function(count,bf){
		            var arrbf = bf.split("-");
		            var bf1 = parseInt(arrbf[0])
		            var bf2 = parseInt(arrbf[1])
		            bf = bf1 + bf2;
		            count = count + bf*4;
		            if(count%2==0){
			            return parseFloat(count/4);
		            }else{
			            return parseFloat((count-1)/4) + "/" + parseFloat((count+1)/4)
		            }
	            }
            }

            var host =window.location.href;
            if(host.indexOf("jp2.xml") < 0){
	            FootBall.onInit();
            }
    ]]>
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V403</version>
    <JSCode>
    <![CDATA[
    FootBall={
	            timerShowMonitorList:null,
	            timerClockList:[],
	            isHandler:false,
	            monitorStartTimeList:[],
	            checkLock:true,
	            monitorList:[],
	            oldMonitorList:[],
	            CreateHtmlElement:function(){
		            var htmlList = '<div id="drag" style="background:white; position: absolute; border: solid 1px #ccc; marign:0 auto; z-index: 100;top: 0;overflow-y:auto;">';
                    htmlList    += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">足球帮助程序 <a id="changeShow">切换</a></h3>';
                    htmlList    += '<input id="startBtn" value="开启自动监控" type="button" />';
                    htmlList    += '<input id="startHanderBtn" value="开启手动监控" type="button" />';
                    htmlList    += '<div id="mainBar" style="width: 1240px; height: 800px;"></div>';
                    htmlList    += '</div>';
                    $("body").append(htmlList);
	            },
	            onInit:function(){
		            FootBall.CreateHtmlElement();
		
		            $("#startBtn").bind("click",function(){
			            $("#startBtn").hide();
			            $("#startHanderBtn").hide();
			            FootBall.BindStartEvent();
		            });
		
		            $("#startHanderBtn").bind("click",function(){
			            $("#startBtn").hide();
			            $("#startHanderBtn").hide();
			            FootBall.isHandler = true;
			            FootBall.BindStartEvent();
		            });
		
		
		            $("#changeShow").bind("click",function(){
			            $("#mainBar").toggle();
		            });
	            },
	            BindStartEvent:function(){
		            var obj = $("#odds_Table");
		            if(obj!=null && obj!=undefined && obj.length>0){
			            FootBall.CheckFootBallMonitor();
			            FootBall.timerShowMonitorList = setInterval(function(){
				            FootBall.CheckFootBallMonitor()
			            },120000);
		            }else{
			            alert("没有数据");
		            }
	            },
	            CheckFootBallMonitor:function(){
				            var table = $("#odds_Table").find("tr");
				            $("#odds_Table").find("tr").eq(1).attr("id")
				            var dt = new Date();
				            var nowDate = "";
				            var hours = dt.getHours();
				            var minuter = dt.getMinutes();
				            if(hours >= 23 && minuter>=30){
					            nowDate = dt.getFullYear()+'/' + (dt.getMonth()+1) + '/' +  (dt.getDate()+1);
				            }else{
					            nowDate = dt.getFullYear()+'/' + (dt.getMonth()+1) + '/' +  dt.getDate();
				            }
				
			                $(table).each(function(index){
			    	            var obj = $(this).attr("id");
			    	            if(obj && obj.indexOf("tr")>=0){
			    		            var time = $(this).find("td").eq(1).text();
			    		            var title = $(this).find("td").eq(2).text();
			    		            var canMonitor = $(this).find("td").eq(10).find("img");
			    		            if(title.indexOf("角球")>=0){
			    			            return;
			    		            }
			    		            if(title.indexOf("上半")>=0){
			    			            return;
			    		            }
				    	            var startStringTime = nowDate+" "+ time+":00";
				    	            var showTime = time+":00";
				    	            var startDateTime = new Date(startStringTime.replace(/-/g,   "/"));
				    	            var diffTime = (startDateTime.getTime() -dt.getTime());
				    	            if(canMonitor.length >0 && time!=undefined && time.indexOf(":")>=0 && diffTime<= (5 * 60 * 1000) && diffTime >=0 ){
						                if($("#mainBar_"+obj) == undefined || $("#mainBar_"+obj).length==0){
						    	            var isExist = true;
						    	            $(FootBall.oldMonitorList).each(function(index){
						    		            if($(this)[0].id == obj){
						    			            isExist = false;
						    			            return true;
						    		            }
						    	            });
						    	            if(isExist){
						    		            FootBall.monitorList.push({
								    	            id:obj,
								    	            title: $(this).find("td").eq(0).text() + $(this).find("td").eq(2).text(),
								    	            subtitle: $(this).find("td").eq(4).text(),
								    	            othertitle: $(this).find("td").eq(6).text(),
								    	            currentSW: $(this).find("td").eq(9).text(),
								    	            yMinValue:FootBall.yMinValue,
								    	            yMaxValue:FootBall.yMaxValue,
								    	            startFootBall:startDateTime,
								    	            startTimeString:showTime
								                });
						    	            }
						                }
				    	            }
				    	            if( time!=undefined && time.indexOf(":") < 0 && !isNaN(time)){
						                if($("#mainBar_"+obj) == undefined || $("#mainBar_"+obj).length==0){
						    	            var isExist = true;
						    	            $(FootBall.oldMonitorList).each(function(index){
						    		            if($(this)[0].id == obj){
						    			            isExist = false;
						    			            return true;
						    		            }
						    	            });
						    	            if(isExist){
						    		            FootBall.monitorList.push({
								    	            id:obj,
								    	            title: $(this).find("td").eq(0).text() + $(this).find("td").eq(2).text(),
								    	            subtitle: $(this).find("td").eq(4).text(),
								    	            othertitle: $(this).find("td").eq(6).text(),
								    	            currentSW: $(this).find("td").eq(9).text(),
								    	            yMinValue:FootBall.yMinValue,
								    	            yMaxValue:FootBall.yMaxValue,
								    	            startFootBall:startDateTime,
								    	            startTimeString:showTime
								                });
						    	            }
						                }
				    	            }
			    	            }
			                });
			    
			                if(FootBall.monitorList.length>0){
			    	            $(FootBall.monitorList).each(function(index){
			    			            var htmlList = "";
			    			            if(FootBall.checkLock){
			    				            FootBall.checkLock = false;
			    				            var obj = $(this)[0];
				    			            var isExist = true;
							                $(FootBall.oldMonitorList).each(function(index){
							    	            if($(this)[0].id == obj.id){
							    		            isExist = false;
							    		            return true;
							    	            }
							                });
							                if(isExist){
							    	            htmlList += '<div style="font-size:14px;display:inline-block;margin-bottom:5px;" id="div_' + $(this)[0].id + '">';
							    	            htmlList += '<div id="back_' + $(this)[0].id + '">'
							    	            htmlList += '<a id="delete_'+$(this)[0].id+'">删除</a>';
							    	            htmlList += '&nbsp;&nbsp;<a style="width:325px;display:inline-block;"  onmouseover="this.style.cssText=\'color:gray;width:325px;display:inline-block;\'" onmouseout="this.style.cssText=\'color:black;width:325px;display:inline-block;\'" id="a_'+ $(this)[0].id +'" > '+ $(this)[0].title + '&nbsp;' + $(this)[0].subtitle + '&nbsp;' + $(this)[0].othertitle + '</a>';
							    	            htmlList += '&nbsp;<input id="btn_'+ $(this)[0].id +'" type="button" value="开" ></input>';
							    	            htmlList += '&nbsp;<input id="clear_'+ $(this)[0].id +'" value="停" type="button" ></input>';
							    	            htmlList += '&nbsp;&nbsp;<span style="color:black;" id="time_'+ $(this)[0].id +'">'+ $(this)[0].startTimeString +'</span>';
							    	            htmlList += '<div style="display:inline-block"><table style="display:inline-block;vertical-align:middle;">'
							    	            htmlList += '<tr><td>'+' &nbsp;&nbsp;当前盘口:<span style="color:black;" id="pk_'+ $(this)[0].id +'"></span>'+'</td></tr>'
							    	            htmlList += '<tr><td>'+' &nbsp;&nbsp;软件盘口:<span style="color:black;" id="softpk_'+ $(this)[0].id +'"></span>'+'</td></tr>'
							    	            htmlList += '</table>'
							    	            htmlList += '<table style="display:inline-block;vertical-align:middle;">'
							    	            htmlList += '<tr><td>'+' &nbsp;&nbsp;当前水位:<span style="color:black;" id="sw_'+ $(this)[0].id +'"></span>'+'</td></tr>'
							    	            htmlList += '<tr><td>'+' &nbsp;&nbsp;软件水位:<span style="color:black;" id="softsw_'+ $(this)[0].id +'"></span>'+'</td></tr>'
							    	            htmlList += '</table></div>'
							    	            htmlList += ' &nbsp;&nbsp;差:<b><span style="color:black;" id="diffsw_'+ $(this)[0].id +'"></span></b>';
							    	            htmlList += ' &nbsp;&nbsp;比分:<b><span style="color:black;" id="bifen_'+ $(this)[0].id +'"></span></b>';
   											    htmlList += ' <input type="hidden" id="hiddenpk_'+ $(this)[0].id +'"></input>';
							    	            htmlList += '<br/>';  
							    	            htmlList += '</div>';  
							    	            htmlList += '</div>';
							    	            $("#mainBar").append(htmlList);
							    	            var temp =  $(this)[0];
							    	
							    	            $("#delete_"+$(this)[0].id).bind("click",function(){
							    		            $(FootBall.timerClockList).each(function(index){
							    			            if(temp.id == $(this)[0].id){
							    				            if($(this)[0].timer !=null ){
							    					            clearInterval($(this)[0].timer);
							    				            }
							    			            }
							    		            });
							    		            $("#div_" + temp.id).remove();
							    	            });
							    	
							    	            var timeClock; 
							    	            if(!FootBall.isHandler){
							    		            //自动监控所有数据
							    		            FootBall.MonitorTraceFootBall(temp,timeClock);
							    	            }
							    	
							    	            $("#btn_"+$(this)[0].id).bind("click",function(){
							    		            FootBall.MonitorTraceFootBall(temp,timeClock);
							    	            });
							    	            $("#clear_"+$(this)[0].id).bind("click",function(){
							    		            $(FootBall.timerClockList).each(function(index){
							    			            if(temp.id == $(this)[0].id){
							    				            if($(this)[0].timer !=null ){
							    					            clearInterval($(this)[0].timer);
							    				            }
							    			            }
							    		            });
							    	            });
						    	            }
							                FootBall.oldMonitorList.push(obj);
							                FootBall.checkLock = true;
			    			            }
			    			
			    	            });
			                }
	            },
	            MonitorTraceFootBall:function(obj,timeClock){
		            if(timeClock) {
			            clearInterval(timeClock);
		            }											
		            timeTicket = setInterval(function (){
			            var foot = $("#"+ obj.id);
			            if(foot==null || foot == undefined){
				            $(FootBall.timerClockList).each(function(index){
					            if(obj.id == $(this)[0].id){
						            if($(this)[0].timer !=null ){
							            clearInterval($(this)[0].timer);
						            }
					            }
				            });
			            }
			            var mintuer = $("#"+ obj.id).find("td").eq(1).text();
			
			            if(mintuer.indexOf(":")>=0 || isNaN(mintuer)){
				            if(mintuer.indexOf("半")>=0||mintuer.indexOf("下")>=0)
				            {
					            $(FootBall.monitorStartTimeList).each(function(){
						            if($(this)[0].id==obj.id){
							            $(this)[0].starttime=$(this)[0].starttime+1;
						            }
					            });
				            }
				            return;
			            }else{
				            var currentConfig ={};
				            var nowTime = new Date();
				            var pks = $("#"+ obj.id).find("td").eq(8).text();
				            var sws = $("#"+ obj.id).find("td").eq(9).text();
				            var bf = $("#"+ obj.id).find("td").eq(10).text();
				            var time = $("#"+ obj.id).find("td").eq(1).text();
				            $("#pk_"+ obj.id).text(pks);
				            $("#sw_"+ obj.id).text(sws);
				            $("#time_"+ obj.id).text(time);
							$("#bifen_"+ obj.id).text(bf);
				            var hasExist =false;
				            $(FootBall.monitorStartTimeList).each(function(){
					            if($(this)[0].id==obj.id ){
						            hasExist = true;
						            currentConfig = $(this)[0];
					            }
				            });
				            var count = FootBall.GetPKToCount(pks);
				            if(mintuer =="00"){
					            if(!hasExist || isNaN(currentConfig.bianpansj) || isNaN(currentConfig.fenzhongcount)){
						            var bianpansj = parseInt(5400/count);
						            var fenzhongcount = parseInt(300/count);
						            var swsvalue = parseFloat(sws) * 1000
						            var diffsecond = parseInt(((1000 - swsvalue)/fenzhongcount)*60);
						            var temptime = nowTime;
						            if(diffsecond>0){
							            temptime  = temptime.setSeconds(temptime.getSeconds()-diffsecond);
						            }
						            FootBall.monitorStartTimeList.push({id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount});
						            currentConfig = {id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount}
					            }
				            }else{ 
					            if(currentConfig.id==null || currentConfig.id == undefined || currentConfig.id.length==0 || isNaN(currentConfig.bianpansj) || isNaN(currentConfig.fenzhongcount)){
						            var bianpansj = parseInt(5400/count);
						            var fenzhongcount = parseInt(300/count);
						            var swsvalue = parseFloat(sws) * 1000
						            var diffsecond = parseInt(((1000 - swsvalue)/fenzhongcount)*60);
						            var temptime = nowTime;
						            if(diffsecond>0){
							            temptime  = temptime.setSeconds(temptime.getSeconds()-diffsecond);
						            FootBall.monitorStartTimeList.push({id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount});
						            currentConfig = {id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount}
					            }
				            }
				            var diffTime = (nowTime.getTime() -currentConfig.starttime);
				            var nowMinter = diffTime /(60 * 1000);
				            var diffminter = 1000 - (((diffTime/1000)%currentConfig.bianpansj)*currentConfig.fenzhongcount)/60;
				            var diffpk = parseInt(Math.ceil(currentConfig.count - ((diffTime/1000)/currentConfig.bianpansj)));
				            var softpk= FootBall.GetCountToPK(diffpk,bf);
				            $("#softpk_"+ obj.id).text(softpk);
				            var softsw = (diffminter/10).toFixed(2);
				            $("#softsw_"+ obj.id).text(softsw);
				            if(pks == softpk){
					            var diffsw =  (parseFloat(sws)*100 - softsw).toFixed(2);
					            $("#diffsw_"+ obj.id).text(diffsw);
					            $("#diffsw_"+ obj.id).show();
					            if(diffsw>=15 && softsw>75 && parseFloat(sws)<1.1){
						            $("#back_"+obj.id).css("background","#FF1493");
					            }
					            else if(diffsw<=-15 && softsw>75 && parseFloat(sws)<1.1){
						            $("#back_"+obj.id).css("background","#7D26CD");
					            }
					            else{
					            	$("#back_"+obj.id).css("background","#FFFFFF");
					            	$("#diffsw_"+ obj.id).hide();
					            }
				            }else{
					            $("#back_"+obj.id).css("background","#FFFFFF");
					            $("#diffsw_"+ obj.id).hide();
				            }
			            }
		            }},1000);
		            FootBall.timerClockList.push({id:obj.id,timer:timeTicket});	
	            },
	            GetPKToCount:function(pk){
		            var count = 0;
		            if(pk.indexOf("/")>=0){
			            var arrpk = pk.split("/");
			            count += (parseFloat(arrpk[0])/0.5)
			            count += (parseFloat(arrpk[1])/0.5)
		            }else{
			            count = (parseFloat(pk)/0.5)*2
		            }
		            return count;
	            },
	            GetCountToPK:function(count,bf){
		            var arrbf = bf.split("-");
		            var bf1 = parseInt(arrbf[0])
		            var bf2 = parseInt(arrbf[1])
		            bf = bf1 + bf2;
		            count = count + bf*4;
		            if(count%2==0){
			            return parseFloat(count/4);
		            }else{
			            return parseFloat((count-1)/4) + "/" + parseFloat((count+1)/4)
		            }
	            }
            }

	var host =window.location.href;
	if(host.indexOf("jp2.xml") < 0){
		FootBall.onInit();
	}
    ]]>
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V404</version>
    <JSCode>
    <![CDATA[
    	FootBall={
	            timerShowMonitorList:null,
	            timerClockList:[],
	            isHandler:false,
	            monitorStartTimeList:[],
	            checkLock:true,
	            monitorList:[],
	            oldMonitorList:[],
	            CreateHtmlElement:function(){
		            var htmlList = '<div id="drag" style="background:white; position: absolute; border: solid 1px #ccc; marign:0 auto; z-index: 100;top: 0;overflow-y:auto;">';
                    htmlList    += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">足球帮助程序 <a id="changeShow">切换</a></h3>';
                    htmlList    += '<input id="startBtn" value="开启自动监控" type="button" />';
                    htmlList    += '<input id="startHanderBtn" value="开启手动监控" type="button" />';
                    htmlList    += '<div id="mainBar" style="width: 1240px; height: 800px;"></div>';
                    htmlList    += '</div>';
                    htmlList    += '<div style="display:none" id="jquery_jplayer_1" class="jp-jplayer"></div>'
					htmlList    += '<div style="display:none" id="jp_container_1" class="jp-audio">'
					htmlList    += '	<div class="jp-type-single">'
					htmlList    += '		<div class="jp-gui jp-interface">'
					htmlList    += '			<ul class="jp-controls">'
					htmlList    += '				<li><a href="javascript:;" class="jp-play" tabindex="1">play</a></li>'
					htmlList    += '			</ul>'
					htmlList    += '		</div>'
					htmlList    += '	</div>'
					htmlList    += '</div>'
                    
                    $("body").append(htmlList);
	            },
	            onInit:function(){
		            FootBall.CreateHtmlElement();
					
					$("#jquery_jplayer_1").jPlayer({
						ready: function () {
							$(this).jPlayer("setMedia", {
								title: "Bubble",
								mp3: "http://www.worldctrip.com/kakaotalk.mp3"
							});
						},
						swfPath: "js",
						supplied: "mp3",
						wmode: "window",
						smoothPlayBar: true,
						keyEnabled: true,
						remainingDuration: true,
						toggleDuration: true
					});
					
		            $("#startBtn").bind("click",function(){
			            $("#startBtn").hide();
			            $("#startHanderBtn").hide();
			            FootBall.BindStartEvent();
		            });
		
		            $("#startHanderBtn").bind("click",function(){
			            $("#startBtn").hide();
			            $("#startHanderBtn").hide();
			            FootBall.isHandler = true;
			            FootBall.BindStartEvent();
		            });
		
		
		            $("#changeShow").bind("click",function(){
			            $("#mainBar").toggle();
		            });
	            },
	            BindStartEvent:function(){
		            var obj = $("#odds_Table");
		            if(obj!=null && obj!=undefined && obj.length>0){
			            FootBall.CheckFootBallMonitor();
			            FootBall.timerShowMonitorList = setInterval(function(){
				            FootBall.CheckFootBallMonitor()
			            },120000);
		            }else{
			            alert("没有数据");
		            }
	            },
	            CheckFootBallMonitor:function(){
				            var table = $("#odds_Table").find("tr");
				            $("#odds_Table").find("tr").eq(1).attr("id")
				            var dt = new Date();
				            var nowDate = "";
				            var hours = dt.getHours();
				            var minuter = dt.getMinutes();
				            if(hours >= 23 && minuter>=30){
					            nowDate = dt.getFullYear()+'/' + (dt.getMonth()+1) + '/' +  (dt.getDate()+1);
				            }else{
					            nowDate = dt.getFullYear()+'/' + (dt.getMonth()+1) + '/' +  dt.getDate();
				            }
				
			                $(table).each(function(index){
			    	            var obj = $(this).attr("id");
			    	            if(obj && obj.indexOf("tr")>=0){
			    		            var time = $(this).find("td").eq(1).text();
			    		            var title = $(this).find("td").eq(2).text();
			    		            var canMonitor = $(this).find("td").eq(10).find("img");
			    		            if(title.indexOf("角球")>=0){
			    			            return;
			    		            }
			    		            if(title.indexOf("上半")>=0){
			    			            return;
			    		            }
				    	            var startStringTime = nowDate+" "+ time+":00";
				    	            var showTime = time+":00";
				    	            var startDateTime = new Date(startStringTime.replace(/-/g,   "/"));
				    	            var diffTime = (startDateTime.getTime() -dt.getTime());
				    	            if(canMonitor.length >0 && time!=undefined && time.indexOf(":")>=0 && diffTime<= (5 * 60 * 1000) && diffTime >=0 ){
						                if($("#mainBar_"+obj) == undefined || $("#mainBar_"+obj).length==0){
						    	            var isExist = true;
						    	            $(FootBall.oldMonitorList).each(function(index){
						    		            if($(this)[0].id == obj){
						    			            isExist = false;
						    			            return true;
						    		            }
						    	            });
						    	            if(isExist){
						    		            FootBall.monitorList.push({
								    	            id:obj,
								    	            title: $(this).find("td").eq(0).text() + $(this).find("td").eq(2).text(),
								    	            subtitle: $(this).find("td").eq(4).text(),
								    	            othertitle: $(this).find("td").eq(6).text(),
								    	            currentSW: $(this).find("td").eq(9).text(),
								    	            yMinValue:FootBall.yMinValue,
								    	            yMaxValue:FootBall.yMaxValue,
								    	            startFootBall:startDateTime,
								    	            startTimeString:showTime
								                });
						    	            }
						                }
				    	            }
				    	            if( time!=undefined && time.indexOf(":") < 0 && !isNaN(time)){
						                if($("#mainBar_"+obj) == undefined || $("#mainBar_"+obj).length==0){
						    	            var isExist = true;
						    	            $(FootBall.oldMonitorList).each(function(index){
						    		            if($(this)[0].id == obj){
						    			            isExist = false;
						    			            return true;
						    		            }
						    	            });
						    	            if(isExist){
						    		            FootBall.monitorList.push({
								    	            id:obj,
								    	            title: $(this).find("td").eq(0).text() + $(this).find("td").eq(2).text(),
								    	            subtitle: $(this).find("td").eq(4).text(),
								    	            othertitle: $(this).find("td").eq(6).text(),
								    	            currentSW: $(this).find("td").eq(9).text(),
								    	            yMinValue:FootBall.yMinValue,
								    	            yMaxValue:FootBall.yMaxValue,
								    	            startFootBall:startDateTime,
								    	            startTimeString:showTime
								                });
						    	            }
						                }
				    	            }
			    	            }
			                });
			    
			                if(FootBall.monitorList.length>0){
			    	            $(FootBall.monitorList).each(function(index){
			    			            var htmlList = "";
			    			            if(FootBall.checkLock){
			    				            FootBall.checkLock = false;
			    				            var obj = $(this)[0];
				    			            var isExist = true;
							                $(FootBall.oldMonitorList).each(function(index){
							    	            if($(this)[0].id == obj.id){
							    		            isExist = false;
							    		            return true;
							    	            }
							                });
							                if(isExist){
							    	            htmlList += '<div style="font-size:14px;display:inline-block;margin-bottom:5px;" id="div_' + $(this)[0].id + '">';
							    	            htmlList += '<div id="back_' + $(this)[0].id + '">'
							    	            htmlList += '<a id="delete_'+$(this)[0].id+'">删除</a>';
							    	            htmlList += '&nbsp;&nbsp;<a style="width:325px;display:inline-block;"  onmouseover="this.style.cssText=\'color:gray;width:325px;display:inline-block;\'" onmouseout="this.style.cssText=\'color:black;width:325px;display:inline-block;\'" id="a_'+ $(this)[0].id +'" > '+ $(this)[0].title + '&nbsp;' + $(this)[0].subtitle + '&nbsp;' + $(this)[0].othertitle + '</a>';
							    	            htmlList += '&nbsp;<input id="btn_'+ $(this)[0].id +'" type="button" value="开" ></input>';
							    	            htmlList += '&nbsp;<input id="clear_'+ $(this)[0].id +'" value="停" type="button" ></input>';
							    	            htmlList += '&nbsp;&nbsp;<span style="color:black;" id="time_'+ $(this)[0].id +'">'+ $(this)[0].startTimeString +'</span>';
							    	            htmlList += '<div style="display:inline-block"><table style="display:inline-block;vertical-align:middle;">'
							    	            htmlList += '<tr><td>'+' &nbsp;&nbsp;当前盘口:<span style="color:black;" id="pk_'+ $(this)[0].id +'"></span>'+'</td></tr>'
							    	            htmlList += '<tr><td>'+' &nbsp;&nbsp;软件盘口:<span style="color:black;" id="softpk_'+ $(this)[0].id +'"></span>'+'</td></tr>'
							    	            htmlList += '</table>'
							    	            htmlList += '<table style="display:inline-block;vertical-align:middle;">'
							    	            htmlList += '<tr><td>'+' &nbsp;&nbsp;当前水位:<span style="color:black;" id="sw_'+ $(this)[0].id +'"></span>'+'</td></tr>'
							    	            htmlList += '<tr><td>'+' &nbsp;&nbsp;软件水位:<span style="color:black;" id="softsw_'+ $(this)[0].id +'"></span>'+'</td></tr>'
							    	            htmlList += '</table></div>'
							    	            htmlList += ' &nbsp;&nbsp;差:<b><span style="color:black;" id="diffsw_'+ $(this)[0].id +'"></span></b>';
							    	            htmlList += ' &nbsp;&nbsp;比分:<b><span style="color:black;" id="bifen_'+ $(this)[0].id +'"></span></b>';
							    	            htmlList += ' <input type="hidden" id="hiddenpk_'+ $(this)[0].id +'"></input>';
							    	            htmlList += '<br/>';  
							    	            htmlList += '</div>';  
							    	            htmlList += '</div>';
							    	            $("#mainBar").append(htmlList);
							    	            var temp =  $(this)[0];
							    	
							    	            $("#delete_"+$(this)[0].id).bind("click",function(){
							    		            $(FootBall.timerClockList).each(function(index){
							    			            if(temp.id == $(this)[0].id){
							    				            if($(this)[0].timer !=null ){
							    					            clearInterval($(this)[0].timer);
							    				            }
							    			            }
							    		            });
							    		            $("#div_" + temp.id).remove();
							    	            });
							    	
							    	            var timeClock; 
							    	            if(!FootBall.isHandler){
							    		            //自动监控所有数据
							    		            FootBall.MonitorTraceFootBall(temp,timeClock);
							    	            }
							    	
							    	            $("#btn_"+$(this)[0].id).bind("click",function(){
							    		            FootBall.MonitorTraceFootBall(temp,timeClock);
							    	            });
							    	            $("#clear_"+$(this)[0].id).bind("click",function(){
							    		            $(FootBall.timerClockList).each(function(index){
							    			            if(temp.id == $(this)[0].id){
							    				            if($(this)[0].timer !=null ){
							    					            clearInterval($(this)[0].timer);
							    				            }
							    			            }
							    		            });
							    	            });
						    	            }
							                FootBall.oldMonitorList.push(obj);
							                FootBall.checkLock = true;
			    			            }
			    			
			    	            });
			                }
	            },
	            MonitorTraceFootBall:function(obj,timeClock){
		            if(timeClock) {
			            clearInterval(timeClock);
		            }											
		            timeTicket = setInterval(function (){
			            var foot = $("#"+ obj.id);
			            if(foot==null || foot == undefined){
				            $(FootBall.timerClockList).each(function(index){
					            if(obj.id == $(this)[0].id){
						            if($(this)[0].timer !=null ){
							            clearInterval($(this)[0].timer);
						            }
					            }
				            });
			            }
			            var mintuer = $("#"+ obj.id).find("td").eq(1).text();
			
			            if(mintuer.indexOf(":")>=0 || isNaN(mintuer)){
				            if(mintuer.indexOf("半")>=0||mintuer.indexOf("下")>=0)
				            {
					            $(FootBall.monitorStartTimeList).each(function(){
						            if($(this)[0].id==obj.id){
							            $(this)[0].starttime=$(this)[0].starttime+1;
						            }
					            });
				            }
				            return;
			            }else{
				            var currentConfig ={};
				            var nowTime = new Date();
				            var pks = $("#"+ obj.id).find("td").eq(8).text();
				            var sws = $("#"+ obj.id).find("td").eq(9).text();
				            var bf = $("#"+ obj.id).find("td").eq(10).text();
				            var time = $("#"+ obj.id).find("td").eq(1).text();
				            $("#pk_"+ obj.id).text(pks);
				            $("#sw_"+ obj.id).text(sws);
				            $("#time_"+ obj.id).text(time);
				            $("#bifen_"+ obj.id).text(bf);
				            var hasExist =false;
				            $(FootBall.monitorStartTimeList).each(function(){
					            if($(this)[0].id==obj.id ){
						            hasExist = true;
						            currentConfig = $(this)[0];
					            }
				            });
				            var count = FootBall.GetPKToCount(pks);
				            if(mintuer =="00"){
					            if(!hasExist || isNaN(currentConfig.bianpansj) || isNaN(currentConfig.fenzhongcount)){
						            var bianpansj = parseInt(5400/count);
						            var fenzhongcount = parseInt(300/count);
						            var swsvalue = parseFloat(sws) * 1000
						            var diffsecond = parseInt(((1000 - swsvalue)/fenzhongcount)*60);
						            var temptime = nowTime;
						            if(diffsecond>0){
							            temptime  = temptime.setSeconds(temptime.getSeconds()-diffsecond);
						            }
						            FootBall.monitorStartTimeList.push({id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount});
						            currentConfig = {id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount}
					            }
				            }else{ 
					            if(currentConfig.id==null || currentConfig.id == undefined || currentConfig.id.length==0 || isNaN(currentConfig.bianpansj) || isNaN(currentConfig.fenzhongcount)){
						            var bianpansj = parseInt(5400/count);
						            var fenzhongcount = parseInt(300/count);
						            var swsvalue = parseFloat(sws) * 1000
						            var diffsecond = parseInt(((1000 - swsvalue)/fenzhongcount)*60);
						            var temptime = nowTime;
						            if(diffsecond>0){
							            temptime  = temptime.setSeconds(temptime.getSeconds()-diffsecond);
						            FootBall.monitorStartTimeList.push({id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount});
						            currentConfig = {id:obj.id,starttime:temptime,pk:pks,sw:sws,count:count,bianpansj:bianpansj,fenzhongcount:fenzhongcount}
					            }
				            }
				            var diffTime = (nowTime.getTime() -currentConfig.starttime);
				            var nowMinter = diffTime /(60 * 1000);
				            var diffminter = 1000 - (((diffTime/1000)%currentConfig.bianpansj)*currentConfig.fenzhongcount)/60;
				            var diffpk = parseInt(Math.ceil(currentConfig.count - ((diffTime/1000)/currentConfig.bianpansj)));
				            var softpk= FootBall.GetCountToPK(diffpk,bf);
				            $("#softpk_"+ obj.id).text(softpk);
				            var softsw = (diffminter/10).toFixed(2);
				            $("#softsw_"+ obj.id).text(softsw);
				            if(pks == softpk){
					            var diffsw =  (parseFloat(sws)*100 - softsw).toFixed(2);
					            $("#diffsw_"+ obj.id).text(diffsw);
					            $("#diffsw_"+ obj.id).show();
					            if(diffsw>=15 && softsw>75 && parseFloat(sws)<1.1){
					            	$(".jp-play").click();
						            $("#back_"+obj.id).css("background","#FF1493");
					            }
					            else if(diffsw<=-15 && softsw>75 && parseFloat(sws)<1.1){
					            	$(".jp-play").click();
						            $("#back_"+obj.id).css("background","#7D26CD");
					            }
					            else{
					            	$("#back_"+obj.id).css("background","#FFFFFF");
					            	$("#diffsw_"+ obj.id).hide();
					            }
				            }else{
					            $("#back_"+obj.id).css("background","#FFFFFF");
					            $("#diffsw_"+ obj.id).hide();
				            }
			            }
		            }},1000);
		            FootBall.timerClockList.push({id:obj.id,timer:timeTicket});	
	            },
	            GetPKToCount:function(pk){
		            var count = 0;
		            if(pk.indexOf("/")>=0){
			            var arrpk = pk.split("/");
			            count += (parseFloat(arrpk[0])/0.5)
			            count += (parseFloat(arrpk[1])/0.5)
		            }else{
			            count = (parseFloat(pk)/0.5)*2
		            }
		            return count;
	            },
	            GetCountToPK:function(count,bf){
		            var arrbf = bf.split("-");
		            var bf1 = parseInt(arrbf[0])
		            var bf2 = parseInt(arrbf[1])
		            bf = bf1 + bf2;
		            count = count + bf*4;
		            if(count%2==0){
			            return parseFloat(count/4);
		            }else{
			            return parseFloat((count-1)/4) + "/" + parseFloat((count+1)/4)
		            }
	            }
            }

		var host =window.location.href;
		if(host.indexOf("jp2.xml") < 0){
			FootBall.onInit();
		}
    ]]>
    </JSCode>
  </JSFile>
	<JSFile>
    <version>V500</version>
    <JSCode>
    <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }
      
    	ContentScript={
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerSearch:null,
	      timerSearchQP:null,
	      DaoQiTime:"YYYY-MM-DD",
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
        },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      
	      allOnitEvent:function(){
		      //创建用户界面
			    ContentScript.CreateHtmlElement();
				  //绑定拖拽事件
				  ContentScript.HtmlAddDragEvent($("#drag"));
				  ContentScript.HtmlAddDragEvent($("#dragQ"));
				  ContentScript.HtmlAddDragEvent($("#dragQP"));
				  $("#daoqitime").text(ContentScript.DaoQiTime);
				  
				  $("#btnStart").bind("click",function(){
				  		$("#btnStart").hide();
							$("#btnEnd").show();
							
							ContentScript.timerSearch = self.setInterval(function(){
									var start = $("#startDiscount").val();
									var end = $("#endDiscount").val();
									start = parseFloat(start);
									end = parseFloat(end);
									var resultFirst = ContentScript.GetTransactionData('vrtFC_2','FC_DATA_2',start,end);
									
									var	htmlList ='<table class="bettable" style="width:400px">';
									htmlList +=  '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
									var hourseCount = [];
	              	$(resultFirst).each(function(index){
	              		var hourseM = $(this)[0].hourse.split('-');
	              		
	              		var isExists1 = false;
	              		var isExists2 = false;
										
										$(hourseCount).each(function(index){
											var temp = $(this)[0];
											if(temp.hourse==hourseM[0]){
												isExists1 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
											if(temp.hourse==hourseM[1]){
												isExists2 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
										});
										if(!isExists1)
										{
											hourseCount.push({"hourse":hourseM[0],"count":1});
										}
										if(!isExists2)
										{
											hourseCount.push({"hourse":hourseM[1],"count":1});
										}
	              		
	              		htmlList +='<tr style="line-height: 30px;">';
	              		htmlList +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlList +='<td>'+ $(this)[0].tickets+ '</td>'; 
	              		htmlList +='<td>'+ $(this)[0].discount+ '</td>'; 
	              		htmlList +='<td>'+ $(this)[0].limit+ '</td>'; 
	              		htmlList +='</tr>';
	              	});
	              	
	              	htmlList +='</table><br/>';
	              	$("#divCreateQLeft").empty();
	              	$("#divCreateQLeft").append(htmlList);
	              	
	              	var	htmlListQRight ='<table class="bettable" style="width:150px">';
									htmlListQRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th>';
									
									hourseCount.sort( function(a, b){   
									    return parseInt(a["count" ]) < parseInt(b["count" ]) ? 1 : parseInt(a[ "count"]) == parseInt(b[ "count" ]) ? 0 : -1;   
									});  
									
									$(hourseCount).each(function(index){
										htmlListQRight +='<tr style="line-height: 30px;">';  
	              		htmlListQRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQRight +='<td>'+ $(this)[0].count+ '</td>'; 
	              		htmlListQRight +='</tr>';
									});
									$("#divCreateQRight").empty();
	              	$("#divCreateQRight").append(htmlListQRight);
							},1000);
				  });
				  $("#btnEnd").bind("click",function(){
				  		if(ContentScript.timerSearch!=null){
								clearInterval(ContentScript.timerSearch);
							}
							$("#btnStart").show();
							$("#btnEnd").hide();
				  });
				  
				  $("#btnStartQP").bind("click",function(){
				  		$("#btnStartQP").hide();
							$("#btnEndQP").show();
							
							ContentScript.timerSearch = self.setInterval(function(){
									var start = $("#startDiscountQP").val();
									var end = $("#endDiscountQP").val();
									start = parseFloat(start);
									end = parseFloat(end);
									var resultSecond = ContentScript.GetTransactionData('vrtFC_4','FC_DATA_4',start,end);
								
									var hourseCount1= [];
	              	
              	  var htmlListQP ='<table class="bettable" style="width:400px">';
              	  htmlListQP +=  '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
	              	$(resultSecond).each(function(index){
	              		var hourseM = $(this)[0].hourse.replace("(","").replace(")","").split('-');
	              		
	              		var isExists1 = false;
	              		var isExists2 = false;
										
										$(hourseCount1).each(function(index){
											var temp = $(this)[0];
											if(temp.hourse==hourseM[0]){
												isExists1 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
											if(temp.hourse==hourseM[1]){
												isExists2 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
										});
										if(!isExists1)
										{
											hourseCount1.push({"hourse":hourseM[0],"count":1});
										}
										if(!isExists2)
										{
											hourseCount1.push({"hourse":hourseM[1],"count":1});
										}
	              		
	              		htmlListQP +='<tr style="line-height: 30px;">';
	              		htmlListQP +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQP +='<td>'+ $(this)[0].tickets+ '</td>'; 
	              		htmlListQP +='<td>'+ $(this)[0].discount+ '</td>'; 
	              		htmlListQP +='<td>'+ $(this)[0].limit+ '</td>'; 
	              		htmlListQP +='</tr>';
	              	});
	              	htmlListQP +='</table>';
	              	$("#divCreateQPLeft").empty();
	              	$("#divCreateQPLeft").append(htmlListQP);
	              	
	              	var	htmlListQPRight ='<table class="bettable" style="width:150px">';
									htmlListQPRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th>';
									hourseCount1.sort( function(a, b){   
									    return parseInt(a["count" ]) < parseInt(b["count" ]) ? 1 : parseInt(a[ "count"]) == parseInt(b[ "count" ]) ? 0 : -1;   
									});  
									$(hourseCount1).each(function(index){
										htmlListQPRight +='<tr style="line-height: 30px;">';  
	              		htmlListQPRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQPRight +='<td>'+ $(this)[0].count+ '</td>'; 
	              		htmlListQPRight +='</tr>';
									});
									$("#divCreateQPRight").empty();
	              	$("#divCreateQPRight").append(htmlListQPRight);
	              	
							},1000);
				  });
				  $("#btnEndQP").bind("click",function(){
				  		if(ContentScript.timerSearchQP!=null){
								clearInterval(ContentScript.timerSearchQP);
							}
							$("#btnStartQP").show();
							$("#btnEndQP").hide();
				  });
	      },
	      GetFliterData:function(result,start,end){
	      	var limitResult = [];
	      	//将符合条件的跑马的最小值显示出来
					$(result).each(function(index){
						var temp = $(this)[0];
						var isNew =false;
						if(parseFloat(temp.discount)>=start && parseFloat(temp.discount)<= end){
							$(limitResult).each(function(item){
								var tp = $(this)[0];
								if(tp.hourse==temp.hourse){
									isNew =true;
								}
								if(tp.hourse==temp.hourse && temp.discount<tp.discount){
									$(this)[0].tickets = temp.tickets;
									$(this)[0].discount = temp.discount;
									$(this)[0].limit = temp.limit;
								}
							});
							if(!isNew){
								limitResult.push(temp);
							}
						}
					});
					return limitResult;
	      },
	      getIframeInnerHTML(frame,element){
					try{
						return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
					}catch(e){return document.getElementById(element).innerHTML;}
				},
	      GetTransactionData:function(fc,data,start,end){ 
	      	var textq = ContentScript.getIframeInnerHTML(fc,data);
	      	textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
		      var result = [];
		      var fliterHourse=[];
		      var textList = textq.split(";");
		      console.log(textList.length);
		      for(var i =0;i<textList.length;i++)
		      {
		      			if(textList[i]==""){continue;}
		      			var tempArray = textList[i].split("$");
		      			var paramValue = 700;
		      			if(tempArray[1].indexOf("(")>=0){
		      				paramValue=400;
		      			}
								var id = tempArray[0]+tempArray[1]+tempArray[2]; 
								if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3])>=start && parseFloat(tempArray[3])<= end && parseFloat(tempArray[4])==paramValue)
								{
									var isExists = false;
									item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"tickets":tempArray[2],"discount":parseFloat(tempArray[3]),"limit":tempArray[4]}
									$(result).each(function(index){
										var temp = $(this)[0];
										if(temp.hourse==tempArray[1]){
											isExists =true;
											if(temp.discount>parseFloat(tempArray[3])){
												$(this)[0].tickets = tempArray[2];
												$(this)[0].discount = parseFloat(tempArray[3]);
												$(this)[0].limit = tempArray[4];
											}
											return;
										}
									});
									if(!isExists)
									{
										result.push(item);
									}
								}
								if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4])==paramValue)
								{
									fliterHourse.push(tempArray[1]);
								}
		      }
		    	return result;
	      },
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<div style="float: left;"><table style="width:200">';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
              htmlList +='<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input type="button" id="btnStart" value="连赢Q开始" />';
        			htmlList +='<input type="button" id="btnEnd" value="连赢Q停止" />';
              htmlList +='</td></tr>';
              htmlList +='</table> </div>';
              htmlList +='<div style="float: right;"><table style="width:200">';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
              htmlList +='<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input type="button" id="btnStartQP" value="位置Q开始" />';
        			htmlList +='<input type="button" id="btnEndQP" value="位置Q停止" />';
              htmlList +='</td></tr>';
              htmlList +='</table> </div>';
              htmlList += '</div>';
              
              htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计</h3>';
              htmlList +='<div id="divCreateQLeft" style="float: left;"></div>'
              htmlList +='<div id="divCreateQRight" style="float: right;"></div>'
              htmlList += '</div>';
             
              htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q统计</h3>';
              htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
              htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
              htmlList += '</div>';
        			
              $("body").append(htmlList);
	      },
	      
	      HtmlAddDragEvent:function(obj){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  obj.click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt(obj.css("left"));
                      _y = e.pageY - parseInt(obj.css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          obj.css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }
      var host =window.location.href;
      if(host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
    ]]>
    </JSCode>
  </JSFile>
	<JSFile>
    <version>V600</version>
    <JSCode>
    <![CDATA[
            Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }
      
    	ContentScript={
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerSearch:null,
	      timerSearchQP:null,
	      DaoQiTime:"YYYY-MM-DD",
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
        },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      onPlayerInit:function(){
	      	
		      var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
          htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span></h3>';
          htmlList += '<div id="divCreate"></div>'
          htmlList += '</div>';
          $("body").append(htmlList);
          $("#daoqitime").text(ContentScript.DaoQiTime);    
          ContentScript.HtmlAddDragEvent($("#drag"));
          
          self.setInterval(function(){
          	var hourseCount1 = ContentScript.GetWinTransData();
						if(hourseCount1.length==0){
							return;
						}
				    var	htmlListQPRight ='<table class="bettable" style="width:250px">';
									htmlListQPRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th>';
									hourseCount1.sort( function(a, b){   
									    return parseInt(a["ticketsw" ]) < parseInt(b["ticketsw" ]) ? 1 : parseInt(a[ "ticketsw"]) == parseInt(b[ "ticketsw" ]) ? 0 : -1;   
									}); 
									$(hourseCount1).each(function(index){
										htmlListQPRight +='<tr style="line-height: 30px;">';  
	              		htmlListQPRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQPRight +='<td>'+ $(this)[0].ticketsw+ '</td>'; 
	              		htmlListQPRight +='</tr>';
									});
									$("#divCreate").empty();
	              	$("#divCreate").append(htmlListQPRight);
          },1000);
	      },
	      allOnitEvent:function(){
		      //创建用户界面
			    ContentScript.CreateHtmlElement();
				  //绑定拖拽事件
				  ContentScript.HtmlAddDragEvent($("#drag"));
				  ContentScript.HtmlAddDragEvent($("#dragQ"));
				  ContentScript.HtmlAddDragEvent($("#dragQP"));
				  $("#daoqitime").text(ContentScript.DaoQiTime);
				  
				  $("#btnStart").bind("click",function(){
				  		$("#btnStart").hide();
							$("#btnEnd").show();
							
							ContentScript.timerSearch = self.setInterval(function(){
									var start = $("#startDiscount").val();
									var end = $("#endDiscount").val();
									start = parseFloat(start);
									end = parseFloat(end);
									var resultFirst = ContentScript.GetTransactionData('vrtFC_2','FC_DATA_2',start,end);
									
									var	htmlList ='<table class="bettable" style="width:400px">';
									htmlList +=  '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
									var hourseCount = [];
	              	$(resultFirst).each(function(index){
	              		var hourseM = $(this)[0].hourse.split('-');
	              		
	              		var isExists1 = false;
	              		var isExists2 = false;
										
										$(hourseCount).each(function(index){
											var temp = $(this)[0];
											if(temp.hourse==hourseM[0]){
												isExists1 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
											if(temp.hourse==hourseM[1]){
												isExists2 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
										});
										if(!isExists1)
										{
											hourseCount.push({"hourse":hourseM[0],"count":1});
										}
										if(!isExists2)
										{
											hourseCount.push({"hourse":hourseM[1],"count":1});
										}
	              		
	              		htmlList +='<tr style="line-height: 30px;">';
	              		htmlList +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlList +='<td>'+ $(this)[0].tickets+ '</td>'; 
	              		htmlList +='<td>'+ $(this)[0].discount+ '</td>'; 
	              		htmlList +='<td>'+ $(this)[0].limit+ '</td>'; 
	              		htmlList +='</tr>';
	              	});
	              	
	              	htmlList +='</table><br/>';
	              	$("#divCreateQLeft").empty();
	              	$("#divCreateQLeft").append(htmlList);
	              	
	              	var	htmlListQRight ='<table class="bettable" style="width:150px">';
									htmlListQRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th>';
									
					if($("input[id='chkQ']:checked").val() == "1"){
						hourseCount.sort( function(a, b){   
							return parseInt(a["hourse" ]) > parseInt(b["hourse" ]) ? 1 : parseInt(a[ "hourse"]) == parseInt(b[ "hourse" ]) ? 0 : -1;   
						});
					}else{
						hourseCount.sort( function(a, b){   
							return parseInt(a["count" ]) < parseInt(b["count" ]) ? 1 : parseInt(a[ "count"]) == parseInt(b[ "count" ]) ? 0 : -1;   
						});
					}
					
									  
									
					    $(hourseCount).each(function(index){
						htmlListQRight +='<tr style="line-height: 30px;">';  
	              		htmlListQRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQRight +='<td>'+ $(this)[0].count+ '</td>'; 
	              		htmlListQRight +='</tr>';
									});
									$("#divCreateQRight").empty();
	              	$("#divCreateQRight").append(htmlListQRight);
							},1000);
				  });
				  $("#btnEnd").bind("click",function(){
				  		if(ContentScript.timerSearch!=null){
								clearInterval(ContentScript.timerSearch);
							}
							$("#btnStart").show();
							$("#btnEnd").hide();
				  });
				  
				  $("#btnStartQP").bind("click",function(){
				  		$("#btnStartQP").hide();
							$("#btnEndQP").show();
							
							ContentScript.timerSearch = self.setInterval(function(){
									var start = $("#startDiscountQP").val();
									var end = $("#endDiscountQP").val();
									start = parseFloat(start);
									end = parseFloat(end);
									var resultSecond = ContentScript.GetTransactionData('vrtFC_4','FC_DATA_4',start,end);
								
									var hourseCount1= [];
	              	
              	  var htmlListQP ='<table class="bettable" style="width:400px">';
              	  htmlListQP +=  '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
	              	$(resultSecond).each(function(index){
	              		var hourseM = $(this)[0].hourse.replace("(","").replace(")","").split('-');
	              		
	              		var isExists1 = false;
	              		var isExists2 = false;
										
										$(hourseCount1).each(function(index){
											var temp = $(this)[0];
											if(temp.hourse==hourseM[0]){
												isExists1 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
											if(temp.hourse==hourseM[1]){
												isExists2 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
										});
										if(!isExists1)
										{
											hourseCount1.push({"hourse":hourseM[0],"count":1});
										}
										if(!isExists2)
										{
											hourseCount1.push({"hourse":hourseM[1],"count":1});
										}
	              		
	              		htmlListQP +='<tr style="line-height: 30px;">';
	              		htmlListQP +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQP +='<td>'+ $(this)[0].tickets+ '</td>'; 
	              		htmlListQP +='<td>'+ $(this)[0].discount+ '</td>'; 
	              		htmlListQP +='<td>'+ $(this)[0].limit+ '</td>'; 
	              		htmlListQP +='</tr>';
	              	});
	              	htmlListQP +='</table>';
	              	$("#divCreateQPLeft").empty();
	              	$("#divCreateQPLeft").append(htmlListQP);
	              	
	              	var	htmlListQPRight ='<table class="bettable" style="width:150px">';
									htmlListQPRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th>';
					
					if($("input[id='chkQP']:checked").val() == "1"){
						hourseCount1.sort( function(a, b){   
							return parseInt(a["hourse" ]) > parseInt(b["hourse" ]) ? 1 : parseInt(a[ "hourse"]) == parseInt(b[ "hourse" ]) ? 0 : -1;   
						});
					}else{
						hourseCount1.sort( function(a, b){   
							return parseInt(a["count" ]) < parseInt(b["count" ]) ? 1 : parseInt(a[ "count"]) == parseInt(b[ "count" ]) ? 0 : -1;   
						});  
					}
					
									
									$(hourseCount1).each(function(index){
										htmlListQPRight +='<tr style="line-height: 30px;">';  
	              		htmlListQPRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQPRight +='<td>'+ $(this)[0].count+ '</td>'; 
	              		htmlListQPRight +='</tr>';
									});
									$("#divCreateQPRight").empty();
	              	$("#divCreateQPRight").append(htmlListQPRight);
	              	
							},1000);
				  });
				  $("#btnEndQP").bind("click",function(){
				  		if(ContentScript.timerSearchQP!=null){
								clearInterval(ContentScript.timerSearchQP);
							}
							$("#btnStartQP").show();
							$("#btnEndQP").hide();
				  });
	      },
	      GetFliterData:function(result,start,end){
	      	var limitResult = [];
	      	//将符合条件的跑马的最小值显示出来
					$(result).each(function(index){
						var temp = $(this)[0];
						var isNew =false;
						if(parseFloat(temp.discount)>=start && parseFloat(temp.discount)<= end){
							$(limitResult).each(function(item){
								var tp = $(this)[0];
								if(tp.hourse==temp.hourse){
									isNew =true;
								}
								if(tp.hourse==temp.hourse && temp.discount<tp.discount){
									$(this)[0].tickets = temp.tickets;
									$(this)[0].discount = temp.discount;
									$(this)[0].limit = temp.limit;
								}
							});
							if(!isNew){
								limitResult.push(temp);
							}
						}
					});
					return limitResult;
	      },
	      getIframeInnerHTML(frame,element){
					try{
						return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
					}catch(e){return document.getElementById(element).innerHTML;}
				},
				GetWinTransData:function(){
					//1	1	9	9	83	300/100
					var textq = ContentScript.getIframeInnerHTML('vrtBET','BET_DATA');
					textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
	      	var textList = textq.split(";");
	      	var result = [];
	      	for(var i =0;i<textList.length;i++){
	      		if(textList[i]==""){continue;}
	      		var tempArray = textList[i].split("$");
	      		var isExists = false;
	      		var id = tempArray[0]+tempArray[1]+tempArray[2]+tempArray[3]; 
						item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
						$(result).each(function(index){
							var temp = $(this)[0];
							if(temp.hourse==tempArray[1] && parseInt(tempArray[3]) ==0){
								isExists =true;
								if(temp.discount>parseFloat(tempArray[3])){
										$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
										//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
								}
								return;
							}
						});
						if(!isExists&& parseInt(tempArray[3]) ==0)
						{
							result.push(item);
						}
	      	}
	      	return result;
				},
	      GetTransactionData:function(fc,data,start,end){ 
	      	var textq = ContentScript.getIframeInnerHTML(fc,data);
	      	textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
		      var result = [];
		      var fliterHourse=[];
		      var textList = textq.split(";");
		      console.log(textList.length);
		      for(var i =0;i<textList.length;i++)
		      {
		      			if(textList[i]==""){continue;}
		      			var tempArray = textList[i].split("$");
		      			var paramValue = 700;
		      			if(tempArray[1].indexOf("(")>=0){
		      				paramValue=400;
		      			}
								var id = tempArray[0]+tempArray[1]+tempArray[2]; 
								if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3])>=start && parseFloat(tempArray[3])<= end && parseFloat(tempArray[4])==paramValue)
								{
									var isExists = false;
									item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"tickets":tempArray[2],"discount":parseFloat(tempArray[3]),"limit":tempArray[4]}
									$(result).each(function(index){
										var temp = $(this)[0];
										if(temp.hourse==tempArray[1]){
											isExists =true;
											if(temp.discount>parseFloat(tempArray[3])){
												$(this)[0].tickets = tempArray[2];
												$(this)[0].discount = parseFloat(tempArray[3]);
												$(this)[0].limit = tempArray[4];
											}
											return;
										}
									});
									if(!isExists)
									{
										result.push(item);
									}
								}
								if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4])==paramValue)
								{
									fliterHourse.push(tempArray[1]);
								}
		      }
		    	return result;
	      },
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<div style="float: left;"><table style="width:200">';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
              htmlList +='<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input type="button" id="btnStart" value="连赢Q开始" />';
        			htmlList +='<input type="button" id="btnEnd" value="连赢Q停止" />';
              htmlList +='</td></tr>';
              htmlList +='</table> </div>';
              htmlList +='<div style="float: right;"><table style="width:200">';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
              htmlList +='<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input type="button" id="btnStartQP" value="位置Q开始" />';
        			htmlList +='<input type="button" id="btnEndQP" value="位置Q停止" />';
              htmlList +='</td></tr>';
              htmlList +='</table> </div>';
              htmlList += '</div>';
              
              htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计 &nbsp;<input type="checkbox" id="chkQ" value="1" />按马次排序</h3>';
              htmlList +='<div id="divCreateQLeft" style="float: left;"></div>'
              htmlList +='<div id="divCreateQRight" style="float: right;"></div>'
              htmlList += '</div>';
             
              htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q统计 &nbsp;<input type="checkbox" id="chkQP" value="1" />按马次排序</h3>';
              htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
              htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
              htmlList += '</div>';
        			
              $("body").append(htmlList);
	      },
	      
	      HtmlAddDragEvent:function(obj){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  obj.click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt(obj.css("left"));
                      _y = e.pageY - parseInt(obj.css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          obj.css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }
      var host =window.location.href;
      if(host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
      if(host.indexOf("playerhk.jsp")>=0){
      	ContentScript.onPlayerInit();
      }
    ]]>
    </JSCode>
  </JSFile>
	<JSFile>
    <version>V601</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function (item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function (obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function (obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	Request: function (paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof (returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function () {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = { "id": siteType + urlValue + RaceType + RaceDate + loginuser, "url": urlValue, "loginuser": loginuser, "RaceType": RaceType, "RaceDate": RaceDate, "Sml": Sml, "SiteType": siteType };
		return result;
	},
	onInit: function () {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function () {
		var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span><input type="button" id="btnClose" text="清空" value="清空"></input></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));

		$("#btnClose").bind("click", function () {
			$("#divCreate").empty();
			ContentScript.maxAndMinValueListWin=[];
		})

		self.setInterval(function () {
			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}

			var htmlListQPRight = '<table class="bettable" style="width:250px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th><th width="20%">最多</th><th width="20%">最少</th>';
			hourseCount1.sort(function (a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			$(hourseCount1).each(function (index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function (index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({ "hourse": $(this)[0].hourse, "Min": $(this)[0].ticketsw, "Max": $(this)[0].ticketsw })
				}
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].ticketsw + '</td>';
				htmlListQPRight += '<td>' + maxValue + '</td>';
				htmlListQPRight += '<td>' + minValue + '</td>';
				htmlListQPRight += '</tr>';
			});
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);
		}, 1000);
	},
	allOnitEvent: function () {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.timerSearch = self.setInterval(function () {
			var start = $("#startDiscount").val();
			var end = $("#endDiscount").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');

			var htmlList = '<table class="bettable" style="width:400px">';
			htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			var hourseCount = [];
			resultFirst.sort(function (a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultFirst).each(function (index) {
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function (index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({ "hourse": hourseM[0], "count": 1 });
				}
				if (!isExists2) {
					hourseCount.push({ "hourse": hourseM[1], "count": 1 });
				}

				htmlList += '<tr style="line-height: 30px;">';
				htmlList += '<td>' + $(this)[0].hourse + '</td>';
				htmlList += '<td>' + $(this)[0].tickets + '</td>';
				htmlList += '</tr>';
			});

			htmlList += '</table><br/>';
			$("#divCreateQLeft").empty();
			$("#divCreateQLeft").append(htmlList);

			var htmlListQRight = '<table class="bettable" style="width:150px">';
			htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

			if ($("input[id='chkQ']:checked").val() == "1") {
				hourseCount.sort(function (a, b) {
					return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
				});
			} else {
				hourseCount.sort(function (a, b) {
					return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
				});
			}



			$(hourseCount).each(function (index) {
				htmlListQRight += '<tr style="line-height: 30px;">';
				htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQRight += '</tr>';
			});
			$("#divCreateQRight").empty();
			$("#divCreateQRight").append(htmlListQRight);
		}, 1000);

		ContentScript.timerSearch = self.setInterval(function () {
			var start = $("#startDiscountQP").val();
			var end = $("#endDiscountQP").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultSecond = ContentScript.GetTransactionDataByArea('vrtFC_3', 'FC_DATA_3');

			var hourseCount1 = [];

			var htmlListQP = '<table class="bettable" style="width:400px">';
			htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			resultSecond.sort(function (a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultSecond).each(function (index) {
				var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount1).each(function (index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount1.push({ "hourse": hourseM[0], "count": 1 });
				}
				if (!isExists2) {
					hourseCount1.push({ "hourse": hourseM[1], "count": 1 });
				}

				htmlListQP += '<tr style="line-height: 30px;">';
				htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
				htmlListQP += '</tr>';
			});
			htmlListQP += '</table>';
			$("#divCreateQPLeft").empty();
			$("#divCreateQPLeft").append(htmlListQP);

			var htmlListQPRight = '<table class="bettable" style="width:150px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

			if ($("input[id='chkQP']:checked").val() == "1") {
				hourseCount1.sort(function (a, b) {
					return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
				});
			} else {
				hourseCount1.sort(function (a, b) {
					return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
				});
			}


			$(hourseCount1).each(function (index) {
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQPRight += '</tr>';
			});
			$("#divCreateQPRight").empty();
			$("#divCreateQPRight").append(htmlListQPRight);

		}, 1000);
	},
	GetFliterData: function (result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function (index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function (item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) { return document.getElementById(element).innerHTML; }
	},
	GetWinTransData: function () {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if (textList[i] == "") { continue; }
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = { "id": id, "type": "WQ", "matches": tempArray[0], "hourse": tempArray[1], "ticketsw": parseInt(tempArray[2]), "ticketsp": parseInt(tempArray[3]), "discount": parseFloat(tempArray[4]), "limit": tempArray[4] }
			$(result).each(function (index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] && parseInt(tempArray[3]) == 0) {
					isExists = true;
					if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[3]) == 0) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function (fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if (textList[i] == "") { continue; }
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = { "id": id, "type": "WQ", "matches": tempArray[0], "hourse": tempArray[1], "tickets": tempArray[2], "discount": parseFloat(tempArray[3]), "limit": tempArray[4] }
				$(result).each(function (index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function (fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if (textList[i] == "") { continue; }
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = { "id": id, "type": "WQ", "matches": tempArray[0], "hourse": tempArray[1], "tickets": parseFloat(tempArray[2]), "discount": parseFloat(tempArray[3]), "limit": tempArray[4] }
			$(result).each(function (index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function () {
		var htmlList = '<div id="drag" style="display:none;background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计 <input type="checkbox" id="chkQ" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q下注统计 <input type="checkbox" id="chkQP" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function (obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function () {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function (e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function (e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({ top: y, left: x }); //控件新位置  
			}
		}).mouseup(function () {
			_move = false;
		});
	}
}
var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}
    ]]>
    </JSCode>
  </JSFile>
	<JSFile>
    <version>V602</version>
    <JSCode>
    <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }
      
    	ContentScript={
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerSearch:null,
	      timerSearchQP:null,
	      DaoQiTime:"YYYY-MM-DD",
	      maxAndMinValueListWin:[],
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
        },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      onPlayerInit:function(){
	      	
		      var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
          htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span></h3>';
          htmlList += '<div id="divCreate"></div>'
          htmlList += '</div>';
          $("body").append(htmlList);
          $("#daoqitime").text(ContentScript.DaoQiTime);    
          ContentScript.HtmlAddDragEvent($("#drag"));
          
          self.setInterval(function(){
          	var hourseCount1 = ContentScript.GetWinTransData();
						if(hourseCount1.length==0){
							return;
						}
						
				    var	htmlListQPRight ='<table class="bettable" style="width:250px">';
									htmlListQPRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th><th width="20%">最多</th><th width="20%">最少</th>';
									hourseCount1.sort( function(a, b){   
									    return parseInt(a["ticketsw" ]) < parseInt(b["ticketsw" ]) ? 1 : parseInt(a[ "ticketsw"]) == parseInt(b[ "ticketsw" ]) ? 0 : -1;   
									}); 
									$(hourseCount1).each(function(index){
										var temp = $(this)[0];
										var minValue =0;
										var maxValue =0;
										var isExistsItem = false;
										$(ContentScript.maxAndMinValueListWin).each(function(index){
											if(temp.hourse==$(this)[0].hourse){
												isExistsItem = true;
												if($(this)[0].Max<temp.ticketsw){
													$(this)[0].Max = temp.ticketsw;
												}
												if($(this)[0].Min>temp.ticketsw){
													$(this)[0].Min = temp.ticketsw;
												}
												minValue = $(this)[0].Min;
												maxValue = $(this)[0].Max;
											}
										});
										if(!isExistsItem){
											ContentScript.maxAndMinValueListWin.push({"hourse":$(this)[0].hourse,"Min":$(this)[0].ticketsw,"Max":$(this)[0].ticketsw})
										}
										htmlListQPRight +='<tr style="line-height: 30px;">';  
	              		htmlListQPRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQPRight +='<td>'+ $(this)[0].ticketsw+ '</td>'; 
	              		htmlListQPRight +='<td>'+ maxValue + '</td>'; 
	              		htmlListQPRight +='<td>'+ minValue + '</td>'; 
	              		htmlListQPRight +='</tr>';
									});
									$("#divCreate").empty();
	              	$("#divCreate").append(htmlListQPRight);
          },1000);
	      },
	      allOnitEvent:function(){
		      //创建用户界面
			    ContentScript.CreateHtmlElement();
				  //绑定拖拽事件
				  ContentScript.HtmlAddDragEvent($("#drag"));
				  ContentScript.HtmlAddDragEvent($("#dragQ"));
				  ContentScript.HtmlAddDragEvent($("#dragQP"));
				  
				  $("#btnStart").bind("click",function(){
				  		$("#btnStart").hide();
							$("#btnEnd").show();
							
							ContentScript.timerSearch = self.setInterval(function(){
									var start = $("#startDiscount").val();
									var end = $("#endDiscount").val();
									start = parseFloat(start);
									end = parseFloat(end);
									var resultFirst = ContentScript.GetTransactionData('vrtFC_2','FC_DATA_2',start,end);
									
									var	htmlList ='<table class="bettable" style="width:400px">';
									htmlList +=  '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
									var hourseCount = [];
									resultFirst.sort( function(a, b){   
									    return parseInt(a["tickets" ]) < parseInt(b["tickets" ]) ? 1 : parseInt(a[ "tickets"]) == parseInt(b[ "tickets" ]) ? 0 : -1;   
									}); 
									
	              	$(resultFirst).each(function(index){
	              		var hourseM = $(this)[0].hourse.split('-');
	              		
	              		var isExists1 = false;
	              		var isExists2 = false;
										
										$(hourseCount).each(function(index){
											var temp = $(this)[0];
											if(temp.hourse==hourseM[0]){
												isExists1 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
											if(temp.hourse==hourseM[1]){
												isExists2 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
										});
										if(!isExists1)
										{
											hourseCount.push({"hourse":hourseM[0],"count":1});
										}
										if(!isExists2)
										{
											hourseCount.push({"hourse":hourseM[1],"count":1});
										}
	              		
	              			htmlList +='<tr style="line-height: 30px;">';
	              			htmlList +='<td>'+ $(this)[0].hourse+ '</td>';    
	              			htmlList +='<td>'+ $(this)[0].tickets+ '</td>'; 
	              			htmlList +='</tr>';
	              	});
	              	
	              	htmlList +='</table><br/>';
	              	$("#divCreateQLeft").empty();
	              	$("#divCreateQLeft").append(htmlList);
	              	
	              	var	htmlListQRight ='<table class="bettable" style="width:150px">';
									htmlListQRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th>';
									
									hourseCount.sort( function(a, b){   
									    return parseInt(a["count" ]) < parseInt(b["count" ]) ? 1 : parseInt(a[ "count"]) == parseInt(b[ "count" ]) ? 0 : -1;   
									});  
									var showRed = false;
									if(hourseCount.length>=4&&hourseCount[3].count>=4){
										showRed = true;
									}
									$(hourseCount).each(function(index){
										if(showRed && $(this)[0].count>=4 ){
	              			htmlListQRight +='<tr style="line-height: 30px;background: #FF0000;">';  
	              			htmlListQRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              			htmlListQRight +='<td>'+ $(this)[0].count+ '</td>'; 
	              			htmlListQRight +='</tr>';
	              		}else{
	              			htmlListQRight +='<tr style="line-height: 30px;">';  
	              			htmlListQRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              			htmlListQRight +='<td>'+ $(this)[0].count+ '</td>'; 
	              			htmlListQRight +='</tr>';
	              		}
									});
									$("#divCreateQRight").empty();
	              	$("#divCreateQRight").append(htmlListQRight);
							},1000);
				  });
				  
				  $("#btnEnd").bind("click",function(){
				  		if(ContentScript.timerSearch!=null){
							clearInterval(ContentScript.timerSearch);
							}
							$("#btnStart").show();
							$("#btnEnd").hide();
				  });
	      },
	      GetFliterData:function(result,start,end){
	      	var limitResult = [];
	      	//将符合条件的跑马的最小值显示出来
					$(result).each(function(index){
						var temp = $(this)[0];
						var isNew =false;
						if(parseFloat(temp.discount)>=start && parseFloat(temp.discount)<= end){
							$(limitResult).each(function(item){
								var tp = $(this)[0];
								if(tp.hourse==temp.hourse){
									isNew =true;
								}
								if(tp.hourse==temp.hourse && temp.discount<tp.discount){
									$(this)[0].tickets = temp.tickets;
									$(this)[0].discount = temp.discount;
									$(this)[0].limit = temp.limit;
								}
							});
							if(!isNew){
								limitResult.push(temp);
							}
						}
					});
					return limitResult;
	      },
	      getIframeInnerHTML(frame,element){
					try{
						return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
					}catch(e){return document.getElementById(element).innerHTML;}
				},
				GetWinTransData:function(){
					//1	1	9	9	83	300/100
					var textq = ContentScript.getIframeInnerHTML('vrtBET','BET_DATA');
					textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
	      	var textList = textq.split(";");
	      	var result = [];
	      	for(var i =0;i<textList.length;i++){
	      		if(textList[i]==""){continue;}
	      		var tempArray = textList[i].split("$");
	      		var isExists = false;
	      		var id = tempArray[0]+tempArray[1]+tempArray[2]+tempArray[3]; 
						item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
						$(result).each(function(index){
							var temp = $(this)[0];
							if(temp.hourse==tempArray[1] && parseInt(tempArray[3]) ==0){
								isExists =true;
								if(temp.discount>parseFloat(tempArray[3])){
										$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
										//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
								}
								return;
							}
						});
						if(!isExists&& parseInt(tempArray[3]) ==0)
						{
							result.push(item);
						}
	      	}
	      	return result;
				},
	      GetTransactionData:function(fc,data,start,end){ 
	      	var textq = ContentScript.getIframeInnerHTML(fc,data);
	      	textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
		      var result = [];
		      var fliterHourse=[];
		      var textList = textq.split(";");
		      console.log(textList.length);
		      for(var i =0;i<textList.length;i++)
		      {
		      			if(textList[i]==""){continue;}
		      			var tempArray = textList[i].split("$");
		      			var paramValue = 700;
		      			if(tempArray[1].indexOf("(")>=0){
		      				paramValue=400;
		      			}
								var id = tempArray[0]+tempArray[1]+tempArray[2]; 
								if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3])>=start && parseFloat(tempArray[3])<= end && parseFloat(tempArray[4])==paramValue)
								{
									var isExists = false;
									item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"tickets":tempArray[2],"discount":parseFloat(tempArray[3]),"limit":tempArray[4]}
									$(result).each(function(index){
										var temp = $(this)[0];
										if(temp.hourse==tempArray[1]){
											isExists =true;
											if(temp.discount>parseFloat(tempArray[3])){
												$(this)[0].tickets = tempArray[2];
												$(this)[0].discount = parseFloat(tempArray[3]);
												$(this)[0].limit = tempArray[4];
											}
											return;
										}
									});
									if(!isExists)
									{
										result.push(item);
									}
								}
								if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4])==paramValue)
								{
									fliterHourse.push(tempArray[1]);
								}
		      }
		    	return result;
	      },
	      GetTransactionDataByArea:function(fc,data){ 
	      	var textq = ContentScript.getIframeInnerHTML(fc,data);
	      	textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
		      var result = [];
		      var textList = textq.split(";");
		      console.log(textList.length);
		      for(var i =0;i<textList.length;i++)
		      {
		      			if(textList[i]==""){continue;}
		      			var tempArray = textList[i].split("$");
								var id = tempArray[0]+tempArray[1]+tempArray[2]; 
								
									var isExists = false;
									item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"tickets":parseFloat(tempArray[2]),"discount":parseFloat(tempArray[3]),"limit":tempArray[4]}
									$(result).each(function(index){
										var temp = $(this)[0];
										if(temp.hourse==tempArray[1]){
											isExists =true;
											$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
											return;
										}
									});
									if(!isExists)
									{
										result.push(item);
									}
		      }
		    	return result;
	      },
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 250px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+'</h3>';
              htmlList +='<div style="float: left;"><table style="width:200">';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
              htmlList +='<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input type="button" id="btnStart" value="连赢Q开始" />';
        			htmlList +='<input type="button" id="btnEnd" value="连赢Q停止" />';
              htmlList +='</td></tr>';
              htmlList +='</table> </div>';
              htmlList +='</div>';
              
              htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计</h3>';
              htmlList +='<div id="divCreateQLeft" style="float: left;"></div>'
              htmlList +='<div id="divCreateQRight" style="float: right;"></div>'
              htmlList += '</div>';
              $("body").append(htmlList);
	      },
	      
	      HtmlAddDragEvent:function(obj){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  obj.click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt(obj.css("left"));
                      _y = e.pageY - parseInt(obj.css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          obj.css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }
      var host =window.location.href;
      if(host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
      if(host.indexOf("playerhk.jsp")>=0){
      	ContentScript.onPlayerInit();
      }
    ]]>
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V603</version>
    <JSCode>
    <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }
      
    	ContentScript={
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerSearch:null,
	      timerSearchQP:null, 
	      timerEveryList:null,
	      DaoQiTime:"YYYY-MM-DD",
	      maxAndMinValueListWin:[],
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
        },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      onEveryInit:function(){
	      	ContentScript.createBatchHtml(18);
	      	ContentScript.timerEveryList = setInterval(function(){
	      		var result = ContentScript.GetWinEveryTransData();
	      	  var everyHourseList = [];
		      	$(result).each(function(){
		      		var temp = $(this)[0];
		      		ContentScript.createEveryFunc(temp.hourse,temp.list);
		      	});
	      	},1000);
	      },
	      createBatchHtml:function(item){
	      	for(var index=1;index<=item;index++){
	      		var htmlList = '<div id="drag'+index+'" style="display:none;background:white;width: 330px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
	          htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">马'+index+' &nbsp; 到期时间<span class="daoqitime"></span> </h3>';
	          htmlList += '<div id="divCreate'+index+'"></div>'
	          htmlList += '</div>';
	          $("body").append(htmlList);
	          ContentScript.HtmlAddDragEvent($("#drag"+index));
	          $(".daoqitime").val(ContentScript.DaoQiTime);
	      	}
	      },
	      createEveryFunc:function(index,list){
	      	  if(list.length>0){
	      	  	$("#drag"+index).show();
	      	  }
          	var hourseCount1 = list;
						if(hourseCount1.length==0){
							return;
						}
						
				    var	htmlListQPRight ='<table class="bettable" style="width:250px">';
									htmlListQPRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th><th width="20%">折头</th><th width="20%">极限</th>';
									
									$(hourseCount1).each(function(index){
										var temp = $(this)[0];
										var li = $(this)[0].limit.split('/');
										var showli ="";
										if(parseInt(li[0])<=40){
											showli='<span style="color:red">'+$(this)[0].limit+'</span>';
										}else{
											showli =$(this)[0].limit;
										}
										htmlListQPRight +='<tr style="line-height: 30px;">';  
	              		htmlListQPRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQPRight +='<td>'+ $(this)[0].ticketsw+ '</td>'; 
	              		htmlListQPRight +='<td>'+ $(this)[0].discount + '</td>'; 
	              		htmlListQPRight +='<td>'+ showli + '</td>'; 
	              		htmlListQPRight +='</tr>';
									});
									$("#divCreate"+index).empty();
	              	$("#divCreate"+index).append(htmlListQPRight);
	      },
	      onPlayerInit:function(){
	      	
		      var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
          htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span></h3>';
          htmlList += '<div id="divCreate"></div>'
          htmlList += '</div>';
          $("body").append(htmlList);
          $("#daoqitime").text(ContentScript.DaoQiTime);    
          ContentScript.HtmlAddDragEvent($("#drag"));
          
          self.setInterval(function(){
          	var hourseCount1 = ContentScript.GetWinTransData();
						if(hourseCount1.length==0){
							return;
						}
						
				    var	htmlListQPRight ='<table class="bettable" style="width:250px">';
									htmlListQPRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th><th width="20%">最多</th><th width="20%">最少</th>';
									hourseCount1.sort( function(a, b){   
									    return parseInt(a["ticketsw" ]) < parseInt(b["ticketsw" ]) ? 1 : parseInt(a[ "ticketsw"]) == parseInt(b[ "ticketsw" ]) ? 0 : -1;   
									}); 
									$(hourseCount1).each(function(index){
										var temp = $(this)[0];
										var minValue =0;
										var maxValue =0;
										var isExistsItem = false;
										$(ContentScript.maxAndMinValueListWin).each(function(index){
											if(temp.hourse==$(this)[0].hourse){
												isExistsItem = true;
												if($(this)[0].Max<temp.ticketsw){
													$(this)[0].Max = temp.ticketsw;
												}
												if($(this)[0].Min>temp.ticketsw){
													$(this)[0].Min = temp.ticketsw;
												}
												minValue = $(this)[0].Min;
												maxValue = $(this)[0].Max;
											}
										});
										if(!isExistsItem){
											ContentScript.maxAndMinValueListWin.push({"hourse":$(this)[0].hourse,"Min":$(this)[0].ticketsw,"Max":$(this)[0].ticketsw})
										}
										htmlListQPRight +='<tr style="line-height: 30px;">';  
	              		htmlListQPRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQPRight +='<td>'+ $(this)[0].ticketsw+ '</td>'; 
	              		htmlListQPRight +='<td>'+ maxValue + '</td>'; 
	              		htmlListQPRight +='<td>'+ minValue + '</td>'; 
	              		htmlListQPRight +='</tr>';
									});
									$("#divCreate").empty();
	              	$("#divCreate").append(htmlListQPRight);
          },1000);
	      },
	      allOnitEvent:function(){
		      //创建用户界面
			    ContentScript.CreateHtmlElement();
				  //绑定拖拽事件
				  ContentScript.HtmlAddDragEvent($("#drag"));
				  ContentScript.HtmlAddDragEvent($("#dragQ"));
				  ContentScript.HtmlAddDragEvent($("#dragQP"));
				  
				  $("#btnStart").bind("click",function(){
				  		$("#btnStart").hide();
							$("#btnEnd").show();
							
							ContentScript.timerSearch = self.setInterval(function(){
									var start = $("#startDiscount").val();
									var end = $("#endDiscount").val();
									start = parseFloat(start);
									end = parseFloat(end);
									var resultFirst = ContentScript.GetTransactionData('vrtFC_2','FC_DATA_2',start,end);
									
									var	htmlList ='<table class="bettable" style="width:400px">';
									htmlList +=  '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
									var hourseCount = [];
									resultFirst.sort( function(a, b){   
									    return parseInt(a["tickets" ]) < parseInt(b["tickets" ]) ? 1 : parseInt(a[ "tickets"]) == parseInt(b[ "tickets" ]) ? 0 : -1;   
									}); 
									
	              	$(resultFirst).each(function(index){
	              		var hourseM = $(this)[0].hourse.split('-');
	              		
	              		var isExists1 = false;
	              		var isExists2 = false;
										
										$(hourseCount).each(function(index){
											var temp = $(this)[0];
											if(temp.hourse==hourseM[0]){
												isExists1 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
											if(temp.hourse==hourseM[1]){
												isExists2 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
										});
										if(!isExists1)
										{
											hourseCount.push({"hourse":hourseM[0],"count":1});
										}
										if(!isExists2)
										{
											hourseCount.push({"hourse":hourseM[1],"count":1});
										}
	              		
	              			htmlList +='<tr style="line-height: 30px;">';
	              			htmlList +='<td>'+ $(this)[0].hourse+ '</td>';    
	              			htmlList +='<td>'+ $(this)[0].tickets+ '</td>'; 
	              			htmlList +='</tr>';
	              	});
	              	
	              	htmlList +='</table><br/>';
	              	$("#divCreateQLeft").empty();
	              	$("#divCreateQLeft").append(htmlList);
	              	
	              	var	htmlListQRight ='<table class="bettable" style="width:150px">';
									htmlListQRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th>';
									
									hourseCount.sort( function(a, b){   
									    return parseInt(a["count" ]) < parseInt(b["count" ]) ? 1 : parseInt(a[ "count"]) == parseInt(b[ "count" ]) ? 0 : -1;   
									});  
									var showRed = false;
									if(hourseCount.length>=4&&hourseCount[3].count>=4){
										showRed = true;
									}
									$(hourseCount).each(function(index){
										if(showRed && $(this)[0].count>=4 ){
	              			htmlListQRight +='<tr style="line-height: 30px;">';  
	              			htmlListQRight +='<td style="color: #FF0000;">'+ $(this)[0].hourse+ '</td>';    
	              			htmlListQRight +='<td style="color: #FF0000;">'+ $(this)[0].count+ '</td>'; 
	              			htmlListQRight +='</tr>';
	              		}else{
	              			htmlListQRight +='<tr style="line-height: 30px;">';  
	              			htmlListQRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              			htmlListQRight +='<td>'+ $(this)[0].count+ '</td>'; 
	              			htmlListQRight +='</tr>';
	              		}
									});
									$("#divCreateQRight").empty();
	              	$("#divCreateQRight").append(htmlListQRight);
							},1000);
				  });
				  
				  $("#btnEnd").bind("click",function(){
				  		if(ContentScript.timerSearch!=null){
							clearInterval(ContentScript.timerSearch);
							}
							$("#btnStart").show();
							$("#btnEnd").hide();
				  });
	      },
	      GetFliterData:function(result,start,end){
	      	var limitResult = [];
	      	//将符合条件的跑马的最小值显示出来
					$(result).each(function(index){
						var temp = $(this)[0];
						var isNew =false;
						if(parseFloat(temp.discount)>=start && parseFloat(temp.discount)<= end){
							$(limitResult).each(function(item){
								var tp = $(this)[0];
								if(tp.hourse==temp.hourse){
									isNew =true;
								}
								if(tp.hourse==temp.hourse && temp.discount<tp.discount){
									$(this)[0].tickets = temp.tickets;
									$(this)[0].discount = temp.discount;
									$(this)[0].limit = temp.limit;
								}
							});
							if(!isNew){
								limitResult.push(temp);
							}
						}
					});
					return limitResult;
	      },
	      getIframeInnerHTML(frame,element){
					try{
						return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
					}catch(e){return document.getElementById(element).innerHTML;}
				},
				GetWinTransData:function(){
					//1	1	9	9	83	300/100
					var textq = ContentScript.getIframeInnerHTML('vrtBET','BET_DATA');
					textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
	      	var textList = textq.split(";");
	      	var result = [];
	      	for(var i =0;i<textList.length;i++){
	      		if(textList[i]==""){continue;}
	      		var tempArray = textList[i].split("$");
	      		var isExists = false;
	      		var id = tempArray[0]+tempArray[1]+tempArray[2]+tempArray[3]; 
						item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]} 
						$(result).each(function(index){
							var temp = $(this)[0];
							if(temp.hourse==tempArray[1] && parseInt(tempArray[3]) ==0){
								isExists =true;
								if(temp.discount>parseFloat(tempArray[3])){
										$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
										//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
								}
								return;
							}
						});
						if(!isExists&& parseInt(tempArray[3]) ==0)
						{
							result.push(item);
						}
	      	}
	      	return result;
				},
				GetWinEveryTransData:function(){
					var textq = ContentScript.getIframeInnerHTML('vrtBET','BET_DATA');
					textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
	      	var textList = textq.split(";");
	      	var result = [];
	      	for(var i =0;i<textList.length;i++){
	      		if(textList[i]==""){continue;}
	      		var tempArray = textList[i].split("$");
	      		var isExists = false;
	      		var id = tempArray[0]+tempArray[1]+tempArray[2]+tempArray[3]; 
						item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[5]}
						$(result).each(function(index){
							var temp = $(this)[0];
							if(temp.hourse==tempArray[1] && parseInt(tempArray[3]) ==0){
								$(this)[0].list.push(item);
								isExists=true;
							}
						});
						if(!isExists && parseInt(tempArray[3]) ==0){
							result.push({"hourse":tempArray[1],"list":[item]});
						}
	      	}
	      	return result;
				},
	      GetTransactionData:function(fc,data,start,end){ 
	      	var textq = ContentScript.getIframeInnerHTML(fc,data);
	      	textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
		      var result = [];
		      var fliterHourse=[];
		      var textList = textq.split(";");
		      console.log(textList.length);
		      for(var i =0;i<textList.length;i++)
		      {
		      			if(textList[i]==""){continue;}
		      			var tempArray = textList[i].split("$");
		      			var paramValue = 700;
		      			if(tempArray[1].indexOf("(")>=0){
		      				paramValue=400;
		      			}
								var id = tempArray[0]+tempArray[1]+tempArray[2]; 
								if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3])>=start && parseFloat(tempArray[3])<= end && parseFloat(tempArray[4])==paramValue)
								{
									var isExists = false;
									item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"tickets":tempArray[2],"discount":parseFloat(tempArray[3]),"limit":tempArray[4]}
									$(result).each(function(index){
										var temp = $(this)[0];
										if(temp.hourse==tempArray[1]){
											isExists =true;
											if(temp.discount>parseFloat(tempArray[3])){
												$(this)[0].tickets = tempArray[2];
												$(this)[0].discount = parseFloat(tempArray[3]);
												$(this)[0].limit = tempArray[4];
											}
											return;
										}
									});
									if(!isExists)
									{
										result.push(item);
									}
								}
								if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4])==paramValue)
								{
									fliterHourse.push(tempArray[1]);
								}
		      }
		    	return result;
	      },
	      GetTransactionDataByArea:function(fc,data){ 
	      	var textq = ContentScript.getIframeInnerHTML(fc,data);
	      	textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
		      var result = [];
		      var textList = textq.split(";");
		      console.log(textList.length);
		      for(var i =0;i<textList.length;i++)
		      {
		      			if(textList[i]==""){continue;}
		      			var tempArray = textList[i].split("$");
								var id = tempArray[0]+tempArray[1]+tempArray[2]; 
								
									var isExists = false;
									item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"tickets":parseFloat(tempArray[2]),"discount":parseFloat(tempArray[3]),"limit":tempArray[4]}
									$(result).each(function(index){
										var temp = $(this)[0];
										if(temp.hourse==tempArray[1]){
											isExists =true;
											$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
											return;
										}
									});
									if(!isExists)
									{
										result.push(item);
									}
		      }
		    	return result;
	      },
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 250px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+'</h3>';
              htmlList +='<div style="float: left;"><table style="width:200">';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
              htmlList +='<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input type="button" id="btnStart" value="连赢Q开始" />';
        			htmlList +='<input type="button" id="btnEnd" value="连赢Q停止" />';
              htmlList +='</td></tr>';
              htmlList +='</table> </div>';
              htmlList +='</div>';
              
              htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计</h3>';
              htmlList +='<div id="divCreateQLeft" style="float: left;"></div>'
              htmlList +='<div id="divCreateQRight" style="float: right;"></div>'
              htmlList += '</div>';
              $("body").append(htmlList);
	      },
	      
	      HtmlAddDragEvent:function(obj){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  obj.click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt(obj.css("left"));
                      _y = e.pageY - parseInt(obj.css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          obj.css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }
      var host =window.location.href;
      if(host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
      if(host.indexOf("playerhk.jsp")>=0){
      	ContentScript.onEveryInit();
      }
    ]]>
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V606</version>
    <JSCode>
    <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }
      
    	ContentScript={
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerSearch:null,
	      timerSearchQP:null,
	      DaoQiTime:"YYYY-MM-DD",
	      maxAndMinValueListWin:[],
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
        },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      onPlayerInit:function(){
	      	
		      var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
          htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span></h3>';
          htmlList += '<div id="divCreate"></div>'
          htmlList += '</div>';
          $("body").append(htmlList);
          $("#daoqitime").text(ContentScript.DaoQiTime);    
          ContentScript.HtmlAddDragEvent($("#drag"));
          
          self.setInterval(function(){
          	var hourseCount1 = ContentScript.GetWinTransData();
						if(hourseCount1.length==0){
							return;
						}
						
				    var	htmlListQPRight ='<table class="bettable" style="width:250px">';
									htmlListQPRight +=  '<tr><th width="20%">马</th><th width="20%">数量</th><th width="20%">折头</th><th width="20%">最多</th><th width="20%">最少</th>';
									hourseCount1.sort( function(a, b){   
									    return parseFloat(a["maxDiscount" ]) < parseFloat(b["maxDiscount" ]) ? 1 : parseFloat(a[ "maxDiscount"]) == parseFloat(b[ "maxDiscount" ]) ? 0 : -1;   
									}); 
									$(hourseCount1).each(function(index){
										var temp = $(this)[0];
										var minValue =0;
										var maxValue =0;
										var isExistsItem = false;
										$(ContentScript.maxAndMinValueListWin).each(function(index){
											if(temp.hourse==$(this)[0].hourse){
												isExistsItem = true;
												if($(this)[0].Max<temp.ticketsw){
													$(this)[0].Max = temp.ticketsw;
												}
												if($(this)[0].Min>temp.ticketsw){
													$(this)[0].Min = temp.ticketsw;
												}
												minValue = $(this)[0].Min;
												maxValue = $(this)[0].Max;
											}
										});
										if(!isExistsItem){
											ContentScript.maxAndMinValueListWin.push({"hourse":$(this)[0].hourse,"Min":$(this)[0].ticketsw,"Max":$(this)[0].ticketsw})
										}
										htmlListQPRight +='<tr style="line-height: 30px;">';  
	              		htmlListQPRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQPRight +='<td>'+ $(this)[0].ticketsw+ '</td>'; 
	              		htmlListQPRight +='<td>'+ $(this)[0].maxDiscount+ '</td>'; 
	              		htmlListQPRight +='<td>'+ maxValue + '</td>'; 
	              		htmlListQPRight +='<td>'+ minValue + '</td>'; 
	              		htmlListQPRight +='</tr>';
									});
									$("#divCreate").empty();
	              	$("#divCreate").append(htmlListQPRight);
          },1000);
	      },
	      allOnitEvent:function(){
		      //创建用户界面
			    ContentScript.CreateHtmlElement();
				  //绑定拖拽事件
				  ContentScript.HtmlAddDragEvent($("#drag"));
				  ContentScript.HtmlAddDragEvent($("#dragQ"));
				  ContentScript.HtmlAddDragEvent($("#dragQP"));
				  $("#daoqitime").text(ContentScript.DaoQiTime);
				  
//				  $("#btnStart").bind("click",function(){
//				  		$("#btnStart").hide();
//							$("#btnEnd").show();
//							
							ContentScript.timerSearch = self.setInterval(function(){
									var start = $("#startDiscount").val();
									var end = $("#endDiscount").val();
									start = parseFloat(start);
									end = parseFloat(end);
									var resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1','FC_DATA_1');
									
									var	htmlList ='<table class="bettable" style="width:400px">';
									htmlList +=  '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="20%">折头</th></tr>';
									var hourseCount = [];
									resultFirst.sort( function(a, b){   
									    return  parseFloat(a["discount" ]) < parseFloat(b["discount" ]) ? 1 : parseFloat(a[ "discount"]) == parseFloat(b[ "discount" ]) ? 0 : -1;   
									}); 
	              	$(resultFirst).each(function(index){
	              		var hourseM = $(this)[0].hourse.split('-');
	              		
	              		var isExists1 = false;
	              		var isExists2 = false;
										
										$(hourseCount).each(function(index){
											var temp = $(this)[0];
											if(temp.hourse==hourseM[0]){
												isExists1 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
											if(temp.hourse==hourseM[1]){
												isExists2 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
										});
										if(!isExists1)
										{
											hourseCount.push({"hourse":hourseM[0],"count":1});
										}
										if(!isExists2)
										{
											hourseCount.push({"hourse":hourseM[1],"count":1});
										}
	              		
	              		htmlList +='<tr style="line-height: 30px;">';
	              		htmlList +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlList +='<td>'+ $(this)[0].tickets+ '</td>'; 
	              		htmlList +='<td>'+ $(this)[0].discount+ '</td>'; 
	              		htmlList +='</tr>';
	              	});
	              	
	              	htmlList +='</table><br/>';
	              	$("#divCreateQLeft").empty();
	              	$("#divCreateQLeft").append(htmlList);
	              	
	              	var	htmlListQRight ='<table class="bettable" style="width:150px">';
									htmlListQRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th></tr>';
									
									hourseCount.sort( function(a, b){   
									    return parseInt(a["discount" ]) < parseInt(b["discount" ]) ? 1 : parseInt(a[ "discount"]) == parseInt(b[ "discount" ]) ? 0 : -1;   
									});  
									
									$(hourseCount).each(function(index){
										htmlListQRight +='<tr style="line-height: 30px;">';  
	              		htmlListQRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQRight +='<td>'+ $(this)[0].count+ '</td>'; 
	              		htmlListQRight +='</tr>';
									});
									$("#divCreateQRight").empty();
	              	$("#divCreateQRight").append(htmlListQRight);
							},1000);
//				  });
				  
//				  $("#btnEnd").bind("click",function(){
//				  		if(ContentScript.timerSearch!=null){
//								clearInterval(ContentScript.timerSearch);
//							}
//							$("#btnStart").show();
//							$("#btnEnd").hide();
//				  });
				  
//				  $("#btnStartQP").bind("click",function(){
//				  		$("#btnStartQP").hide();
//							$("#btnEndQP").show();
//							
							ContentScript.timerSearch = self.setInterval(function(){
									var start = $("#startDiscountQP").val();
									var end = $("#endDiscountQP").val();
									start = parseFloat(start);
									end = parseFloat(end);
									var resultSecond = ContentScript.GetTransactionDataByArea('vrtFC_3','FC_DATA_3');
								
									var hourseCount1= [];
	              	
              	  var htmlListQP ='<table class="bettable" style="width:400px">';
              	  htmlListQP +=  '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="20%">折头$</th></tr>';
              	  resultSecond.sort( function(a, b){   
									    return parseInt(a["discount" ]) < parseInt(b["discount" ]) ? 1 : parseInt(a[ "discount"]) == parseInt(b[ "discount" ]) ? 0 : -1;   
									}); 
	              	$(resultSecond).each(function(index){
	              		var hourseM = $(this)[0].hourse.replace("(","").replace(")","").split('-');
	              		
	              		var isExists1 = false;
	              		var isExists2 = false;
										
										$(hourseCount1).each(function(index){
											var temp = $(this)[0];
											if(temp.hourse==hourseM[0]){
												isExists1 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
											if(temp.hourse==hourseM[1]){
												isExists2 =true;
												$(this)[0].count = $(this)[0].count+1;
											}
										});
										if(!isExists1)
										{
											hourseCount1.push({"hourse":hourseM[0],"count":1});
										}
										if(!isExists2)
										{
											hourseCount1.push({"hourse":hourseM[1],"count":1});
										}
	              		
	              		htmlListQP +='<tr style="line-height: 30px;">';
	              		htmlListQP +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQP +='<td>'+ $(this)[0].tickets+ '</td>'; 
	              		htmlListQP +='<td>'+ $(this)[0].discount+ '</td>'; 
	              		htmlListQP +='</tr>';
	              	});
	              	htmlListQP +='</table>';
	              	$("#divCreateQPLeft").empty();
	              	$("#divCreateQPLeft").append(htmlListQP);
	              	
	              	var	htmlListQPRight ='<table class="bettable" style="width:150px">';
									htmlListQPRight +=  '<tr><th width="20%">马</th><th width="34%">数量</th>';
									hourseCount1.sort( function(a, b){   
									    return parseInt(a["count" ]) < parseInt(b["count" ]) ? 1 : parseInt(a[ "count"]) == parseInt(b[ "count" ]) ? 0 : -1;   
									});  
									$(hourseCount1).each(function(index){
										htmlListQPRight +='<tr style="line-height: 30px;">';  
	              		htmlListQPRight +='<td>'+ $(this)[0].hourse+ '</td>';    
	              		htmlListQPRight +='<td>'+ $(this)[0].count+ '</td>'; 
	              		htmlListQPRight +='</tr>';
									});
									$("#divCreateQPRight").empty();
	              	$("#divCreateQPRight").append(htmlListQPRight);
	              	
							},1000);
//				  });
//				  $("#btnEndQP").bind("click",function(){
//				  		if(ContentScript.timerSearchQP!=null){
//								clearInterval(ContentScript.timerSearchQP);
//							}
//							$("#btnStartQP").show();
//							$("#btnEndQP").hide();
//				  });
//				  $("#btnStartQP").click();
	      },
	      GetFliterData:function(result,start,end){
	      	var limitResult = [];
	      	//将符合条件的跑马的最小值显示出来
					$(result).each(function(index){
						var temp = $(this)[0];
						var isNew =false;
						if(parseFloat(temp.discount)>=start && parseFloat(temp.discount)<= end){
							$(limitResult).each(function(item){
								var tp = $(this)[0];
								if(tp.hourse==temp.hourse){
									isNew =true;
								}
								if(tp.hourse==temp.hourse && temp.discount<tp.discount){
									$(this)[0].tickets = temp.tickets;
									$(this)[0].discount = temp.discount;
									$(this)[0].limit = temp.limit;
								}
							});
							if(!isNew){
								limitResult.push(temp);
							}
						}
					});
					return limitResult;
	      },
	      getIframeInnerHTML(frame,element){
					try{
						return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
					}catch(e){return document.getElementById(element).innerHTML;}
				},
				GetWinTransData:function(){
					//1	1	9	9	83	300/100
					var textq = ContentScript.getIframeInnerHTML('vrtBET','BET_DATA');
					textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
	      	var textList = textq.split(";");
	      	var result = [];
	      	for(var i =0;i<textList.length;i++){
	      		if(textList[i]==""){continue;}
	      		var tempArray = textList[i].split("$");
	      		var isExists = false;
	      		var id = tempArray[0]+tempArray[1]+tempArray[2]+tempArray[3]; 
						item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
						$(result).each(function(index){
							var temp = $(this)[0];
							if(temp.hourse==tempArray[1] && parseInt(tempArray[3]) ==0){
								isExists =true;
								if(temp.discount<= parseFloat(tempArray[4])){
										$(this)[0].maxDiscount= parseFloat(tempArray[4]);
								}else
								{
									$(this)[0].maxDiscount = temp.discount;
								}
								if(temp.discount>parseFloat(tempArray[3])){
										$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
										//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
								}
								return;
							}
						});
						if(!isExists&& parseInt(tempArray[3]) ==0)
						{
							item.maxDiscount = parseFloat(tempArray[4]);
							result.push(item);
						}
	      	}
	      	return result;
				},
	      GetTransactionData:function(fc,data,start,end){ 
	      	var textq = ContentScript.getIframeInnerHTML(fc,data);
	      	textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
		      var result = [];
		      var fliterHourse=[];
		      var textList = textq.split(";");
		      console.log(textList.length);
		      for(var i =0;i<textList.length;i++)
		      {
		      			if(textList[i]==""){continue;}
		      			var tempArray = textList[i].split("$");
		      			var paramValue = 700;
		      			if(tempArray[1].indexOf("(")>=0){
		      				paramValue=400;
		      			}
								var id = tempArray[0]+tempArray[1]+tempArray[2]; 
								if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3])>=start && parseFloat(tempArray[3])<= end && parseFloat(tempArray[4])==paramValue)
								{
									var isExists = false;
									item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"tickets":tempArray[2],"discount":parseFloat(tempArray[3]),"limit":tempArray[4]}
									$(result).each(function(index){
										var temp = $(this)[0];
										if(temp.hourse==tempArray[1]){
											isExists =true;
											if(temp.discount>parseFloat(tempArray[3])){
												$(this)[0].tickets = tempArray[2];
												$(this)[0].discount = parseFloat(tempArray[3]);
												$(this)[0].limit = tempArray[4];
											}
											return;
										}
									});
									if(!isExists)
									{
										result.push(item);
									}
								}
								if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4])==paramValue)
								{
									fliterHourse.push(tempArray[1]);
								}
		      }
		    	return result;
	      },
	      GetTransactionDataByArea:function(fc,data){ 
	      	var textq = ContentScript.getIframeInnerHTML(fc,data);
	      	textq = textq.replace(/\n/g, ";");
	      	textq = textq.replace(/\s/g, "$");
		      var result = [];
		      var textList = textq.split(";");
		      console.log(textList.length);
		      for(var i =0;i<textList.length;i++)
		      {
		      			if(textList[i]==""){continue;}
		      			var tempArray = textList[i].split("$");
								var id = tempArray[0]+tempArray[1]+tempArray[2]; 
								
									var isExists = false;
									item={"id":id,"type":"WQ","matches":tempArray[0],"hourse":tempArray[1],"tickets":parseFloat(tempArray[2]),"discount":parseFloat(tempArray[3]),"limit":tempArray[4]}
									$(result).each(function(index){
										var temp = $(this)[0];
										if(temp.hourse==tempArray[1]){
											isExists =true;
											$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
											if($(this)[0].discount<=parseFloat(tempArray[3]))
											{
												$(this)[0].discount = parseFloat(tempArray[3]);
											}
											return;
										}
									});
									if(!isExists)
									{
										result.push(item);
									}
								
		      }
		    	return result;
	      },
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="display:none;background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<div style="float: left;"><table style="width:200">';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
              htmlList +='<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input type="button" id="btnStart" value="连赢Q开始" />';
        			htmlList +='<input type="button" id="btnEnd" value="连赢Q停止" />';
              htmlList +='</td></tr>';
              htmlList +='</table> </div>';
              htmlList +='<div style="float: right;"><table style="width:200">';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
              htmlList +='<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;"><td>';
              htmlList +='<input type="button" id="btnStartQP" value="位置Q开始" />';
        			htmlList +='<input type="button" id="btnEndQP" value="位置Q停止" />';
              htmlList +='</td></tr>';
              htmlList +='</table> </div>';
              htmlList += '</div>';
              
              htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
              htmlList +='<div id="divCreateQLeft" style="float: left;"></div>'
              htmlList +='<div id="divCreateQRight" style="float: right;"></div>'
              htmlList += '</div>';
             
              htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q下注统计</h3>';
              htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
              htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
              htmlList += '</div>';
        			
              $("body").append(htmlList);
	      },
	      
	      HtmlAddDragEvent:function(obj){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  obj.click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt(obj.css("left"));
                      _y = e.pageY - parseInt(obj.css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          obj.css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }
      var host =window.location.href;
      if(host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
      if(host.indexOf("playerhk.jsp")>=0){
      	ContentScript.onPlayerInit();
      }
    ]]>
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V608</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	monitorTicketTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorPLTimeList: [2400,1800, 0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorJSTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER <= 30 && TIMER > 20) {
			return 1800;
		}
		if (TIMER <= 20 && TIMER > 15) {
			return 1200;
		}
		if (TIMER <= 15 && TIMER > 10) {
			return 900;
		}
		if (TIMER <= 10 && TIMER > 7) {
			return 600;
		}
		if (TIMER <= 7 && TIMER > 5) {
			return 420;
		}
		if (TIMER <= 5 && TIMER > 3) {
			return 300;
		}
		if (TIMER <= 3 && TIMER > 2) {
			return 180;
		}
		if (TIMER <= 2 && TIMER > 1) {
			return 120;
		}
		if (TIMER <= 1 && TIMER > 0) {
			return 60;
		}
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER > 0 && TIMER<=30) {
			return 1800;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));

		var htmlList1 = '<div id="ticket" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList1 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢票数统计</span></h3>';
		htmlList1 += '<div id="divTicketCreate"></div>'
		htmlList1 += '</div>';
		$("body").append(htmlList1);
		ContentScript.HtmlAddDragEvent($("#ticket"));

		var htmlList2 = '<div id="peilv" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList2 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢赔率统计</span></h3>';
		htmlList2 += '<div id="divPeilvCreate"></div>'
		htmlList2 += '</div>';
		$("body").append(htmlList2);
		ContentScript.HtmlAddDragEvent($("#peilv"));

		self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if (isTicketTime &&  !isNaN(currentPMTime)) {
				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistTicket = true;
						return;
					}
				});
			}

			if (isPeiLvTime && !isNaN(currentPMTime)) {
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistPL = true;
						return;
					}
				});
			}


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}

			var htmlListQPRight = '<table class="bettable" style="width:250px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th><th width="20%">最多</th><th width="20%">最少</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].ticketsw + '</td>';
				htmlListQPRight += '<td>' + maxValue + '</td>';
				htmlListQPRight += '<td>' + minValue + '</td>';
				htmlListQPRight += '</tr>';
			});
			htmlListQPRight += '</table>';
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);

			if (!isExistTicket) {
				var htmlTicket = '<table class="bettable" style="width:800px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlTicket += '<tr><th width="">30分前</th>';
							}else{
								htmlTicket += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlTicket += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							htmlTicket += '<th width="">' + ContentScript.getTicketByHourse(temp.Data, i) + '</th>';
						}
						htmlTicket += '</tr>';
					}
				});

				$("#divTicketCreate").empty();
				$("#divTicketCreate").append(htmlTicket);
			}

			if (!isExistPL) {
				var htmlPeiLv = '<table class="bettable" style="width:800px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

                var FirstTemp=[];
                var HadChangeTime = true;
                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
                if(LastData.currentPMTime<=420){
                	FirstTemp = LastData.Data;
                }else{
                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
                		HadChangeTime = false;
                	}else{
                		$(ContentScript.monitorPLTimeData).each(function(item){
                			var temp = $(this)[0];
                			if(temp.currentPMTime==420){
                				FirstTemp = temp.Data;
                				return;
                			}
                		});
                	}
                }
                
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlPeiLv += '<tr><th width="">30分前</th>';
							}else{
								htmlPeiLv += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlPeiLv += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							if(HadChangeTime){
								if(temp.currentPMTime>420){
									htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
								}else{
									var currentValue = ContentScript.getWPPLByHourse(temp.Data, i);
									var firstValue = ContentScript.getWPPLByHourse(FirstTemp, i);
									if(currentValue!=0&& firstValue!=0 && parseFloat(currentValue) <= (parseFloat(firstValue)*0.9) && parseFloat(currentValue) > (parseFloat(firstValue)*0.75)){
									    htmlPeiLv += '<th width=""><font color="orange">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</font></th>';
									}
									else if(currentValue!=0 && firstValue!=0 && parseFloat(currentValue) <= (parseFloat(firstValue)*0.75)){
										htmlPeiLv += '<th width=""><font color="red">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</font></th>';
									}
									else{
										htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
									}
								}
								
							}else{
								htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
							}
						}
						htmlPeiLv += '</tr>';
					}
				});
				console.log(1);
				$("#divPeilvCreate").empty();
				$("#divPeilvCreate").append(htmlPeiLv);
			}

		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		ContentScript.HtmlAddDragEvent($("#dragJSQ"));
		ContentScript.HtmlAddDragEvent($("#dragJSQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);


		ContentScript.timerSearch = self.setInterval(function() {

			var start = $("#startDiscount").val();
			var end = $("#endDiscount").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');

			var htmlList = '<table class="bettable" style="width:400px">';
			htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultFirst).each(function(index) {
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlList += '<tr style="line-height: 30px;">';
				htmlList += '<td>' + $(this)[0].hourse + '</td>';
				htmlList += '<td>' + $(this)[0].tickets + '</td>';
				htmlList += '</tr>';
			});

			htmlList += '</table><br/>';
			$("#divCreateQLeft").empty();
			$("#divCreateQLeft").append(htmlList);

			var htmlListQRight = '<table class="bettable" style="width:150px">';
			htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount;
				ContentScript.monitorJSQTimeData.push(item);
				
				ContentScript.monitorJSQTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var zeroDataList = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var zeroMaxDataList = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var tempHtml = "";
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							if(temp.currentPMTime ==0){
								zeroDataList[i-1]=zeroDataList[i-1] + tempCount;
							}
							if(temp.currentPMTime<0){
								if(zeroMaxDataList[i-1] < tempCount){
									zeroMaxDataList[i-1]= tempCount;
								}
							}
							countList[i-1]=countList[i-1] + tempCount;
							if(parseInt(tempCount)>= parseInt($("#jsRedColor").val())){
								tempHtml += '<th width=""><font color="Red">' + tempCount + '</font></th>';
							}else{
								tempHtml += '<th width="">' + tempCount + '</th>';
							}
							
						}
						tempHtml += '</tr>';
					}
				});
				
				var htmlJS = '<table class="bettable" style="width:800px">';
				htmlJS += '<tr id="JSheader"><td width="65px">HK脚数</td>';
				
				for (var i = 1; i <= 14; i++) {
					if(zeroMaxDataList[i-1]>=(zeroDataList[i-1]+2)){
						htmlJS += '<td style="background-color:#00FF00;">' + i + '</td>';
					}else
					{
						htmlJS += '<td>' + i + '</td>';
					}
				}
				
				var htmlJSCount ="";
				htmlJSCount += '<tr style="background-color:#fff68f" ><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f">' + countList[i-1] + '</td>';
			    }
				htmlJSCount += '</tr>';

				$("#divCreateJSQ").empty();
				$("#divCreateJSQ").append(htmlJS + htmlJSCount +tempHtml+'</table>');
			}

			$(hourseCount).each(function(index) {
				htmlListQRight += '<tr style="line-height: 30px;">';
				htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQRight += '</tr>';
			});
			$("#divCreateQRight").empty();
			$("#divCreateQRight").append(htmlListQRight);
		}, 1000);

		ContentScript.timerSearch = self.setInterval(function() {
			var start = $("#startDiscountQP").val();
			var end = $("#endDiscountQP").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultSecond = ContentScript.GetTransactionDataByArea('vrtFC_3', 'FC_DATA_3');

			var hourseCount1 = [];

			var htmlListQP = '<table class="bettable" style="width:400px">';
			htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			resultSecond.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultSecond).each(function(index) {

				var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount1).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount1.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount1.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlListQP += '<tr style="line-height: 30px;">';
				htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
				htmlListQP += '</tr>';
			});
			htmlListQP += '</table>';
			//$("#divCreateQPLeft").empty();
			//$("#divCreateQPLeft").append(htmlListQP);

			var htmlListQPRight = '<table class="bettable" style="width:150px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorJSQPTimeData.push(item);

                var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var htmlJS = '<table class="bettable" style="width:800px">';
				htmlJS += '<tr><th width="65px">HK脚数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorJSQPTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempHtml="";
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && !isNaN(temp.currentPMTime)) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							countList[i-1]= countList[i-1] + tempCount;
							tempHtml += '<th width="">' + tempCount + '</th>';
						}
						tempHtml += '</tr>';
					}
				});
				
				htmlJS += '<tr style="background-color:#fff68f"><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJS += '<td style="background-color:#fff68f">' + countList[i-1] + '</th>';
			    }
				htmlJS += '</tr>';

				//$("#divCreateJSQP").empty();
				//$("#divCreateJSQP").append(htmlJS+tempHtml+'</table>');
			}

			$(hourseCount1).each(function(index) {
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQPRight += '</tr>';
			});
			$("#divCreateQPRight").empty();
			$("#divCreateQPRight").append(htmlListQPRight);

		}, 1000);

	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] && parseInt(tempArray[3]) == 0) {
					isExists = true;
					if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[3]) == 0) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="display:none;background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="display:none;background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q下注统计</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQP" style="display:none;background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q脚数统计</h3>';
		htmlList += '<div id="divCreateJSQP" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}
    ]]>
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V609</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	monitorTicketTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorPLTimeList: [2400,1800, 0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorJSTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER <= 30 && TIMER > 20) {
			return 1800;
		}
		if (TIMER <= 20 && TIMER > 15) {
			return 1200;
		}
		if (TIMER <= 15 && TIMER > 10) {
			return 900;
		}
		if (TIMER <= 10 && TIMER > 7) {
			return 600;
		}
		if (TIMER <= 7 && TIMER > 5) {
			return 420;
		}
		if (TIMER <= 5 && TIMER > 3) {
			return 300;
		}
		if (TIMER <= 3 && TIMER > 2) {
			return 180;
		}
		if (TIMER <= 2 && TIMER > 1) {
			return 120;
		}
		if (TIMER <= 1 && TIMER > 0) {
			return 60;
		}
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER > 0 && TIMER<=30) {
			return 1800;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));

		var htmlList1 = '<div id="ticket" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList1 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢票数统计</span></h3>';
		htmlList1 += '<div id="divTicketCreate"></div>'
		htmlList1 += '</div>';
		$("body").append(htmlList1);
		ContentScript.HtmlAddDragEvent($("#ticket"));

		var htmlList2 = '<div id="peilv" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList2 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢赔率统计</span></h3>';
		htmlList2 += '<div id="divPeilvCreate"></div>'
		htmlList2 += '</div>';
		$("body").append(htmlList2);
		ContentScript.HtmlAddDragEvent($("#peilv"));

		self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if (isTicketTime &&  !isNaN(currentPMTime)) {
				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistTicket = true;
						return;
					}
				});
			}

			if (isPeiLvTime && !isNaN(currentPMTime)) {
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistPL = true;
						return;
					}
				});
			}


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}

			var htmlListQPRight = '<table class="bettable" style="width:250px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th><th width="20%">最多</th><th width="20%">最少</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].ticketsw + '</td>';
				htmlListQPRight += '<td>' + maxValue + '</td>';
				htmlListQPRight += '<td>' + minValue + '</td>';
				htmlListQPRight += '</tr>';
			});
			htmlListQPRight += '</table>';
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);

			if (!isExistTicket) {
				var htmlTicket = '<table class="bettable" style="width:800px">';
				htmlTicket += '<tr><th width="">HK票数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlTicket += '<tr><th width="">30分前</th>';
							}else{
								htmlTicket += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlTicket += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							htmlTicket += '<th width="">' + ContentScript.getTicketByHourse(temp.Data, i) + '</th>';
						}
						htmlTicket += '</tr>';
					}
				});

				$("#divTicketCreate").empty();
				$("#divTicketCreate").append(htmlTicket);
			}

			if (!isExistPL) {
				var htmlPeiLv = '<table class="bettable" style="width:800px">';
				htmlPeiLv += '<tr><th width="">HK赔率</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlPeiLv += '<tr><th width="">30分前</th>';
							}else{
								htmlPeiLv += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlPeiLv += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
						}
						htmlPeiLv += '</tr>';
					}
				});
				console.log(1);
				$("#divPeilvCreate").empty();
				$("#divPeilvCreate").append(htmlPeiLv);
			}

		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		ContentScript.HtmlAddDragEvent($("#dragJSQ"));
		ContentScript.HtmlAddDragEvent($("#dragJSQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);


		ContentScript.timerSearch = self.setInterval(function() {

			var start = $("#startDiscount").val();
			var end = $("#endDiscount").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');

			var htmlList = '<table class="bettable" style="width:400px">';
			htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultFirst).each(function(index) {
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlList += '<tr style="line-height: 30px;">';
				htmlList += '<td>' + $(this)[0].hourse + '</td>';
				htmlList += '<td>' + $(this)[0].tickets + '</td>';
				htmlList += '</tr>';
			});

			htmlList += '</table><br/>';
			$("#divCreateQLeft").empty();
			$("#divCreateQLeft").append(htmlList);

			var htmlListQRight = '<table class="bettable" style="width:150px">';
			htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount;
				ContentScript.monitorJSQTimeData.push(item);

				var htmlJS = '<table class="bettable" style="width:800px">';
				htmlJS += '<tr><th width="">HK脚数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorJSQTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var tempHtml = "";
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							countList[i-1]=countList[i-1] + tempCount;
							tempHtml += '<th width="">' + tempCount + '</th>';
						}
						tempHtml += '</tr>';
					}
				});
				
				htmlJS += '<tr style="background-color:#fff68f" ><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJS += '<td style="background-color:#fff68f">' + countList[i-1] + '</td>';
			    }
				htmlJS += '</tr>';

				$("#divCreateJSQ").empty();
				$("#divCreateJSQ").append(htmlJS+tempHtml+'</table>');
			}

			$(hourseCount).each(function(index) {
				htmlListQRight += '<tr style="line-height: 30px;">';
				htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQRight += '</tr>';
			});
			$("#divCreateQRight").empty();
			$("#divCreateQRight").append(htmlListQRight);
		}, 1000);

		ContentScript.timerSearch = self.setInterval(function() {
			var start = $("#startDiscountQP").val();
			var end = $("#endDiscountQP").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultSecond = ContentScript.GetTransactionDataByArea('vrtFC_3', 'FC_DATA_3');

			var hourseCount1 = [];

			var htmlListQP = '<table class="bettable" style="width:400px">';
			htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			resultSecond.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultSecond).each(function(index) {

				var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount1).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount1.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount1.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlListQP += '<tr style="line-height: 30px;">';
				htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
				htmlListQP += '</tr>';
			});
			htmlListQP += '</table>';
			$("#divCreateQPLeft").empty();
			$("#divCreateQPLeft").append(htmlListQP);

			var htmlListQPRight = '<table class="bettable" style="width:150px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorJSQPTimeData.push(item);

                var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var htmlJS = '<table class="bettable" style="width:800px">';
				htmlJS += '<tr><th width="">HK脚数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorJSQPTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempHtml="";
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && !isNaN(temp.currentPMTime)) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							countList[i-1]= countList[i-1] + tempCount;
							tempHtml += '<th width="">' + tempCount + '</th>';
						}
						tempHtml += '</tr>';
					}
				});
				
				htmlJS += '<tr style="background-color:#fff68f"><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJS += '<td style="background-color:#fff68f">' + countList[i-1] + '</th>';
			    }
				htmlJS += '</tr>';

				$("#divCreateJSQP").empty();
				$("#divCreateJSQP").append(htmlJS+tempHtml+'</table>');
			}

			$(hourseCount1).each(function(index) {
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQPRight += '</tr>';
			});
			$("#divCreateQPRight").empty();
			$("#divCreateQPRight").append(htmlListQPRight);

		}, 1000);

	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] && parseInt(tempArray[3]) == 0) {
					isExists = true;
					if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[3]) == 0) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="display:none;background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q下注统计</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计</h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQP" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q脚数统计</h3>';
		htmlList += '<div id="divCreateJSQP" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}
    ]]>
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V610</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	monitorTicketTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorPLTimeList: [2400,1800, 0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorJSTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER <= 30 && TIMER > 20) {
			return 1800;
		}
		if (TIMER <= 20 && TIMER > 15) {
			return 1200;
		}
		if (TIMER <= 15 && TIMER > 10) {
			return 900;
		}
		if (TIMER <= 10 && TIMER > 7) {
			return 600;
		}
		if (TIMER <= 7 && TIMER > 5) {
			return 420;
		}
		if (TIMER <= 5 && TIMER > 3) {
			return 300;
		}
		if (TIMER <= 3 && TIMER > 2) {
			return 180;
		}
		if (TIMER <= 2 && TIMER > 1) {
			return 120;
		}
		if (TIMER <= 1 && TIMER > 0) {
			return 60;
		}
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER > 0 && TIMER<=30) {
			return 1800;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));

		var htmlList1 = '<div id="ticket" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList1 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢票数统计</span></h3>';
		htmlList1 += '<div id="divTicketCreate"></div>'
		htmlList1 += '</div>';
		$("body").append(htmlList1);
		ContentScript.HtmlAddDragEvent($("#ticket"));

		var htmlList2 = '<div id="peilv" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList2 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢赔率统计</span></h3>';
		htmlList2 += '<div id="divPeilvCreate"></div>'
		htmlList2 += '</div>';
		$("body").append(htmlList2);
		ContentScript.HtmlAddDragEvent($("#peilv"));

		self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if (isTicketTime &&  !isNaN(currentPMTime)) {
				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistTicket = true;
						return;
					}
				});
			}

			if (isPeiLvTime && !isNaN(currentPMTime)) {
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistPL = true;
						return;
					}
				});
			}


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}

			var htmlListQPRight = '<table class="bettable" style="width:250px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th><th width="20%">最多</th><th width="20%">最少</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].ticketsw + '</td>';
				htmlListQPRight += '<td>' + maxValue + '</td>';
				htmlListQPRight += '<td>' + minValue + '</td>';
				htmlListQPRight += '</tr>';
			});
			htmlListQPRight += '</table>';
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);

			if (!isExistTicket) {
				var htmlTicket = '<table class="bettable" style="width:800px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlTicket += '<tr><th width="">30分前</th>';
							}else{
								htmlTicket += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlTicket += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							htmlTicket += '<th width="">' + ContentScript.getTicketByHourse(temp.Data, i) + '</th>';
						}
						htmlTicket += '</tr>';
					}
				});

				$("#divTicketCreate").empty();
				$("#divTicketCreate").append(htmlTicket);
			}

			if (!isExistPL) {
				var htmlPeiLv = '<table class="bettable" style="width:800px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlPeiLv += '<tr><th width="">30分前</th>';
							}else{
								htmlPeiLv += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlPeiLv += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
						}
						htmlPeiLv += '</tr>';
					}
				});
				console.log(1);
				$("#divPeilvCreate").empty();
				$("#divPeilvCreate").append(htmlPeiLv);
			}

		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		ContentScript.HtmlAddDragEvent($("#dragJSQ"));
		ContentScript.HtmlAddDragEvent($("#dragJSQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);


		ContentScript.timerSearch = self.setInterval(function() {

			var start = $("#startDiscount").val();
			var end = $("#endDiscount").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');

			var htmlList = '<table class="bettable" style="width:400px">';
			htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultFirst).each(function(index) {
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlList += '<tr style="line-height: 30px;">';
				htmlList += '<td>' + $(this)[0].hourse + '</td>';
				htmlList += '<td>' + $(this)[0].tickets + '</td>';
				htmlList += '</tr>';
			});

			htmlList += '</table><br/>';
			$("#divCreateQLeft").empty();
			$("#divCreateQLeft").append(htmlList);

			var htmlListQRight = '<table class="bettable" style="width:150px">';
			htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount;
				ContentScript.monitorJSQTimeData.push(item);

				var htmlJS = '<table class="bettable" style="width:800px">';
				htmlJS += '<tr><th width="65px">HK脚数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorJSQTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var tempHtml = "";
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							countList[i-1]=countList[i-1] + tempCount;
							if(parseInt(tempCount)>= parseInt($("#jsRedColor").val())){
								tempHtml += '<th width=""><font color="Red">' + tempCount + '</font></th>';
							}else{
								tempHtml += '<th width="">' + tempCount + '</th>';
							}
							
						}
						tempHtml += '</tr>';
					}
				});
				
				htmlJS += '<tr style="background-color:#fff68f" ><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJS += '<td style="background-color:#fff68f">' + countList[i-1] + '</td>';
			    }
				htmlJS += '</tr>';

				$("#divCreateJSQ").empty();
				$("#divCreateJSQ").append(htmlJS+tempHtml+'</table>');
			}

			$(hourseCount).each(function(index) {
				htmlListQRight += '<tr style="line-height: 30px;">';
				htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQRight += '</tr>';
			});
			$("#divCreateQRight").empty();
			$("#divCreateQRight").append(htmlListQRight);
		}, 1000);

		ContentScript.timerSearch = self.setInterval(function() {
			var start = $("#startDiscountQP").val();
			var end = $("#endDiscountQP").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultSecond = ContentScript.GetTransactionDataByArea('vrtFC_3', 'FC_DATA_3');

			var hourseCount1 = [];

			var htmlListQP = '<table class="bettable" style="width:400px">';
			htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			resultSecond.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultSecond).each(function(index) {

				var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount1).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount1.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount1.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlListQP += '<tr style="line-height: 30px;">';
				htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
				htmlListQP += '</tr>';
			});
			htmlListQP += '</table>';
			//$("#divCreateQPLeft").empty();
			//$("#divCreateQPLeft").append(htmlListQP);

			var htmlListQPRight = '<table class="bettable" style="width:150px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorJSQPTimeData.push(item);

                var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var htmlJS = '<table class="bettable" style="width:800px">';
				htmlJS += '<tr><th width="65px">HK脚数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorJSQPTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempHtml="";
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && !isNaN(temp.currentPMTime)) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							countList[i-1]= countList[i-1] + tempCount;
							tempHtml += '<th width="">' + tempCount + '</th>';
						}
						tempHtml += '</tr>';
					}
				});
				
				htmlJS += '<tr style="background-color:#fff68f"><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJS += '<td style="background-color:#fff68f">' + countList[i-1] + '</th>';
			    }
				htmlJS += '</tr>';

				//$("#divCreateJSQP").empty();
				//$("#divCreateJSQP").append(htmlJS+tempHtml+'</table>');
			}

			$(hourseCount1).each(function(index) {
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQPRight += '</tr>';
			});
			$("#divCreateQPRight").empty();
			$("#divCreateQPRight").append(htmlListQPRight);

		}, 1000);

	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] && parseInt(tempArray[3]) == 0) {
					isExists = true;
					if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[3]) == 0) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="display:none;background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="display:none;background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q下注统计</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQP" style="display:none;background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q脚数统计</h3>';
		htmlList += '<div id="divCreateJSQP" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}
    ]]>
    </JSCode>
  </JSFile>
  <JSFile>
    <version></version>
    <JSCode>
    <![CDATA[
            Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }

      ContentScript={
	      txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	      Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	      WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerWithOrderClock:null,
	      timerCountPageEatAndBet:null,
	      StaticAllData:[],
	      AlertMsg:"请输入密码",
	      AlertPassToLater:"软件过期",
	      PassError:"密码错误",
        SinglePath:false,
	      StaticOldAllData:[],
	      StaticCountShowData:[],
	      StaticOldCountShowData:[],
	      HelloKitty:"81dc9bdb52d04dc20036dbd8313ed055",
	      HelloKittyTime:["212112eece862ca4a3da112f217288fb","519edc8db508d1c088f793f2c3647e6f"],
	      DaoQiTime:"YYYY-MM-DD",
	      PageConfig:{
		      MaxCount:90,
		      Discount:80,
		      LimitStart:700,
		      LimitEnd:700,
		      Percent:1
	      },
	      showCountWithWhere:function(){
		      ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		      ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		      if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			      ContentScript.showCountPageEatAndBet();
		      }			
	      },
	      setLimitAndDiscount:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      if("WP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(82);
			      $("#LimitStart1").val(240);
			      $("#LimitEnd1").val(60);
			
			      $("#Discount2").val(82);
			      $("#LimitStart2").val(240);
			      $("#LimitEnd2").val(60);
		      }
		      if("QP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(400);
			      $("#LimitEnd1").val(400);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(400);
			      $("#LimitEnd2").val(400);
		      }
		      if("Q" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(700);
			      $("#LimitEnd1").val(700);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(700);
			      $("#LimitEnd2").val(700);
		      }
	      },
	      showCountPageEatAndBet:function(){
			      var CheckType = [];
			      var withType = $("input[name='orderType']:checked").val();
			      var eat =0;
			      var bet =0;
			      var betIds =[];
			      var eatIds =[];
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      $(ContentScript.StaticCountShowData).each(function(i){
				      if(CheckType.contains($(this)[0].type)){
					      if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						      bet++;
						      betIds.push($(this)[0].id);
					      }
					      if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						      eat++;
						      eatIds.push($(this)[0].id);
					      }
				      }
			      })
			      $("#eatCount").text(eat);
			      $("#betCount").text(bet);
		
	      },
	      getQPPLData:function(x,y){
		          try{
			          var len =0;
			          if(parseInt(x)>7 && parseInt(y)>8){
				          len = 13*(y-8)+(x-7);
			          }else{
				          len = 13*(x-1)+(y-1);
			          }
			          var result = $($("#frmTOTE2").find("td")[len-1]).text();
			          if(result=="" || result == "SCR" || isNaN(result)){
				          return 0;
			          }
			          return parseFloat(result);
		          }catch(e){
			          return 0;
		          }
	          },
	      getQPLData: function(x, y) {
			try {
				var len = 0;
				if (parseInt(x) > 7 && parseInt(y) > 8) {
					len = 13 * (y - 8) + (x - 7);
				} else {
					len = 13 * (x - 1) + (y - 1);
				}
				var result = $($("#frmTOTE").find("td")[len - 1]).text();
				if (result == "" || result == "SCR" || isNaN(result)) {
					return 0;
				}
				return parseFloat(result);
			} catch (e) {
				return 0;
			}
		},
		getWPPLDataList: function() {
			var result = [];
			$($("#tttbl td").find(".style22")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
			if (result.length == 0) {
				$($("#tttbl td").find(".style21")).each(function(index) {
					var item = {};
					item.pl1 = parseFloat($(this).parent().prev().text());
					item.pl2 = parseFloat($(this).parent().next().text());
					item.cc = $(this).text();
					item.type = "WP";
					result.push(item);
				});
			}
			return result;
		},
		getWPPLByHourse: function(data, hourse) {
			var peiLv = 0;
			$(data).each(function(item) {
				var temp = $(this)[0];
				if (parseInt(temp.cc) == parseInt(hourse)) {
					peiLv = temp.pl1;
					return;
				}
			});
			return peiLv;
		},
	      GetAllEatTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("E")>=0 && $(this)[0].type != 'DEmr'){
				      result.push($(this)[0]);
			      } 
		      });
		      return result;
	      },
	      GetAllBetTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("B")>=0 && $(this)[0].type != 'DBmr'){
				      result.push($(this)[0]);
			      }
		      });
		      return result;
	      },
	      GetAllDBmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DBmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPB";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QB";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      GetAllDEmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DEmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPE";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QE";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
          },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      MaxCountEvent:function(){
		      try{
			      ContentScript.PageConfig.MaxCount = $("#MaxCount").val();
		      }catch(e){
			      ContentScript.PageConfig.MaxCount = 90;
			      $("#MaxCount").val(90);
		      }
		
		      var type = $("input[name='DiscountType']:checked").val();
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.Discount = $("#Discount1").val();
			      }else{
				      ContentScript.PageConfig.Discount = $("#Discount2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.Discount = 80;
			      $("#Discount").val(80);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitStart = $("#LimitStart1").val();
			      }else{
				      ContentScript.PageConfig.LimitStart = $("#LimitStart2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitStart = 700;
			      $("#LimitStart").val(700);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd1").val();
			      }else{
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitEnd = 700;
			      $("#LimitEnd").val(700);
		      }
		
		      ContentScript.PageConfig.Percent = $("#Percent").val();
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      PrecentChangeEvent:function(){
		      $("#Percent").bind("change",function(){
			      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				      $("#btnBanlance").show();
			      }else{
				      $("#btnBanlance").hide();
			      }
			      ContentScript.PageConfig.Percent =$("#Percent").val();
		      });
	      },
	      allOnitEvent:function(){
		      //创建用户界面
						      ContentScript.CreateHtmlElement();
						      //绑定拖拽事件
						      ContentScript.HtmlAddDragEvent();
						      $("#daoqitime").text(ContentScript.DaoQiTime);
						      //限制投注数
						      ContentScript.MaxCountEvent();
						      //多倍控制
						      ContentScript.PrecentChangeEvent();
						      //统计吃票的计时器
						      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
						
						      $("#btnEnd").hide();
						      $("input[name='orderType']").bind("click",function(){
							      ContentScript.showCountPageEatAndBet();
							      ContentScript.setLimitAndDiscount();
						      });
						      //删单
						      $("#btnEatDelete").bind("click",function(){
							      $(this).hide();
							      var isExists = $(window.frames["frmTRANS"].document).find(".del2_ch");
							      if(isExists!=null && isExists!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del2_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      $("#btnBetDelete").bind("click",function(){
							      $(this).hide();
							      var isExistsDel = $(window.frames["frmTRANS"].document).find(".del_ch");
							      if(isExistsDel!=null && isExistsDel!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      //开始
						      $("#btnStart").bind("click",function(){
                      ContentScript.SinglePath = false;
							        ContentScript.StaticOldAllData = [];
							        ContentScript.StaticAllData = [];
							        $("#btnStart").hide();
							        $("#btnEnd").show();
							        ContentScript.MaxCountEvent();
							        //创建定时吃票事件
							        ContentScript.timerWithOrderClock = self.setInterval(function(){
							            var eatCount = $("#eatCount").text();
							            if(eatCount == ""){
							    	        eatCount = 0;
							            }else{
							    	        eatCount = parseInt(eatCount);
							            }
							            var MaxCount = parseInt($("#MaxCount").val());
							            if(eatCount >= MaxCount){
							    	        //到达限制数量 删除所有吃单
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
							            }
								        clearInterval(ContentScript.timerCountPageEatAndBet);
								        ContentScript.StaticOldAllData = ContentScript.StaticAllData
								        ContentScript.StaticAllData = ContentScript.GetAllHadTransactionData();
								        if(JSON.stringify(ContentScript.StaticOldAllData) != JSON.stringify(ContentScript.StaticAllData)){
									        if(ContentScript.SinglePath){
									 	        //nothing
									        }else{
										        ContentScript.StaticCountShowData = ContentScript.StaticAllData;
										        ContentScript.showCountPageEatAndBet();
										        ContentScript.needAjaxCount=ContentScript.getNeedWithOrderList();
										        ContentScript.withOrderOnInit(ContentScript.needAjaxCount,false);
									        }
									
								        }
								
								        var showTitle = "";
								        if(window.location.href.indexOf("playerhk.jsp")>=0){
									        showTitle = $("#newsLineByLoc").text();
								        }
								        if(window.location.href.indexOf("Q.jsp")>=0){
									        showTitle = $("#news1st").text();
								        }
								
								        if(((showTitle.indexOf("进闸完毕")>=0 
								           && showTitle.indexOf("准备开跑")>=0)||(showTitle.indexOf("剩 1")>=0))
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        var ret = 0;
									        try{
										        var regexp = /剩 [0-9]+/
										        var firststring = regexp.exec(showTitle);
										        var match = firststring[0].replace("剩","").replace(" ","")
										        ret= parseInt(match);
									        }catch(e){
										        ret = 1	
									        }
									        if(ret==1){
										        ContentScript.SinglePath = true;
										        //先删除所有没有成交的数据
										        setTimeout(function(){
											        ContentScript.EatButtonEvent();
										        },0);
										        setTimeout(function(){
											        ContentScript.BetButtonEvent();
										        },0);
										        //然后100%的平仓数据交易
										        setTimeout(function(){
											        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										        },1000);
										
										        //平仓后结束
										        if(ContentScript.timerWithOrderClock!=null){
											        clearInterval(ContentScript.timerWithOrderClock);
										        }
										        ContentScript.timerWithOrderClock = null;
										        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
										        $("#btnStart").show();
										        $("#btnEnd").hide();
									        }
								        }
								        if((showTitle.indexOf("剩 2")>=0 ||  showTitle.indexOf("剩 3")>=0)
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        ContentScript.SinglePath = true;
								        }
							        },1000);
						      });
						
						      //结束
						      $("#btnEnd").bind("click",function(){
							      if(ContentScript.timerWithOrderClock!=null){
								      clearInterval(ContentScript.timerWithOrderClock);
							      }
							      ContentScript.timerWithOrderClock = null;
							      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							      $("#btnStart").show();
							      $("#btnEnd").hide();
						      });
						
						      //平仓
						      $("#btnBanlance").bind("click",function(){
							        if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
									        //平仓后结束
									        if(ContentScript.timerWithOrderClock!=null){
										        clearInterval(ContentScript.timerWithOrderClock);
									        }
									        ContentScript.timerWithOrderClock = null;
									        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
									        $("#btnStart").show();
									        $("#btnEnd").hide();
									
									        $(this).hide();
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        setTimeout(function(){
										        ContentScript.BetButtonEvent();
									        },0);
									        //然后100%的平仓数据交易
									        setTimeout(function(){
										        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
									        },1000);
									        $(this).show();
							        }else{
								        alert("平仓功能只能在倍率是1的情况下使用！");
							     }
						});
				
	      },
        checkPingCangHouDataValidation:function(){
		      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
			      if($($(this).find(".del_ch").parent().parent()).find("td").eq(4).text()!="100"){
				      return false;
			      }
		      });
		      return true;
	      },
	      getNeedWithOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllTransactionData();
			      var notCommitBetList=[];
			      var returnEatList=[];
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      it.x = parseInt(it.x)*parseInt($("#Percent").val())
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      returnEatList.push(it);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					      if($(this)[0].type =="DBmr"){
						      var it = $(this)[0];
						      var hadCount = false;
						      $(notCommitBetList).each(function(i){
							      if(it.id==$(this)[0].id){
								      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								      hadCount = true;
							      }
						      });
						      if(!hadCount){
							      notCommitBetList.push(allList[index]);
						      }
					      }
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      $(notCommitBetList).each(function(){
						      if(item.id==$(this)[0].id){
							      returnEatList[i].x = item.x-$(this)[0].x
						      }
					      });
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      });
			      }			
			
			      $(returnList).each(function(index){
				      $(this)[0].type = $(this)[0].type.replace("E","B");
			      });
			      return returnList;
		      }else{
			      return [];
		      }
	      },
	      getNeedPingCangOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllHadTransactionData();
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      var returnEatList=[];
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x);
									      returnEatList.push(allList[index]);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					
				      });
				
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      })
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				      return returnList;
			      }
		      }else{
			      return [];
		      }
	      },
	      ticketByFloat:function(item,type){
		      var result = 0;
		      if(type=="Q"){
			      result = item;
		      }else{
			      if(item==0){
				      result = 0;
			      }else{
				      if(item%5 !=0){
					      result = item + (5 - item%5);
				      }else{
					      result = item;
				      }
			      }
		      }
		      return result
	      },
	      withOrderOnInit:function(pushData,isBalance){
		      //真实的跟单操作
		      $(pushData).each(function(i){
			      var item = $(this)[0];
			      if(true){
				      var signInfo = ContentScript.GetSignInInfo();
				      if(['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'].contains(item.type)){
							      var postData = {};
							      postData.task = "betBox";
							      postData.combo =0;
							      //<td>6</td>
							      //<td class="RD F_B">FC</td>
							      //<td class="F_B ">4-5</td>
							      //<td id="FCE_6_4-5_100_700x">2</td>
							      //<td id="FCE_6_4-5_100_700y">100</td>
							      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
							      //<td class="">吃</td>
							
							      postData.Tix =  ContentScript.ticketByFloat(parseInt(item.x),"Q");
							      postData.Race = parseInt(item.matches);
							      var hourse1,hourse2;
							      //如果含有括号特殊处理一下
							      if(item.fb.indexOf("(")<0){
								      hourse1 = item.fb.split("-")[0];
								      hourse2 = item.fb.split("-")[1];
								      postData.fctype = 0;
							      }else{
								      hourse1 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
								      hourse2 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
								      postData.fctype = 1;
							      }
							      postData.Hs1 = hourse1;
							      postData.Hs2 = hourse2;
							      postData.Hs3 = "";
							      postData.Hs4 = "";
							      postData.Hs5 = "";
							      postData.Hs6 = "";
							      postData.Hs7 = "";
							      postData.Hs8 = "";
							      //postData.fctype = 0;
							      postData.Q = "Q";
							      if(item.type.indexOf("E")>=0){
								      postData.type = "EAT";
							      }else{
								      postData.type = "BET";
							      }
							
							      if(isBalance){
								      postData.amount = 100;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							      
							      if(isBalance){
							      	postData.fclmt = ContentScript.PageConfig.LimitStart;
							      }else{
							      	  var currentPL = 0
								      if(postData.fctype==1){
								      	currentPL = ContentScript.getQPLData(hourse1,hourse2);
								      }else{
								      	currentPL = ContentScript.getQPLData(hourse1,hourse2);
								      }
								      var limitStart = 700;
								      if(parseFloat(currentPL)>=50){
								      	limitStart =700;
								      }
								      if(parseFloat(currentPL)>=45 && parseFloat(currentPL)< 50){
								      	limitStart =650;
								      }
								      if(parseFloat(currentPL)>=35 && parseFloat(currentPL)< 45){
								      	limitStart =600;
								      }
								      if(parseFloat(currentPL)>=25 && parseFloat(currentPL)< 35){
								      	limitStart =500;
								      }
								      if(parseFloat(currentPL)>=20 && parseFloat(currentPL)< 25){
								      	limitStart =400;
								      }
								      if(parseFloat(currentPL)< 20){
								      	limitStart =350;
								      }
								      postData.fclmt = limitStart;
							      }
								
							      postData.overflow = "1";
							      //postData.amount = "100";
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							      postData.rd = Math.random();
							
							      console.log(postData);
							      ///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX +"/forecast",
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
						      } 
				      if(['WPB','WPE','WB','WE','PB','PE'].contains($(this)[0].type)){
					
							      var postURL = "";
							      var postData = {};
							      postData.t = "frm";
							      postData.race = item.matches;
							      postData.horse = item.rdfb;
							      //var Proportion = parseInt(ContentScript.PageConfig.Percent);
							      postData.win = ContentScript.ticketByFloat(parseInt(item.fb),"WP");
							      postData.place = ContentScript.ticketByFloat(parseInt(item.x),"WP");
							
							      var postURL ="";
							      postURL ="/bets";
							      //if(item.type.indexOf("E")>=0){
							      //postData.type = "eat";
							      //postURL ="/bets";
							      //}else{
							      //postData.type = "bet";
							      //postURL = "/bookings";
							      //}
							
							      if(isBalance){
								      postData.amount = 99;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							
							      //postData.limit = ContentScript.PageConfig.LimitStart+"/"+ ContentScript.PageConfig.LimitEnd;
							      
							      postData.l_win = ContentScript.PageConfig.LimitStart;
							      postData.l_place = ContentScript.PageConfig.LimitEnd;
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							
							      if(parseInt(postData.win)>0 && parseInt(postData.place)>0){
								      postData.wptck=1;
							      }else{
								      postData.wptck=0;
							      } 
							      if(parseInt(postData.win)>0 && parseInt(postData.place)==0){
								      postData.wtck=1;
								      postData.l_place = "0";
							      }
							      if(parseInt(postData.win)==0 && parseInt(postData.place)>0){
								      postData.ptck=1;
								      postData.l_win = "0";
							      }
							
							      postData.post = "1";
							      postData.rd = Math.random();
							      console.log(postData);
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX + postURL,
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
					      }
			      }
		      });
	      },
	      GetAllTransactionData:function(){
		      var result = [];
		      //<td>6</td>
		      //<td class="RD F_B">FC</td>
		      //<td class="F_B ">4-5</td>
		      //<td id="FCE_6_4-5_100_700x">2</td>
		      //<td id="FCE_6_4-5_100_700y">100</td>
		      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		      //<td class="">吃</td>
		
		      //<td>2</td>
		      //<td class="F_B">4</td>
		      //<td id="PE_2_4_78_0/16_0x">0</td>
		      //<td id="PE_2_4_78_0/16_0y">5</td>
		      //<td id="PE_2_4_78_0/16_0z">78</td>
		      //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		      //<td class="">吃</td></tr>
		
		      $(ContentScript.txn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	      GetAllHadTransactionData:function(){
		      var result = [];
		      $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2];
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 330px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span>&nbsp;按赔率变动极限</h3>';
              htmlList +='<table style="width:100%">';
              htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
              htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
              htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
              htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
              htmlList +='&nbsp;&nbsp;限注:<input id="MaxCount" type="number" step="1" style="width: 40px;" size="4" value="300" />';
              htmlList +='&nbsp;倍率:<select id="Percent"><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>20</option><option>50</option><option>100</option></select>';
              //htmlList +='&nbsp;倍率:<input id="Percent" type="number" step="0.1" value="1" style="width: 40px;" size="4">';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">'
              htmlList +='<input type= "radio" name="DiscountType"  value="F1" checked="checked" id="DiscountType1"/>'
              htmlList +='折头:<input id="Discount1" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">';
              htmlList +='<input type= "radio" name="DiscountType" value="F2" id="DiscountType2"/>';
              htmlList +='折头:<input id="Discount2" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;<input id="AutoPingCang" type="checkbox" value="1" />自动平仓'
              //htmlList +='比例:<input id="Percent" type="number" step="1" style="width: 40px;" size="4" value="1" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
              htmlList +='吃:<span id="eatCount" style="color:red"></span>&nbsp;赌:<span id="betCount" style="color:red" ></span>&nbsp;';
              htmlList +='</td><td style="text-align:right">';
              htmlList +='<input type="button" id="btnStart" value="开始" />';
              htmlList +='<input type="button" id="btnEnd" value="停止" />';
              htmlList +='<input type="button" id="btnBanlance" value="平仓" />';
              htmlList +='<input type="button" id="btnEatDelete" value="删吃单" />';
              htmlList +='<input type="button" id="btnBetDelete" value="删赌单" />';
              htmlList +='</td></tr>';
              htmlList +='</table>';
              htmlList += '</div>';
        
              $("body").append(htmlList);
	      },
	      EatButtonEvent:function(){
            var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
            if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
			      var obj = $(window.frames["frmTRANS"].document).find(".del2_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
      		      PostHelp.AjaxDeleteData(obj);
      	      }
        },
        BetButtonEvent:function(){
      	    var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
      	    if(greenList!=null && greenList!=undefined && greenList.length>0 ){
			        var obj = $(window.frames["frmTRANS"].document).find(".del_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
			        PostHelp.AjaxDeleteData(obj);
      	    }
        },
	      HtmlAddDragEvent:function(){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  $("#drag").click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt($("#drag").css("left"));
                      _y = e.pageY - parseInt($("#drag").css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          $("#drag").css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }

      PostHelp={
	      urlX: "http://"+window.location.host,
	      fcfrm1 :  $("#fcfrm1"),
	      fcfrm2 :  $("#fcfrm2"),
	      chkKBBet:function(f){
		      f = PostHelp.fcfrm1;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB1(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB3(f);
		      }
	      },
          chkKBEat:function(f){
		      f = PostHelp.fcfrm2;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB2(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB4(f);
		      }
	      },
          chkKB1:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		         && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val();
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined	
			      ){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
          chkKB2:function(f){
		      f=PostHelp.fcfrm2;
		      var combo=f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }	
			      if(hss=="")
			      {
				      hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
          chkKB3:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			      && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val()
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined
			      ){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }			
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
	      chkKB4:function(f){
		      f=PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }		
			      if(hss=="")
			      {
				      hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
	      chkActBet:function(f){
		      f = PostHelp.fcfrm1;
		      var combo;
		      var check = f.find("input[name='banker1'] :checked");
		      if(check) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );	
		      }
	      },
	      chkActEat:function(f){
		      f = PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );
		      }
	      },
	      postData:function(url){
		      var view1 = $("#view1");
		      if(view1) {
				      var y = $("#view1").val();
				      var postion = url  + "&show="+y+ "&rd=" + Math.random();
				      var postionArray = postion.split("?");
				      var postUrl = postionArray[0];
				      var dataUrl = postionArray[1];
				      var dataArray = dataUrl.split('&');
				      var postString ='{';
				      for(var i=0;i< dataArray.length;i++){
					      var itemArray = dataArray[i].split('=');
					      postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				      }
				      postString = postString.substr(0,postString.length-1);
				      postString+='}';
				      var dataJson = $.parseJSON(postString);
				      $.ajax(
				      {
		                   type: "GET",
		                   url: postUrl,		             
		                   data: dataJson,
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }
	     		      });
		      }
	      },
	      PostDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      document.getElementById('boxFcBET').style.display = "none";
		      document.getElementById('boxFcEAT').style.display = "none";
		      document.getElementById('boxPfcBET').style.display = "none";
		      document.getElementById('boxPfcEAT').style.display = "none";
		      PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	      },
	      AjaxDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      var y = 0;
		      try{
			      y = view1.options[view1.selectedIndex].value;
		      }catch(e){
			      y = $(".dd-selected-value").val();
		      }
		
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      $.ajax(
				      {
		                   type: "GET",
		                   url: PostHelp.urlX +"/transactions",		             
		                   data: {
		             	      "type":"del",
		             	      "bid":id,
		             	      "x":x,
		             	      "betType":type,
		             	      "race_date":date,
		             	      "race_type":race_type,
		             	      "q":"q",
						      "race":race,
						      "show":y,
						      "rd":Math.random()
		                   },
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }   
	   				 
	           });
	      }
      }

      var host =window.location.href;
      if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
    ]]>
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V611</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	monitorTicketTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorPLTimeList: [2400,1800, 0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorJSTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER <= 30 && TIMER > 20) {
			return 1800;
		}
		if (TIMER <= 20 && TIMER > 15) {
			return 1200;
		}
		if (TIMER <= 15 && TIMER > 10) {
			return 900;
		}
		if (TIMER <= 10 && TIMER > 7) {
			return 600;
		}
		if (TIMER <= 7 && TIMER > 5) {
			return 420;
		}
		if (TIMER <= 5 && TIMER > 3) {
			return 300;
		}
		if (TIMER <= 3 && TIMER > 2) {
			return 180;
		}
		if (TIMER <= 2 && TIMER > 1) {
			return 120;
		}
		if (TIMER <= 1 && TIMER > 0) {
			return 60;
		}
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER > 0 && TIMER<=30) {
			return 1800;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));

		var htmlList1 = '<div id="ticket" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList1 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢票数统计</span></h3>';
		htmlList1 += '<div id="divTicketCreate"></div>'
		htmlList1 += '</div>';
		$("body").append(htmlList1);
		ContentScript.HtmlAddDragEvent($("#ticket"));

		var htmlList2 = '<div id="peilv" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList2 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢赔率统计</span></h3>';
		htmlList2 += '<div id="divPeilvCreate"></div>'
		htmlList2 += '</div>';
		$("body").append(htmlList2);
		ContentScript.HtmlAddDragEvent($("#peilv"));

		self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if (isTicketTime &&  !isNaN(currentPMTime)) {
				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistTicket = true;
						return;
					}
				});
			}

			if (isPeiLvTime && !isNaN(currentPMTime)) {
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistPL = true;
						return;
					}
				});
			}


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
			var htmlListQPRight = '<table class="bettable" style="width:250px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th><th width="20%">最多</th><th width="20%">最少</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].ticketsw + '</td>';
				htmlListQPRight += '<td>' + maxValue + '</td>';
				htmlListQPRight += '<td>' + minValue + '</td>';
				htmlListQPRight += '</tr>';
			});
			htmlListQPRight += '</table>';
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);

			if (!isExistTicket) {
				var htmlTicket = '<table class="bettable" style="width:800px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlTicket += '<tr><th width="">30分前</th>';
							}else{
								htmlTicket += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlTicket += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							htmlTicket += '<th width="">' + ContentScript.getTicketByHourse(temp.Data, i) + '</th>';
						}
						htmlTicket += '</tr>';
					}
				});

				$("#divTicketCreate").empty();
				$("#divTicketCreate").append(htmlTicket);
			}

			if (!isExistPL) {
				var htmlPeiLv = '<table class="bettable" style="width:800px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

                var FirstTemp=[];
                var HadChangeTime = true;
                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
                if(LastData.currentPMTime<=420){
                	FirstTemp = LastData.Data;
                }else{
                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
                		HadChangeTime = false;
                	}else{
                		$(ContentScript.monitorPLTimeData).each(function(item){
                			var temp = $(this)[0];
                			if(temp.currentPMTime==420){
                				FirstTemp = temp.Data;
                				return;
                			}
                		});
                	}
                }
                
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlPeiLv += '<tr><th width="">30分前</th>';
							}else{
								htmlPeiLv += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlPeiLv += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							if(HadChangeTime){
								if(temp.currentPMTime>420){
									htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
								}else{
									var currentValue = ContentScript.getWPPLByHourse(temp.Data, i);
									var firstValue = ContentScript.getWPPLByHourse(FirstTemp, i);
									if(currentValue!=0&& firstValue!=0 && parseFloat(currentValue) <= (parseFloat(firstValue)*0.9) && parseFloat(currentValue) > (parseFloat(firstValue)*0.75)){
									    htmlPeiLv += '<th width=""><font color="orange">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</font></th>';
									}
									else if(currentValue!=0 && firstValue!=0 && parseFloat(currentValue) <= (parseFloat(firstValue)*0.75)){
										htmlPeiLv += '<th width=""><font color="red">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</font></th>';
									}
									else{
										htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
									}
								}
								
							}else{
								htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
							}
						}
						htmlPeiLv += '</tr>';
					}
				});
				console.log(1);
				$("#divPeilvCreate").empty();
				$("#divPeilvCreate").append(htmlPeiLv);
			}

		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		ContentScript.HtmlAddDragEvent($("#dragJSQ"));
		ContentScript.HtmlAddDragEvent($("#dragJSQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);


		ContentScript.timerSearch = self.setInterval(function() {

			var start = $("#startDiscount").val();
			var end = $("#endDiscount").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');

			var htmlList = '<table class="bettable" style="width:400px">';
			htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultFirst).each(function(index) {
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlList += '<tr style="line-height: 30px;">';
				htmlList += '<td>' + $(this)[0].hourse + '</td>';
				htmlList += '<td>' + $(this)[0].tickets + '</td>';
				htmlList += '</tr>';
			});

			htmlList += '</table><br/>';
			$("#divCreateQLeft").empty();
			$("#divCreateQLeft").append(htmlList);

			var htmlListQRight = '<table class="bettable" style="width:150px">';
			htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount;
				ContentScript.monitorJSQTimeData.push(item);
				
				ContentScript.monitorJSQTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var zeroDataList = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var zeroMaxDataList = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var tempHtml = "";
				var has5Min= false;
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						
						for (var i = 1; i <= 14; i++) {
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							if(temp.currentPMTime ==300){
								zeroDataList[i-1]=zeroDataList[i-1] + tempCount;
								has5Min = true;
							}
							if(temp.currentPMTime<300){
								if(zeroMaxDataList[i-1] < tempCount){
									zeroMaxDataList[i-1]= tempCount;
								}
							}
							countList[i-1]=countList[i-1] + tempCount;
							if(parseInt(tempCount)>= parseInt($("#jsRedColor").val())){
								tempHtml += '<th width=""><font color="Red">' + tempCount + '</font></th>';
							}else{
								tempHtml += '<th width="">' + tempCount + '</th>';
							}
							
						}
						
						tempHtml += '</tr>';
					}
				});
				
				var htmlJS = '<table class="bettable" style="width:800px">';
				htmlJS += '<tr id="JSheader"><td width="65px">HK脚数</td>';
				
				for (var i = 1; i <= 14; i++) {
					if(has5Min && zeroMaxDataList[i-1]>=(zeroDataList[i-1]+2)){
						htmlJS += '<td style="background-color:#00FF00;">' + i + '</td>';
					}else
					{
						htmlJS += '<td>' + i + '</td>';
					}
				}
				
				var htmlJSCount ="";
				htmlJSCount += '<tr style="background-color:#fff68f" ><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f">' + countList[i-1] + '</td>';
			    }
				htmlJSCount += '</tr>';

				$("#divCreateJSQ").empty();
				$("#divCreateJSQ").append(htmlJS + htmlJSCount +tempHtml+'</table>');
			}

			$(hourseCount).each(function(index) {
				htmlListQRight += '<tr style="line-height: 30px;">';
				htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQRight += '</tr>';
			});
			$("#divCreateQRight").empty();
			$("#divCreateQRight").append(htmlListQRight);
		}, 1000);

		ContentScript.timerSearch = self.setInterval(function() {
			var start = $("#startDiscountQP").val();
			var end = $("#endDiscountQP").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultSecond = ContentScript.GetTransactionDataByArea('vrtFC_3', 'FC_DATA_3');

			var hourseCount1 = [];

			var htmlListQP = '<table class="bettable" style="width:400px">';
			htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			resultSecond.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultSecond).each(function(index) {

				var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount1).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount1.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount1.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlListQP += '<tr style="line-height: 30px;">';
				htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
				htmlListQP += '</tr>';
			});
			htmlListQP += '</table>';
			//$("#divCreateQPLeft").empty();
			//$("#divCreateQPLeft").append(htmlListQP);

			var htmlListQPRight = '<table class="bettable" style="width:150px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorJSQPTimeData.push(item);

                var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var htmlJS = '<table class="bettable" style="width:800px">';
				htmlJS += '<tr><th width="65px">HK脚数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorJSQPTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempHtml="";
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && !isNaN(temp.currentPMTime)) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							countList[i-1]= countList[i-1] + tempCount;
							tempHtml += '<th width="">' + tempCount + '</th>';
						}
						tempHtml += '</tr>';
					}
				});
				
				htmlJS += '<tr style="background-color:#fff68f"><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJS += '<td style="background-color:#fff68f">' + countList[i-1] + '</th>';
			    }
				htmlJS += '</tr>';

				//$("#divCreateJSQP").empty();
				//$("#divCreateJSQP").append(htmlJS+tempHtml+'</table>');
			}

			$(hourseCount1).each(function(index) {
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQPRight += '</tr>';
			});
			$("#divCreateQPRight").empty();
			$("#divCreateQPRight").append(htmlListQPRight);

		}, 1000);

	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100" || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100"  || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="display:none;background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="display:none;background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q下注统计</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQP" style="display:none;background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q脚数统计</h3>';
		htmlList += '<div id="divCreateJSQP" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V700</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	handerTicketList:['日','60分','30分'],
	handerJSList:['日','60分','30分'],
	handerPLHeadList:['日','60分','15分'],
	handerPLFooterList:['10%','25%'],
	
	handerPLDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerTicketDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSEndData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	resultPL3Yellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPL1MinYellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultJSCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	tempJSHtml:"",
	tempTicketHtml:"",
	tempPLHtml:"",
	ChangePervChangCi:0,
	monitorTicketTimeList: [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorPLTimeList: [900,300,60],
	monitorJSTimeList:     [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			//,0,-30,-50,-70,-90
			if(resultValue<=0 && resultValue>-360){
				if (resultValue >-30  && resultValue<=0) {
					return 0;
				}
				if (resultValue >-50  && resultValue<=-30) {
					return -30;
				}
				if (resultValue >-70  && resultValue<=-50) {
					return -50;
				}
				if (resultValue >-90  && resultValue<=-70) {
					return -70;
				}
				if (resultValue<=-90) {
					return -90;
				}
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		
		if (TIMER > 15 && TIMER<=20) {
			return 1200;
		}
		
		if (TIMER > 10 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 7 && TIMER<=10) {
			return 600;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 3 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER > 2 && TIMER<=3) {
			return 180;
		}
		
		if (TIMER > 1 && TIMER<=2) {
			return 120;
		}
		
		if (TIMER<=1) {
			return 60;
		}
		
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return 0;
			}
			return 0;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 5 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 1 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER<=1) {
			return 60;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		ContentScript.CreateHtmlElementPage();

		self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if(isTicketTime==false){
				isExistTicket=true;
			}else{
				if (isTicketTime &&  !isNaN(currentPMTime)) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistTicket = true;
							return;
						}
					});
				}
			}

			if(isPeiLvTime==false){
				isExistPL=true;
			}else{
				if (isPeiLvTime && !isNaN(currentPMTime)) {
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistPL = true;
							return;
						}
					});
				}
			}
			


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
            
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
			});
			
			
				var htmlTicket = '<table id="HKTicket" class="gridtable" style="width:900px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketDataOneDay[i-1] + '</td>';
				}
				htmlTicket += '<td>日</td></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData60Min[i-1] + '</td>';
				}
				htmlTicket += '<td>60</td></tr>';
				
				htmlTicket += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData30Min[i-1] + '</td>';
				}
				htmlTicket += '<td>30</td></tr>';
				
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempTicket="";
				if (!isExistTicket) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempTicket += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempTicket += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempTicket += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempTicket += '<td width="50px">' + ContentScript.getTicketByHourse(temp.Data, i) + '</td>';
							}
							tempTicket += '<td></td></tr>';
						}
					});
					ContentScript.tempTicketHtml = tempTicket;
				}

				$("#divCreateTicket").empty();
				$("#divCreateTicket").append(htmlTicket+ContentScript.tempTicketHtml);
			

			
				var htmlPeiLv = '<table id="HKPL" class="gridtable" style="width:900px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLDataOneDay[i-1] + '</td>';
				}
				htmlPeiLv += '<td>日</td></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData60Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>60</td></tr>';
				
				htmlPeiLv += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData30Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>30</td></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
                var tempPL = "";
                if (!isExistPL) {
                	var FirstTemp=[];
	                var HadChangeTime = true;
	                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
	                if(LastData!=undefined && LastData!=null){
	                	if(LastData.currentPMTime<=420){
		                	FirstTemp = LastData.Data;
		                }else{
		                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
		                		HadChangeTime = false;
		                	}else{
		                		$(ContentScript.monitorPLTimeData).each(function(item){
		                			var temp = $(this)[0];
		                			if(temp.currentPMTime==420){
		                				FirstTemp = temp.Data;
		                				return;
		                			}
		                		});
		                	}
		                }
	                }
	                
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempPL += '<tr class="count"><td width="50px">30分前</th>';
								}else{
									tempPL += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempPL += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempPL += '<td width="50px">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</td>';
							}
							tempPL += '<td></td></tr>';
						}
					});
					ContentScript.tempPLHtml = tempPL;
				}
				
				var htmlPeiLv2="";
				htmlPeiLv2 += '<tr id="line10"><td width="65px">10%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2+='<td></td></tr>';
				
				htmlPeiLv2 += '<tr id="line25"><td width="65px">25%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2 +='<td></td></tr>';
				
				console.log(1);
				$("#divCreatePL").empty();
				$("#divCreatePL").append(htmlPeiLv+ContentScript.tempPLHtml+htmlPeiLv2);
			
			ContentScript.createPLColor();
			ContentScript.createTicketColor();
			//ContentScript.createResultHtml();
		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	createPLColor:function(){
		var data = $("#HKPL").find(".count td");
		var change10 =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var change25=  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var plFirst = ContentScript.handerPLDataOneDay;
		var has5Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			var val = parseFloat($(this).text())
			
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					pl[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(has5Data && line>0 && item>=1 && item<=14){
				if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
					change10[item-1]=1;
				}
				if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
					change25[item-1]=1;
				}
			}
			if(line<=2 && item>=1 && item<=14){
				if(line==0){
					var nextLine = parseFloat($(data[index+16]).text());
					var nextLine2 = parseFloat($(data[index+32]).text());
					if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
						$(this).css("background-color","orange");
						$(data[index+16]).css("background-color","orange");
						$(data[index+32]).css("background-color","orange");
						ContentScript.resultPL3Yellow[item-1]=1;
					}
				}
			}
			
			if(line>2 && item>=1 && item<=14){
				if(plFirst[item-1]>val && val>0){
					$(this).css("background-color","orange");
				}
				if(item==0 && $(this).text()=="1"){
					ContentScript.resultPL1MinYellow[item-1]=1;
				}
			}
			index++;
		} );
		
		$("#line10").find("td").each(function(index){
			if(index>=1 && index<=14){
				if(change10[index-1]>0){
					$(this).css("background-color","orange");
				}else{
					$(this).css("background-color","");
				}
			}
			index++;
		});
		
		$("#line25").find("td").each(function(index){
			if(index>=1 && index<=14){
				if(change25[index-1]>0){
					ContentScript.resultPLCount[index-1] = 1;
					$(this).css("background-color","red");
				}else{
					$(this).css("background-color","");
				}
			}
			index++;
		});
		
		for(var item=0;item<14;item++){
			if(ContentScript.resultPL3Yellow[item]>0 && ContentScript.resultPL1MinYellow[item]>0){
				ContentScript.resultPLCount[item]=1;
			}
		}
	},
	createTicketColor:function(){
		var data = $("#HKTicket").find(".count td");
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		var lineMax = ContentScript.getLineMaxValue(data);
		$(data).each(function(index){
			var line = parseInt(index/16);
			var item = index%16;
			var val = parseFloat($(this).text())
			if(item>=1 && item<=14){
				if(lineMax[line]<=val && val>0){
					$(this).css("background-color","orange");
				}
			}
			index++;
		});
	},
	getLineMaxValue:function(obj){
		var retVal = [];
		var line = parseInt(obj.length/16);
		for(var i=0;i<line;i++){
			var lineMax=0;
			for(var j=0;j<16;j++){
			  if(j>=1 && j<=14){
			  	  var temp = parseFloat($(obj[i*16+j]).text());
				  if(temp>lineMax){
				  	lineMax= temp;
				  }
			  }
			}
			retVal.push(lineMax);
		}
		return retVal;
	},
	createResultHtml:function(){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th></tr>';
		var masterList=[];
		for(var item=0;item<14;item++){
			if(ContentScript.resultPLCount[item]>0 && ContentScript.resultJSCount[item]>=4){
				masterList.push(item+1);	
			}
		}
		var resultList =[];
		var jsList=[];
		var countMa =0;
		if(masterList.length>0){
			for(var i=0;i<masterList.length;i++){
				for(var j=0;j<14;j++){
					if(ContentScript.resultJSCount[j]>0){
						jsList.push(ContentScript.resultJSCount[j]);
						if(masterList[i]!=j+1){
							var item ={"hourse1":masterList[i],"hourse2":j+1,"countJS":ContentScript.resultJSCount[j]}
							resultList.push(item);	
							countMa+=ContentScript.resultJSCount[j];
						}
					}
				}
			}
			
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this).hourse1 + '-' + $(this).hourse2 +'</td><td>'+ $(this).countJS +'</td></tr>';
			});
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td></tr>';
			
			$("#divShowResult").empty();
		    $("#divShowResult").append(htmlJS +'</table>');	
		}
	},
	createJSColor:function(){
		var data = $("#HKJS").find(".count td");
		//统计每个马的总数
		var countLine = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var countLineSort = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var dengData =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var lineMax = ContentScript.getLineMaxValue(data);
		var has5Data=false;
		var has1Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			if(item>=1 && item<=14){
				var val = parseFloat($(this).text())
				countLine[item-1] += val ;
				countLineSort[item-1] += val ;
				// 如果有5分钟的基数的时候
				if(has5Data){
					if(min5Line[item-1]+2 <= val){
						dengData[item-1]= val;
					}
				}
				// 如果有1分钟的基数的时候
				if(has1Data){
					if(ContentScript.resultJSCount[item-1] < val){
						ContentScript.resultJSCount[item-1]= val;
					}
				}
				
				//最大显示黄色
				if(lineMax[line]<=val && val >0){
					$(this).css("background-color","orange");
				}
			}
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					min5Line[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(item==0 && $(this).text()=="1"){
				has1Data =true;
				for(var i=1;i<=14;i++){
					ContentScript.resultJSCount[i-1]= parseFloat($(data[index+i]).text());	
				}
			}
			
			index++;
		});
		countLineSort.sort(function(a,b){return a>b?1:-1});;
		//显示统计 并且排名前3的显示黄色背景
	    $("#countJS").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(countLine[index-1] >0 && countLineSort[11]<=countLine[index-1]){
	    			$(this).text(countLine[index-1]).css("background-color","orange")
	    		}else{
	    			$(this).text(countLine[index-1]).css("background-color","")
	    		}
	    	}
	    	index++;
	    });
		//显示灯  以5分钟为基数 超过两个的显示绿色 background-color:#00FF00;
		$("#deng").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(dengData[index-1]>0){
	    			$(this).css("background-color","#00FF00")
	    		}
	    	}
	    	index++;
	  });
	},
	allOnitEvent: function() {
		ContentScript.timerSearch = self.setInterval(function() {
			var resultFirst;
			var signInfo = ContentScript.GetSignInInfo();
			var itemName = "a"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
			if (host.indexOf("Q.jsp") >= 0) {
				resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');
				var postData = {};
	            
	            postData.race_type = signInfo.RaceType;
				postData.race_date = signInfo.RaceDate;
				postData.Data = resultFirst;
				
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					localStorage.setItem(itemName,JSON.stringify(postData));
				}else{
					localStorage.setItem(itemName,JSON.stringify(postData));
				}
			}else{
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					resultFirst=null;
				}else{
					resultFirst = $.parseJSON(localStorage.getItem(itemName)).Data;
					ContentScript.createJSHtml(resultFirst);
					ContentScript.createJSColor();
				}
			}
            
            if(resultFirst==null || resultFirst==undefined ){
            	return;
            }
			return;
		}, 1000);
	},
	createJSHtml:function(resultFirst){
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse ==null || $(this)[0].hourse == undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}
			});

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;
			
			if(isExistsJSTime==false){
				isExistJS =true;
			}else{
				if (isExistsJSTime) {
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistJS = true;
							return;
						}
					});
				}
			}
				
				if (!isExistJS) {
					var item = {};
					item.changchi = cchi;
					item.currentPMTime = currentPMTime;
					item.Data = hourseCount;
					ContentScript.monitorJSQTimeData.push(item);
					
					ContentScript.monitorJSQTimeData.sort(function(a, b) {
						return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
					});
					
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								tempHtml += '<td width="50px">' + tempCount + '</td>';
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				
				var htmlJS = '<table id="HKJS" class="gridtable" style="width:900px">';
				htmlJS += '<tr><th width="65px">HK脚数</th>';
				
				for (var i = 1; i <= 14; i++) {
					htmlJS += '<th width="50px">' + i + '</th>';
				}
				htmlJS += '<th></th></tr>'
				
				var HeardHtml = '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSDataOneDay[i-1] + '</td>';
				}
				HeardHtml += '<td>日</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData60Min[i-1] + '</td>';
				}
				HeardHtml += '<td>60</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData30Min[i-1] + '</td>';
				}
				HeardHtml += '<td>30</td></tr>';
				
				
				var htmlJSCount ="";
				htmlJSCount += '<tr id="countJS" style="background-color:#fff68f" ><td style="background-color:#fff68f">合脚</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f"></td>';
			    }
				htmlJSCount += '<td >合脚</td></tr>';
				
				
				var htmlJSDeng ="";
				htmlJSDeng += '<tr id="deng" style="background-color:#fff68f" ><td style="background-color:#fff68f">灯</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSDeng += '<td >  </td>';
			    }
				htmlJSDeng += '<td style="background-color:#fff68f">灯</td></tr>';
				
				var htmlJSEnd ="";
				htmlJSEnd += '<tr><td></th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSEnd += '<td > '+ i +' </td>';
			    }
				htmlJSEnd += '<td ></td></tr>';
				
				htmlJSEnd += '<tr><td width="65px"></td>';
				for (var i = 1; i <= 14; i++){
					htmlJSEnd += '<td>' + ContentScript.handerJSEndData[i-1] + '</td>';
				}
				htmlJSEnd += '<td></td></tr>';

				$("#divCreateJS").empty();
				$("#divCreateJS").append(htmlJS + HeardHtml + ContentScript.tempJSHtml + htmlJSDeng + htmlJSCount + htmlJSEnd +'</table>');
			
	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100" || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100"  || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},
	CreateHtmlElementPage:function(){
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:8px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:8px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
		htmlList += '<div id="dragTable" style="background:white;width: 900px; height: 800px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 800px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">新版统计相关报表软件</h3>';
		htmlList += '<div id="divEditTable" style="float: left;">'
		htmlList += '<table class="gridtable" style="width:860px">';
		htmlList += '<tr><th width="65px">手动输入</th><th width="55px">1</th><th width="55px">2</th><th width="55px">3</th><th width="55px">4</th><th width="55px">5</th><th width="55px">6</th><th width="55px">7</th><th width="55px">8</th><th width="55px">9</th><th width="55px">10</th><th width="55px">11</th><th width="55px">12</th><th width="55px">13</th><th width="55px">14</th></tr>';
		htmlList += '<tr id="editDataLine"><td width="65px"><select width="60px" id="insertType">'
		htmlList += '<option value="1">赔率前日</option><option value="2">赔率60分</option><option value="3">赔率30分</option>'
		htmlList += '<option value="4">票数前日</option><option value="5">票数60分</option><option value="6">票数30分</option>'
		htmlList += '<option value="7">脚数前日</option><option value="8">脚数60分</option><option value="9">脚数30分</option><option value="10">表格底部</option>'
		htmlList += '</select></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" />'
		htmlList += '</td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td></tr>';
		htmlList += '<td ><td colspan="16"><input type="button" style="width:200px;height:25px;" id="btnSave" title="提交" value="提交" text="确定"/><font color="blue" id="saveStatus"></font></td></tr></table>';
		htmlList += '</div>'
		htmlList += '<div id="divCreatePL" style="float: left;"></div>'
		htmlList += '<div id="divCreateTicket" style="float: left;"></div>'
		htmlList += '<div id="divCreateJS" style="float: left;"></div>'
		htmlList += '</div>';
		
		htmlList += '<div id="dragShowResult" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">最可能中马组合</h3>';
		htmlList += '<div id="divShowResult" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		$("body").append(htmlList);
		
		ContentScript.HtmlAddDragEvent($("#dragTable"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult"));
		
		$("#btnSave").bind("click",function(){
			var type = $("#insertType").val();
			switch(type)
			{
				case "1":
				{
					ContentScript.handerPLDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "2":
				{
					
					ContentScript.handerPLData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "3":
				{
					
					ContentScript.handerPLData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "4":
				{
					
					ContentScript.handerTicketDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "5":
				{
					
					ContentScript.handerTicketData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "6":
				{
					ContentScript.handerTicketData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "7":
				{
					
					ContentScript.handerJSDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "8":
				{
					
					ContentScript.handerJSData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "9":
				{
					
					ContentScript.handerJSData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "10":
				{
					
					ContentScript.handerJSEndData=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSEndData.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				
			}
			
			for(var i=0;i<14;i++){
				$($("#editDataLine").find("input").eq(i)).val("0");
			}
			$("#saveStatus").text("保存成功");
		});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
	ContentScript.onInit();
}
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V701</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	handerTicketList:['日','60分','30分'],
	handerJSList:['日','60分','30分'],
	handerPLHeadList:['日','60分','15分'],
	handerPLFooterList:['10%','25%'],
	
	handerPLDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerTicketDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSEndData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	resultPL3Yellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPL1MinYellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultJSCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	tempJSHtml:"",
	tempTicketHtml:"",
	tempPLHtml:"",
	ChangePervChangCi:0,
	monitorTicketTimeList: [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorPLTimeList: [900,300,60],
	monitorJSTimeList:     [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			//,0,-30,-50,-70,-90
			if(resultValue<=0 && resultValue>-360){
				if (resultValue >-30  && resultValue<=0) {
					return 0;
				}
				if (resultValue >-50  && resultValue<=-30) {
					return -30;
				}
				if (resultValue >-70  && resultValue<=-50) {
					return -50;
				}
				if (resultValue >-90  && resultValue<=-70) {
					return -70;
				}
				if (resultValue<=-90) {
					return -90;
				}
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		
		if (TIMER > 15 && TIMER<=20) {
			return 1200;
		}
		
		if (TIMER > 10 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 7 && TIMER<=10) {
			return 600;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 3 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER > 2 && TIMER<=3) {
			return 180;
		}
		
		if (TIMER > 1 && TIMER<=2) {
			return 120;
		}
		
		if (TIMER<=1) {
			return 60;
		}
		
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return 0;
			}
			return 0;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 5 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 1 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER<=1) {
			return 60;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		ContentScript.CreateHtmlElementPage();

		self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if(isTicketTime==false){
				isExistTicket=true;
			}else{
				if (isTicketTime &&  !isNaN(currentPMTime)) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistTicket = true;
							return;
						}
					});
				}
			}

			if(isPeiLvTime==false){
				isExistPL=true;
			}else{
				if (isPeiLvTime && !isNaN(currentPMTime)) {
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistPL = true;
							return;
						}
					});
				}
			}
			


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
            
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
			});
			
			
				var htmlTicket = '<table id="HKTicket" class="gridtable" style="width:900px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketDataOneDay[i-1] + '</td>';
				}
				htmlTicket += '<td>日</td></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData60Min[i-1] + '</td>';
				}
				htmlTicket += '<td>60</td></tr>';
				
				htmlTicket += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData30Min[i-1] + '</td>';
				}
				htmlTicket += '<td>30</td></tr>';
				
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempTicket="";
				if (!isExistTicket) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempTicket += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempTicket += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempTicket += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempTicket += '<td width="50px">' + ContentScript.getTicketByHourse(temp.Data, i) + '</td>';
							}
							tempTicket += '<td></td></tr>';
						}
					});
					ContentScript.tempTicketHtml = tempTicket;
				}

				$("#divCreateTicket").empty();
				$("#divCreateTicket").append(htmlTicket+ContentScript.tempTicketHtml);
			

			
				var htmlPeiLv = '<table id="HKPL" class="gridtable" style="width:900px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLDataOneDay[i-1] + '</td>';
				}
				htmlPeiLv += '<td>日</td></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData60Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>60</td></tr>';
				
				htmlPeiLv += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData30Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>30</td></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
                var tempPL = "";
                if (!isExistPL) {
                	var FirstTemp=[];
	                var HadChangeTime = true;
	                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
	                if(LastData!=undefined && LastData!=null){
	                	if(LastData.currentPMTime<=420){
		                	FirstTemp = LastData.Data;
		                }else{
		                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
		                		HadChangeTime = false;
		                	}else{
		                		$(ContentScript.monitorPLTimeData).each(function(item){
		                			var temp = $(this)[0];
		                			if(temp.currentPMTime==420){
		                				FirstTemp = temp.Data;
		                				return;
		                			}
		                		});
		                	}
		                }
	                }
	                
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempPL += '<tr class="count"><td width="50px">30分前</th>';
								}else{
									tempPL += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempPL += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempPL += '<td width="50px">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</td>';
							}
							tempPL += '<td></td></tr>';
						}
					});
					ContentScript.tempPLHtml = tempPL;
				}
				
				var htmlPeiLv2="";
				htmlPeiLv2 += '<tr id="line10"><td width="65px">10%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2+='<td></td></tr>';
				
				htmlPeiLv2 += '<tr id="line25"><td width="65px">25%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2 +='<td></td></tr>';
				
				console.log(1);
				$("#divCreatePL").empty();
				$("#divCreatePL").append(htmlPeiLv+ContentScript.tempPLHtml+htmlPeiLv2);
			
			ContentScript.createPLColor();
			ContentScript.createTicketColor();
			ContentScript.createResultHtml();
		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	createPLColor:function(){
		var data = $("#HKPL").find(".count td");
		var change10 =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var change25=  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var plFirst = ContentScript.handerPLDataOneDay;
		var has5Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			var val = parseFloat($(this).text())
			
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					pl[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(has5Data && line>0 && item>=1 && item<=14){
				if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
					change10[item-1]=1;
				}
				if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
					change25[item-1]=1;
				}
			}
			if(line<=2 && item>=1 && item<=14){
				if(line==0){
					var nextLine = parseFloat($(data[index+16]).text());
					var nextLine2 = parseFloat($(data[index+32]).text());
					if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
						$(this).css("background-color","orange");
						$(data[index+16]).css("background-color","orange");
						$(data[index+32]).css("background-color","orange");
						ContentScript.resultPL3Yellow[item-1]=1;
					}
				}
			}
			
			if(line>2 && item>=1 && item<=14){
				if(plFirst[item-1]>val && val>0){
					$(this).css("background-color","orange");
				}
				if(item==0 && $(this).text()=="1"){
					ContentScript.resultPL1MinYellow[item-1]=1;
				}
			}
			index++;
		} );
		
		$("#line10").find("td").each(function(index){
			if(index>=1 && index<=14){
				if(change10[index-1]>0){
					$(this).css("background-color","orange");
				}else{
					$(this).css("background-color","");
				}
			}
			index++;
		});
		
		$("#line25").find("td").each(function(index){
			if(index>=1 && index<=14){
				if(change25[index-1]>0){
					ContentScript.resultPLCount[index-1] = 1;
					$(this).css("background-color","red");
				}else{
					$(this).css("background-color","");
				}
			}
			index++;
		});
		
		for(var item=0;item<14;item++){
			if(ContentScript.resultPL3Yellow[item]>0 || ContentScript.resultPL1MinYellow[item]>0){
				ContentScript.resultPLCount[item]=1;
			}
		}
	},
	createTicketColor:function(){
		var data = $("#HKTicket").find(".count td");
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		var lineMax = ContentScript.getLineMaxValue(data);
		$(data).each(function(index){
			var line = parseInt(index/16);
			var item = index%16;
			var val = parseFloat($(this).text())
			if(item>=1 && item<=14){
				if(lineMax[line]<=val && val>0){
					$(this).css("background-color","orange");
				}
			}
			index++;
		});
	},
	getLineMaxValue:function(obj){
		var retVal = [];
		var line = parseInt(obj.length/16);
		for(var i=0;i<line;i++){
			var lineMax=0;
			for(var j=0;j<16;j++){
			  if(j>=1 && j<=14){
			  	  var temp = parseFloat($(obj[i*16+j]).text());
				  if(temp>lineMax){
				  	lineMax= temp;
				  }
			  }
			}
			retVal.push(lineMax);
		}
		return retVal;
	},
	createResultHtml:function(){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th></tr>';
		var masterList=[];
		for(var item=0;item<14;item++){
			if(ContentScript.resultPLCount[item]>0 && ContentScript.resultJSCount[item]>=4){
				masterList.push(item+1);	
			}
		}
		var resultList =[];
		var jsList=[];
		var countMa =0;
		if(masterList.length>0){
			for(var i=0;i<masterList.length;i++){
				for(var j=0;j<14;j++){
					if(ContentScript.resultJSCount[j]>0){
						jsList.push(ContentScript.resultJSCount[j]);
						if(masterList[i]!=j+1){
							var item ={"hourse1":masterList[i],"hourse2":j+1,"countJS":ContentScript.resultJSCount[j]}
							resultList.push(item);	
							countMa+=ContentScript.resultJSCount[j];
						}
					}
				}
			}
			
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this)[0].hourse1 + '-' + $(this)[0].hourse2 +'</td><td>'+ $(this)[0].countJS +'</td></tr>';
			});
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td></tr>';
			
			$("#divShowResult").empty();
		    $("#divShowResult").append(htmlJS +'</table>');	
		}
	},
	createJSColor:function(){
		var data = $("#HKJS").find(".count td");
		//统计每个马的总数
		var countLine = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var countLineSort = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var dengData =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var lineMax = ContentScript.getLineMaxValue(data);
		var has5Data=false;
		var has1Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			if(item>=1 && item<=14){
				var val = parseFloat($(this).text())
				countLine[item-1] += val ;
				countLineSort[item-1] += val ;
				// 如果有5分钟的基数的时候
				if(has5Data){
					if(min5Line[item-1]+2 <= val){
						dengData[item-1]= val;
					}
				}
				// 如果有1分钟的基数的时候
				if(has1Data){
					if(ContentScript.resultJSCount[item-1] < val){
						ContentScript.resultJSCount[item-1]= val;
					}
				}
				
				//最大显示黄色
				if(lineMax[line]<=val && val >0){
					$(this).css("background-color","orange");
				}
			}
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					min5Line[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(item==0 && $(this).text()=="1"){
				has1Data =true;
				for(var i=1;i<=14;i++){
					ContentScript.resultJSCount[i-1]= parseFloat($(data[index+i]).text());	
				}
			}
			
			index++;
		});
		countLineSort.sort(function(a,b){return a>b?1:-1});;
		//显示统计 并且排名前3的显示黄色背景
	    $("#countJS").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(countLine[index-1] >0 && countLineSort[11]<=countLine[index-1]){
	    			$(this).text(countLine[index-1]).css("background-color","orange")
	    		}else{
	    			$(this).text(countLine[index-1]).css("background-color","")
	    		}
	    	}
	    	index++;
	    });
		//显示灯  以5分钟为基数 超过两个的显示绿色 background-color:#00FF00;
		$("#deng").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(dengData[index-1]>0){
	    			$(this).css("background-color","#00FF00")
	    		}
	    	}
	    	index++;
	  });
	},
	allOnitEvent: function() {
		ContentScript.timerSearch = self.setInterval(function() {
			var resultFirst;
			var signInfo = ContentScript.GetSignInInfo();
			var itemName = "a"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
			if (host.indexOf("Q.jsp") >= 0) {
				resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');
				var postData = {};
	            
	            postData.race_type = signInfo.RaceType;
				postData.race_date = signInfo.RaceDate;
				postData.Data = resultFirst;
				
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					localStorage.setItem(itemName,JSON.stringify(postData));
				}else{
					localStorage.setItem(itemName,JSON.stringify(postData));
				}
			}else{
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					resultFirst=null;
				}else{
					resultFirst = $.parseJSON(localStorage.getItem(itemName)).Data;
					ContentScript.createJSHtml(resultFirst);
					ContentScript.createJSColor();
				}
			}
            
            if(resultFirst==null || resultFirst==undefined ){
            	return;
            }
			return;
		}, 1000);
	},
	createJSHtml:function(resultFirst){
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse ==null || $(this)[0].hourse == undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}
			});

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;
			
			if(isExistsJSTime==false){
				isExistJS =true;
			}else{
				if (isExistsJSTime) {
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistJS = true;
							return;
						}
					});
				}
			}
				
				if (!isExistJS) {
					var item = {};
					item.changchi = cchi;
					item.currentPMTime = currentPMTime;
					item.Data = hourseCount;
					ContentScript.monitorJSQTimeData.push(item);
					
					ContentScript.monitorJSQTimeData.sort(function(a, b) {
						return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
					});
					
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								tempHtml += '<td width="50px">' + tempCount + '</td>';
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				
				var htmlJS = '<table id="HKJS" class="gridtable" style="width:900px">';
				htmlJS += '<tr><th width="65px">HK脚数</th>';
				
				for (var i = 1; i <= 14; i++) {
					htmlJS += '<th width="50px">' + i + '</th>';
				}
				htmlJS += '<th></th></tr>'
				
				var HeardHtml = '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSDataOneDay[i-1] + '</td>';
				}
				HeardHtml += '<td>日</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData60Min[i-1] + '</td>';
				}
				HeardHtml += '<td>60</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData30Min[i-1] + '</td>';
				}
				HeardHtml += '<td>30</td></tr>';
				
				
				var htmlJSCount ="";
				htmlJSCount += '<tr id="countJS" style="background-color:#fff68f" ><td style="background-color:#fff68f">合脚</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f"></td>';
			    }
				htmlJSCount += '<td >合脚</td></tr>';
				
				
				var htmlJSDeng ="";
				htmlJSDeng += '<tr id="deng" style="background-color:#fff68f" ><td style="background-color:#fff68f">灯</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSDeng += '<td >  </td>';
			    }
				htmlJSDeng += '<td style="background-color:#fff68f">灯</td></tr>';
				
				var htmlJSEnd ="";
				htmlJSEnd += '<tr><td></th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSEnd += '<td > '+ i +' </td>';
			    }
				htmlJSEnd += '<td ></td></tr>';
				
				htmlJSEnd += '<tr><td width="65px"></td>';
				for (var i = 1; i <= 14; i++){
					htmlJSEnd += '<td>' + ContentScript.handerJSEndData[i-1] + '</td>';
				}
				htmlJSEnd += '<td></td></tr>';

				$("#divCreateJS").empty();
				$("#divCreateJS").append(htmlJS + HeardHtml + ContentScript.tempJSHtml + htmlJSDeng + htmlJSCount + htmlJSEnd +'</table>');
			
	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100" || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100"  || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},
	CreateHtmlElementPage:function(){
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:8px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:8px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
		htmlList += '<div id="dragTable" style="background:white;width: 900px; height: 800px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 800px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">新版统计相关报表软件</h3>';
		htmlList += '<div id="divEditTable" style="float: left;">'
		htmlList += '<table class="gridtable" style="width:860px">';
		htmlList += '<tr><th width="65px">手动输入</th><th width="55px">1</th><th width="55px">2</th><th width="55px">3</th><th width="55px">4</th><th width="55px">5</th><th width="55px">6</th><th width="55px">7</th><th width="55px">8</th><th width="55px">9</th><th width="55px">10</th><th width="55px">11</th><th width="55px">12</th><th width="55px">13</th><th width="55px">14</th></tr>';
		htmlList += '<tr id="editDataLine"><td width="65px"><select width="60px" id="insertType">'
		htmlList += '<option value="1">赔率前日</option><option value="2">赔率60分</option><option value="3">赔率30分</option>'
		htmlList += '<option value="4">票数前日</option><option value="5">票数60分</option><option value="6">票数30分</option>'
		htmlList += '<option value="7">脚数前日</option><option value="8">脚数60分</option><option value="9">脚数30分</option><option value="10">表格底部</option>'
		htmlList += '</select></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" />'
		htmlList += '</td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td></tr>';
		htmlList += '<td ><td colspan="16"><input type="button" style="width:200px;height:25px;" id="btnSave" title="提交" value="提交" text="确定"/><font color="blue" id="saveStatus"></font></td></tr></table>';
		htmlList += '</div>'
		htmlList += '<div id="divCreatePL" style="float: left;"></div>'
		htmlList += '<div id="divCreateTicket" style="float: left;"></div>'
		htmlList += '<div id="divCreateJS" style="float: left;"></div>'
		htmlList += '</div>';
		
		htmlList += '<div id="dragShowResult" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">最可能中马组合</h3>';
		htmlList += '<div id="divShowResult" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		$("body").append(htmlList);
		
		ContentScript.HtmlAddDragEvent($("#dragTable"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult"));
		
		$("#btnSave").bind("click",function(){
			var type = $("#insertType").val();
			switch(type)
			{
				case "1":
				{
					ContentScript.handerPLDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "2":
				{
					
					ContentScript.handerPLData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "3":
				{
					
					ContentScript.handerPLData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "4":
				{
					
					ContentScript.handerTicketDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "5":
				{
					
					ContentScript.handerTicketData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "6":
				{
					ContentScript.handerTicketData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "7":
				{
					
					ContentScript.handerJSDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "8":
				{
					
					ContentScript.handerJSData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "9":
				{
					
					ContentScript.handerJSData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "10":
				{
					
					ContentScript.handerJSEndData=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSEndData.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				
			}
			
			for(var i=0;i<14;i++){
				$($("#editDataLine").find("input").eq(i)).val("0");
			}
			$("#saveStatus").text("保存成功");
		});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
	ContentScript.onInit();
}
    ]]>       
    </JSCode>
  </JSFile>
	<JSFile>
    <version>V702</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	handerTicketList:['日','60分','30分'],
	handerJSList:['日','60分','30分'],
	handerPLHeadList:['日','60分','15分'],
	handerPLFooterList:['10%','25%'],
	
	handerPLDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerTicketDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSEndData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	resultPL3Yellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPL1MinYellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultJSCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	tempJSHtml:"",
	tempTicketHtml:"",
	tempPLHtml:"",
	ChangePervChangCi:0,
	monitorTicketTimeList: [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorPLTimeList: [900,300,60],
	monitorJSTimeList:     [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			//,0,-30,-50,-70,-90
			if(resultValue<=0 && resultValue>-360){
				if (resultValue >-30  && resultValue<=0) {
					return 0;
				}
				if (resultValue >-50  && resultValue<=-30) {
					return -30;
				}
				if (resultValue >-70  && resultValue<=-50) {
					return -50;
				}
				if (resultValue >-90  && resultValue<=-70) {
					return -70;
				}
				if (resultValue<=-90) {
					return -90;
				}
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		
		if (TIMER > 15 && TIMER<=20) {
			return 1200;
		}
		
		if (TIMER > 10 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 7 && TIMER<=10) {
			return 600;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 3 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER > 2 && TIMER<=3) {
			return 180;
		}
		
		if (TIMER > 1 && TIMER<=2) {
			return 120;
		}
		
		if (TIMER<=1) {
			return 60;
		}
		
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return 0;
			}
			return 0;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 5 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 1 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER<=1) {
			return 60;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		ContentScript.CreateHtmlElementPage();

		self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if(isTicketTime==false){
				isExistTicket=true;
			}else{
				if (isTicketTime &&  !isNaN(currentPMTime)) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistTicket = true;
							return;
						}
					});
				}
			}

			if(isPeiLvTime==false){
				isExistPL=true;
			}else{
				if (isPeiLvTime && !isNaN(currentPMTime)) {
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistPL = true;
							return;
						}
					});
				}
			}
			


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
            
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
			});
			
			
				var htmlTicket = '<table id="HKTicket" class="gridtable" style="width:900px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketDataOneDay[i-1] + '</td>';
				}
				htmlTicket += '<td>日</td></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData60Min[i-1] + '</td>';
				}
				htmlTicket += '<td>60</td></tr>';
				
				htmlTicket += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData30Min[i-1] + '</td>';
				}
				htmlTicket += '<td>30</td></tr>';
				
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempTicket="";
				if (!isExistTicket) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempTicket += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempTicket += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempTicket += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempTicket += '<td width="50px">' + ContentScript.getTicketByHourse(temp.Data, i) + '</td>';
							}
							tempTicket += '<td></td></tr>';
						}
					});
					ContentScript.tempTicketHtml = tempTicket;
				}

				$("#divCreateTicket").empty();
				$("#divCreateTicket").append(htmlTicket+ContentScript.tempTicketHtml);
			

			
				var htmlPeiLv = '<table id="HKPL" class="gridtable" style="width:900px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLDataOneDay[i-1] + '</td>';
				}
				htmlPeiLv += '<td>日</td></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData60Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>60</td></tr>';
				
				htmlPeiLv += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData30Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>30</td></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
                var tempPL = "";
                if (!isExistPL) {
                	var FirstTemp=[];
	                var HadChangeTime = true;
	                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
	                if(LastData!=undefined && LastData!=null){
	                	if(LastData.currentPMTime<=420){
		                	FirstTemp = LastData.Data;
		                }else{
		                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
		                		HadChangeTime = false;
		                	}else{
		                		$(ContentScript.monitorPLTimeData).each(function(item){
		                			var temp = $(this)[0];
		                			if(temp.currentPMTime==420){
		                				FirstTemp = temp.Data;
		                				return;
		                			}
		                		});
		                	}
		                }
	                }
	                
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempPL += '<tr class="count"><td width="50px">30分前</th>';
								}else{
									tempPL += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempPL += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempPL += '<td width="50px">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</td>';
							}
							tempPL += '<td></td></tr>';
						}
					});
					ContentScript.tempPLHtml = tempPL;
				}
				
				var htmlPeiLv2="";
				htmlPeiLv2 += '<tr id="line10"><td width="65px">10%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2+='<td></td></tr>';
				
				htmlPeiLv2 += '<tr id="line25"><td width="65px">25%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2 +='<td></td></tr>';
				
				console.log(1);
				$("#divCreatePL").empty();
				$("#divCreatePL").append(htmlPeiLv+ContentScript.tempPLHtml+htmlPeiLv2);
			
			ContentScript.createPLColor();
			ContentScript.createTicketColor();
			//ContentScript.createResultHtml();
		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	createPLColor:function(){
		var data = $("#HKPL").find(".count td");
		var change10 =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var change25=  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var plFirst = ContentScript.handerPLDataOneDay;
		var has5Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			var val = parseFloat($(this).text())
			
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					pl[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(has5Data && line>0 && item>=1 && item<=14){
				if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
					change10[item-1]=1;
				}
				if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
					change25[item-1]=1;
				}
			}
			if(line<=2 && item>=1 && item<=14){
				if(line==0){
					var nextLine = parseFloat($(data[index+16]).text());
					var nextLine2 = parseFloat($(data[index+32]).text());
					if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
						$(this).css("background-color","orange");
						$(data[index+16]).css("background-color","orange");
						$(data[index+32]).css("background-color","orange");
						ContentScript.resultPL3Yellow[item-1]=1;
					}
				}
			}
			
			if(line>2 && item>=1 && item<=14){
				if(plFirst[item-1]>val && val>0){
					$(this).css("background-color","orange");
				}
				if(item==0 && $(this).text()=="1"){
					ContentScript.resultPL1MinYellow[item-1]=1;
				}
			}
			index++;
		} );
		
		$("#line10").find("td").each(function(index){
			if(index>=1 && index<=14){
				if(change10[index-1]>0){
					$(this).css("background-color","orange");
				}else{
					$(this).css("background-color","");
				}
			}
			index++;
		});
		
		$("#line25").find("td").each(function(index){
			if(index>=1 && index<=14){
				if(change25[index-1]>0){
					ContentScript.resultPLCount[index-1] = 1;
					$(this).css("background-color","red");
				}else{
					$(this).css("background-color","");
				}
			}
			index++;
		});
		
		for(var item=0;item<14;item++){
			if(ContentScript.resultPL3Yellow[item]>0 && ContentScript.resultPL1MinYellow[item]>0){
				ContentScript.resultPLCount[item]=1;
			}
		}
	},
	createTicketColor:function(){
		var data = $("#HKTicket").find(".count td");
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		var lineMax = ContentScript.getLineMaxValue(data);
		$(data).each(function(index){
			var line = parseInt(index/16);
			var item = index%16;
			var val = parseFloat($(this).text())
			if(item>=1 && item<=14){
				if(lineMax[line]<=val && val>0){
					$(this).css("background-color","orange");
				}
			}
			index++;
		});
	},
	getLineMaxValue:function(obj){
		var retVal = [];
		var line = parseInt(obj.length/16);
		for(var i=0;i<line;i++){
			var lineMax=0;
			for(var j=0;j<16;j++){
			  if(j>=1 && j<=14){
			  	  var temp = parseFloat($(obj[i*16+j]).text());
				  if(temp>lineMax){
				  	lineMax= temp;
				  }
			  }
			}
			retVal.push(lineMax);
		}
		return retVal;
	},
	createResultHtml:function(){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th></tr>';
		var masterList=[];
		for(var item=0;item<14;item++){
			if(ContentScript.resultPLCount[item]>0 && ContentScript.resultJSCount[item]>=4){
				masterList.push(item+1);	
			}
		}
		var resultList =[];
		var jsList=[];
		var countMa =0;
		if(masterList.length>0){
			for(var i=0;i<masterList.length;i++){
				for(var j=0;j<14;j++){
					if(ContentScript.resultJSCount[j]>0){
						jsList.push(ContentScript.resultJSCount[j]);
						if(masterList[i]!=j+1){
							var item ={"hourse1":masterList[i],"hourse2":j+1,"countJS":ContentScript.resultJSCount[j]}
							resultList.push(item);	
							countMa+=ContentScript.resultJSCount[j];
						}
					}
				}
			}
			
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this).hourse1 + '-' + $(this).hourse2 +'</td><td>'+ $(this).countJS +'</td></tr>';
			});
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td></tr>';
			
			$("#divShowResult").empty();
		    $("#divShowResult").append(htmlJS +'</table>');	
		}
	},
	createJSColor:function(){
		var data = $("#HKJS").find(".count td");
		//统计每个马的总数
		var countLine = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var countLineSort = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var dengData =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var lineMax = ContentScript.getLineMaxValue(data);
		var has5Data=false;
		var has1Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			if(item>=1 && item<=14){
				var val = parseFloat($(this).text())
				countLine[item-1] += val ;
				countLineSort[item-1] += val ;
				// 如果有5分钟的基数的时候
				if(has5Data){
					if(min5Line[item-1]+2 <= val){
						dengData[item-1]= val;
					}
				}
				// 如果有1分钟的基数的时候
				if(has1Data){
					if(ContentScript.resultJSCount[item-1] < val){
						ContentScript.resultJSCount[item-1]= val;
					}
				}
				
				//最大显示黄色
				if(lineMax[line]<=val && val >0){
					$(this).css("background-color","orange");
				}
			}
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					min5Line[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(item==0 && $(this).text()=="1"){
				has1Data =true;
				for(var i=1;i<=14;i++){
					ContentScript.resultJSCount[i-1]= parseFloat($(data[index+i]).text());	
				}
			}
			
			index++;
		});
		countLineSort.sort(function(a,b){return a>b?1:-1});;
		//显示统计 并且排名前3的显示黄色背景
	    $("#countJS").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(countLine[index-1] >0 && countLineSort[11]<=countLine[index-1]){
	    			$(this).text(countLine[index-1]).css("background-color","orange")
	    		}else{
	    			$(this).text(countLine[index-1]).css("background-color","")
	    		}
	    	}
	    	index++;
	    });
		//显示灯  以5分钟为基数 超过两个的显示绿色 background-color:#00FF00;
		$("#deng").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(dengData[index-1]>0){
	    			$(this).css("background-color","#00FF00")
	    		}
	    	}
	    	index++;
	  });
	},
	allOnitEvent: function() {
		ContentScript.timerSearch = self.setInterval(function() {
			var resultFirst;
			var signInfo = ContentScript.GetSignInInfo();
			var itemName = "a"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
			if (host.indexOf("Q.jsp") >= 0) {
				resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');
				var postData = {};
	            
	            postData.race_type = signInfo.RaceType;
				postData.race_date = signInfo.RaceDate;
				postData.Data = resultFirst;
				
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					localStorage.setItem(itemName,JSON.stringify(postData));
				}else{
					localStorage.setItem(itemName,JSON.stringify(postData));
				}
			}else{
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					resultFirst=null;
				}else{
					resultFirst = $.parseJSON(localStorage.getItem(itemName)).Data;
					ContentScript.createJSHtml(resultFirst);
					ContentScript.createJSColor();
				}
			}
            
            if(resultFirst==null || resultFirst==undefined ){
            	return;
            }
			return;
		}, 1000);
	},
	createJSHtml:function(resultFirst){
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse ==null || $(this)[0].hourse == undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}
			});

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;
			
			if(isExistsJSTime==false){
				isExistJS =true;
			}else{
				if (isExistsJSTime) {
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistJS = true;
							return;
						}
					});
				}
			}
				
				if (!isExistJS) {
					var item = {};
					item.changchi = cchi;
					item.currentPMTime = currentPMTime;
					item.Data = hourseCount;
					ContentScript.monitorJSQTimeData.push(item);
					
					ContentScript.monitorJSQTimeData.sort(function(a, b) {
						return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
					});
					
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								tempHtml += '<td width="50px">' + tempCount + '</td>';
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				
				var htmlJS = '<table id="HKJS" class="gridtable" style="width:900px">';
				htmlJS += '<tr><th width="65px">HK脚数</th>';
				
				for (var i = 1; i <= 14; i++) {
					htmlJS += '<th width="50px">' + i + '</th>';
				}
				htmlJS += '<th></th></tr>'
				
				var HeardHtml = '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSDataOneDay[i-1] + '</td>';
				}
				HeardHtml += '<td>日</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData60Min[i-1] + '</td>';
				}
				HeardHtml += '<td>60</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData30Min[i-1] + '</td>';
				}
				HeardHtml += '<td>30</td></tr>';
				
				
				var htmlJSCount ="";
				htmlJSCount += '<tr id="countJS" style="background-color:#fff68f" ><td style="background-color:#fff68f">合脚</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f"></td>';
			    }
				htmlJSCount += '<td >合脚</td></tr>';
				
				
				var htmlJSDeng ="";
				htmlJSDeng += '<tr id="deng" style="background-color:#fff68f" ><td style="background-color:#fff68f">灯</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSDeng += '<td >  </td>';
			    }
				htmlJSDeng += '<td style="background-color:#fff68f">灯</td></tr>';
				
				var htmlJSEnd ="";
				htmlJSEnd += '<tr><td></th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSEnd += '<td > '+ i +' </td>';
			    }
				htmlJSEnd += '<td ></td></tr>';
				
				htmlJSEnd += '<tr><td width="65px"></td>';
				for (var i = 1; i <= 14; i++){
					htmlJSEnd += '<td>' + ContentScript.handerJSEndData[i-1] + '</td>';
				}
				htmlJSEnd += '<td></td></tr>';

				$("#divCreateJS").empty();
				$("#divCreateJS").append(htmlJS + HeardHtml + ContentScript.tempJSHtml + htmlJSDeng + htmlJSCount + htmlJSEnd +'</table>');
			
	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100" || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100"  || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},
	CreateHtmlElementPage:function(){
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:8px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:8px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
		htmlList += '<div id="dragTable" style="background:white;width: 900px; height: 800px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 800px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">新版统计相关报表软件</h3>';
		htmlList += '<div id="divEditTable" style="float: left;">'
		htmlList += '<table class="gridtable" style="width:860px">';
		htmlList += '<tr><th width="65px">手动输入</th><th width="55px">1</th><th width="55px">2</th><th width="55px">3</th><th width="55px">4</th><th width="55px">5</th><th width="55px">6</th><th width="55px">7</th><th width="55px">8</th><th width="55px">9</th><th width="55px">10</th><th width="55px">11</th><th width="55px">12</th><th width="55px">13</th><th width="55px">14</th></tr>';
		htmlList += '<tr id="editDataLine"><td width="65px"><select width="60px" id="insertType">'
		htmlList += '<option value="1">赔率前日</option><option value="2">赔率60分</option><option value="3">赔率30分</option>'
		htmlList += '<option value="4">票数前日</option><option value="5">票数60分</option><option value="6">票数30分</option>'
		htmlList += '<option value="7">脚数前日</option><option value="8">脚数60分</option><option value="9">脚数30分</option><option value="10">表格底部</option>'
		htmlList += '</select></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" />'
		htmlList += '</td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td></tr>';
		htmlList += '<td ><td colspan="16"><input type="button" style="width:200px;height:25px;" id="btnSave" title="提交" value="提交" text="确定"/><font color="blue" id="saveStatus"></font></td></tr></table>';
		htmlList += '</div>'
		htmlList += '<div id="divCreatePL" style="float: left;"></div>'
		htmlList += '<div id="divCreateJS" style="float: left;"></div>'
		htmlList += '<div id="divCreateTicket" style="float: left;"></div>'
		htmlList += '</div>';
		
		htmlList += '<div id="dragShowResult" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">最可能中马组合</h3>';
		htmlList += '<div id="divShowResult" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		$("body").append(htmlList);
		
		ContentScript.HtmlAddDragEvent($("#dragTable"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult"));
		
		$("#btnSave").bind("click",function(){
			var type = $("#insertType").val();
			switch(type)
			{
				case "1":
				{
					ContentScript.handerPLDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "2":
				{
					
					ContentScript.handerPLData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "3":
				{
					
					ContentScript.handerPLData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "4":
				{
					
					ContentScript.handerTicketDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "5":
				{
					
					ContentScript.handerTicketData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "6":
				{
					ContentScript.handerTicketData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "7":
				{
					
					ContentScript.handerJSDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "8":
				{
					
					ContentScript.handerJSData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "9":
				{
					
					ContentScript.handerJSData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "10":
				{
					
					ContentScript.handerJSEndData=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSEndData.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				
			}
			
			for(var i=0;i<14;i++){
				$($("#editDataLine").find("input").eq(i)).val("0");
			}
			$("#saveStatus").text("保存成功");
		});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
	ContentScript.onInit();
}     
    ]]>       
    </JSCode>
  </JSFile>
  	<JSFile>
    <version>V703</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	handerTicketList:['日','60分','30分'],
	handerJSList:['日','60分','30分'],
	handerPLHeadList:['日','60分','15分'],
	handerPLFooterList:['10%','25%'],
	orderResultList:[],
	urlX: "http://"+window.location.host,
	handerPLDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerTicketDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSEndData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	resultPL3Yellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPL1MinYellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultJSCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	tempJSHtml:"",
	tempTicketHtml:"",
	tempPLHtml:"",
	ChangePervChangCi:0,
	monitorTicketTimeList: [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorPLTimeList: [900,420,300,60],
	monitorJSTimeList:     [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			//,0,-30,-50,-70,-90
			if(resultValue<=0 && resultValue>-360){
				if (resultValue >-30  && resultValue<=0) {
					return 0;
				}
				if (resultValue >-50  && resultValue<=-30) {
					return -30;
				}
				if (resultValue >-70  && resultValue<=-50) {
					return -50;
				}
				if (resultValue >-90  && resultValue<=-70) {
					return -70;
				}
				if (resultValue<=-90) {
					return -90;
				}
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		
		if (TIMER > 15 && TIMER<=20) {
			return 1200;
		}
		
		if (TIMER > 10 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 7 && TIMER<=10) {
			return 600;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 3 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER > 2 && TIMER<=3) {
			return 180;
		}
		
		if (TIMER > 1 && TIMER<=2) {
			return 120;
		}
		
		if (TIMER<=1) {
			return 60;
		}
		
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return 0;
			}
			return 0;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 7 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 1 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER<=1) {
			return 60;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		ContentScript.CreateHtmlElementPage();

		ContentScript.timerSearchQP  = self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if(isTicketTime==false){
				isExistTicket=true;
			}else{
				if (isTicketTime &&  !isNaN(currentPMTime)) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistTicket = true;
							return;
						}
					});
				}
			}

			if(isPeiLvTime==false){
				isExistPL=true;
			}else{
				if (isPeiLvTime && !isNaN(currentPLTime)) {
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPLTime) {
							isExistPL = true;
							return;
						}
					});
				}
			}
			


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPLTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
            
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
			});
			
			
				var htmlTicket = '<table id="HKTicket" class="gridtable" style="width:900px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketDataOneDay[i-1] + '</td>';
				}
				htmlTicket += '<td>日</td></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData60Min[i-1] + '</td>';
				}
				htmlTicket += '<td>60</td></tr>';
				
				htmlTicket += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData30Min[i-1] + '</td>';
				}
				htmlTicket += '<td>30</td></tr>';
				
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempTicket="";
				if (!isExistTicket) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempTicket += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempTicket += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempTicket += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempTicket += '<td width="50px">' + ContentScript.getTicketByHourse(temp.Data, i) + '</td>';
							}
							tempTicket += '<td></td></tr>';
						}
					});
					ContentScript.tempTicketHtml = tempTicket;
				}

				$("#divCreateTicket").empty();
				$("#divCreateTicket").append(htmlTicket+ContentScript.tempTicketHtml);
			

			
				var htmlPeiLv = '<table id="HKPL" class="gridtable" style="width:900px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLDataOneDay[i-1] + '</td>';
				}
				htmlPeiLv += '<td>日</td></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData60Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>60</td></tr>';
				
				htmlPeiLv += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData30Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>30</td></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
                var tempPL = "";
                if (!isExistPL) {
                	var FirstTemp=[];
	                var HadChangeTime = true;
	                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
	                if(LastData!=undefined && LastData!=null){
	                	if(LastData.currentPMTime<=420){
		                	FirstTemp = LastData.Data;
		                }else{
		                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
		                		HadChangeTime = false;
		                	}else{
		                		$(ContentScript.monitorPLTimeData).each(function(item){
		                			var temp = $(this)[0];
		                			if(temp.currentPMTime==420){
		                				FirstTemp = temp.Data;
		                				return;
		                			}
		                		});
		                	}
		                }
	                }
	                
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempPL += '<tr class="count"><td width="50px">30分前</th>';
								}else{
									tempPL += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempPL += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempPL += '<td width="50px">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</td>';
							}
							tempPL += '<td></td></tr>';
						}
					});
					ContentScript.tempPLHtml = tempPL;
				}
				
				var htmlPeiLv2="";
				htmlPeiLv2 += '<tr id="line10"><td width="65px">10%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2+='<td></td></tr>';
				
				htmlPeiLv2 += '<tr id="line25"><td width="65px">25%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2 +='<td></td></tr>';
				
				console.log(1);
				$("#divCreatePL").empty();
				$("#divCreatePL").append(htmlPeiLv+ContentScript.tempPLHtml+htmlPeiLv2);
			
			ContentScript.createPLColor();
			ContentScript.createTicketColor();
			ContentScript.createResultHtml();
		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	createPLColor:function(){
		var notNeed123 = ($("#notNeed123").val()=="2");
		var data = $("#HKPL").find(".count td");
		var change10 =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var change25=  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		if(notNeed123){
			var has15Data = false;
			$(data).each(function(index){
				
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(line<=2){
					return;
				}
				
				var plFirst = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				if(item==0 && $(this).text()=="15"){
					has15Data = true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
					plFirst =pl;
				}
				
				if(has15Data && line>2 && item>=1 && item<=14 && $(data[line*16]).text()=="1"){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				
				if(line>2 && line<=5 && item>=1 && item<=14){
					if($(data).length>=16*6){
						if(line==3 && $(this).text()=="15" ){
							var nextLine = parseFloat($(data[index+16]).text());
							var nextLine2 = parseFloat($(data[index+32]).text());
							if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
								$(this).css("background-color","orange");
								$(data[index+16]).css("background-color","orange");
								$(data[index+32]).css("background-color","orange");
								ContentScript.resultPL3Yellow[item-1]=1;
							}
						}
					}
				}
				
				if(line>5 && item>=1 && item<=14){
					if(plFirst[item-1]>val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="1"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			});
		}else{
			var plFirst = ContentScript.handerPLDataOneDay;
			var has5Data=false;
			$(data).each(function(index){
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(item==0 && $(this).text()=="5"){
					has5Data =true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
				}
				
				if(has5Data && line>0 && item>=1 && item<=14){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				if(line<=2 && item>=1 && item<=14){
					if(line==0){
						var nextLine = parseFloat($(data[index+16]).text());
						var nextLine2 = parseFloat($(data[index+32]).text());
						if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
							$(this).css("background-color","orange");
							$(data[index+16]).css("background-color","orange");
							$(data[index+32]).css("background-color","orange");
							ContentScript.resultPL3Yellow[item-1]=1;
						}
					}
				}
				
				if(line>2 && item>=1 && item<=14){
					if(plFirst[item-1]>val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="1"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			} );
		}
		
		$("#line10").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change10[index-1]>0){
						$(this).css("background-color","orange");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		$("#line25").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change25[index-1]>0){
						ContentScript.resultPLCount[index-1] = 1;
						$(this).css("background-color","red");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		for(var item=0;item<14;item++){
			if(ContentScript.resultPL3Yellow[item]>0 && ContentScript.resultPL1MinYellow[item]>0){
				ContentScript.resultPLCount[item]=1;
			}
		}
		
	},
	createTicketColor:function(){
		var data = $("#HKTicket").find(".count td");
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		var lineMax = ContentScript.getLineMaxValue(data);
		$(data).each(function(index){
			var line = parseInt(index/16);
			var item = index%16;
			var val = parseFloat($(this).text())
			if(item>=1 && item<=14){
				if(lineMax[line]<=val && val>0){
					$(this).css("background-color","orange");
				}
			}
			index++;
		});
	},
	getLineMaxValue:function(obj){
		var retVal = [];
		var line = parseInt(obj.length/16);
		for(var i=0;i<line;i++){
			var lineMax=0;
			for(var j=0;j<16;j++){
			  if(j>=1 && j<=14){
			  	  var temp = parseFloat($(obj[i*16+j]).text());
				  if(temp>lineMax){
				  	lineMax= temp;
				  }
			  }
			}
			retVal.push(lineMax);
		}
		return retVal;
	},
	createResultHtml:function(){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th><th>购买</th></tr>';
		var JSLimits = parseInt($("#JSLimits").val());
		var HowMuchPL= parseInt($("#HowMuchPL").val());
		var masterList=[];
		for(var item=0;item<14;item++){
			if(ContentScript.resultPLCount[item]>0 && ContentScript.resultJSCount[item]>=JSLimits){
				masterList.push(item+1);	
			}
		}
		var resultList =[];
		var jsList=[];
		var countMa =0;
		if(masterList.length>0){
			for(var i=0;i<masterList.length;i++){
				for(var j=0;j<14;j++){
					if(ContentScript.resultJSCount[j]>0){
						jsList.push(ContentScript.resultJSCount[j]);
						if(masterList[i]!=j+1){
							var item ={"id":Math.random(),"hourse1":masterList[i],"hourse2":j+1,"countJS":ContentScript.resultJSCount[j]}
							resultList.push(item);	
							countMa+=ContentScript.resultJSCount[j];
						}
					}
				}
			}
			
			resultList.sort(function(a, b) {
				return parseInt(a["countJS"]) < parseInt(b["countJS"]) ? 1 : parseInt(a["countJS"]) == parseInt(b["countJS"]) ? 0 : -1;
			});
			
			 
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this)[0].hourse1 + '-' + $(this)[0].hourse2 +'</td><td>'+ $(this)[0].countJS +'</td><td><input type="button" value="购买" class="orderOne"/><input type="hidden" class="hiddenOrderData" value="'+ $(this)[0].id +'"/></td></tr>';
			});
			
			ContentScript.orderResultList = resultList;
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td><td>'+ parseInt(countMa)*parseInt(HowMuchPL) +'</td></tr>';
			
			$("#divShowResult").empty();
		    $("#divShowResult").append(htmlJS +'</table>');	
		    
		    $(".orderOne").bind("click",function(){
				$(this).hide();
				//下单即不再计算马
				clearInterval(ContentScript.timerSearch);
			    clearInterval(ContentScript.timerSearchQP);
				
				var data = $(this).parent().find(".hiddenOrderData").val();
				$(ContentScript.orderResultList).each(function(){
					if(data==$(this)[0].id){
						ContentScript.orderBetQ($(this)[0]);
					}
				});
			})
		}
	},
	createJSColor:function(){
		var data = $("#HKJS").find(".count td");
		//统计每个马的总数
		var countLine = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var countLineSort = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var dengData =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var lineMax = ContentScript.getLineMaxValue(data);
		var has5Data=false;
		var has1Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			if(item>=1 && item<=14){
				var val = parseFloat($(this).text())
				countLine[item-1] += val ;
				countLineSort[item-1] += val ;
				// 如果有5分钟的基数的时候
				if(has5Data){
					if(min5Line[item-1]+2 <= val){
						dengData[item-1]= val;
					}
				}
				// 如果有1分钟的基数的时候
				if(has1Data){
					if(ContentScript.resultJSCount[item-1] < val){
						ContentScript.resultJSCount[item-1]= val;
					}
				}
				
				//最大显示黄色
				if(lineMax[line]<=val && val >0){
					$(this).css("background-color","orange");
				}
			}
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					min5Line[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(item==0 && $(this).text()=="1"){
				has1Data =true;
				for(var i=1;i<=14;i++){
					ContentScript.resultJSCount[i-1]= parseFloat($(data[index+i]).text());	
				}
			}
			
			index++;
		});
		countLineSort.sort(function(a,b){return a>b?1:-1});;
		//显示统计 并且排名前3的显示黄色背景
	    $("#countJS").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(countLine[index-1] >0 && countLineSort[11]<=countLine[index-1]){
	    			$(this).text(countLine[index-1]).css("background-color","orange")
	    		}else{
	    			$(this).text(countLine[index-1]).css("background-color","")
	    		}
	    	}
	    	index++;
	    });
		//显示灯  以5分钟为基数 超过两个的显示绿色 background-color:#00FF00;
		$("#deng").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(dengData[index-1]>0){
	    			$(this).css("background-color","#00FF00")
	    		}
	    	}
	    	index++;
	  });
	},
	allOnitEvent: function() {
		ContentScript.timerSearch = self.setInterval(function() {
			var resultFirst;
			var signInfo = ContentScript.GetSignInInfo();
			var itemName = "a"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
			if (host.indexOf("Q.jsp") >= 0) {
				resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');
				var postData = {};
	            
	            postData.race_type = signInfo.RaceType;
				postData.race_date = signInfo.RaceDate;
				postData.Data = resultFirst;
				
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					localStorage.setItem(itemName,JSON.stringify(postData));
				}else{
					localStorage.setItem(itemName,JSON.stringify(postData));
				}
			}else{
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					resultFirst=null;
				}else{ 
					resultFirst = $.parseJSON(localStorage.getItem(itemName)).Data;
					ContentScript.createJSHtml(resultFirst);
					ContentScript.createJSColor();
				}
			}
            
            if(resultFirst==null || resultFirst==undefined ){
            	return;
            }
			return;
		}, 1000);
	},
	createJSHtml:function(resultFirst){
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse ==null || $(this)[0].hourse == undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}
			});

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;
			
			if(isExistsJSTime==false){
				isExistJS =true;
			}else{
				if (isExistsJSTime) {
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistJS = true;
							return;
						}
					});
				}
			}
				
				if (!isExistJS) {
					var item = {};
					item.changchi = cchi;
					item.currentPMTime = currentPMTime;
					item.Data = hourseCount;
					ContentScript.monitorJSQTimeData.push(item);
					
					ContentScript.monitorJSQTimeData.sort(function(a, b) {
						return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
					});
					
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								tempHtml += '<td width="50px">' + tempCount + '</td>';
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				
				var htmlJS = '<table id="HKJS" class="gridtable" style="width:900px">';
				htmlJS += '<tr><th width="65px">HK脚数</th>';
				
				for (var i = 1; i <= 14; i++) {
					htmlJS += '<th width="50px">' + i + '</th>';
				}
				htmlJS += '<th></th></tr>'
				
				var HeardHtml = '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSDataOneDay[i-1] + '</td>';
				}
				HeardHtml += '<td>日</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData60Min[i-1] + '</td>';
				}
				HeardHtml += '<td>60</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData30Min[i-1] + '</td>';
				}
				HeardHtml += '<td>30</td></tr>';
				
				
				var htmlJSCount ="";
				htmlJSCount += '<tr id="countJS" style="background-color:#fff68f" ><td style="background-color:#fff68f">合脚</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f"></td>';
			    }
				htmlJSCount += '<td >合脚</td></tr>';
				
				
				var htmlJSDeng ="";
				htmlJSDeng += '<tr id="deng" style="background-color:#fff68f" ><td style="background-color:#fff68f">灯</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSDeng += '<td >  </td>';
			    }
				htmlJSDeng += '<td style="background-color:#fff68f">灯</td></tr>';
				
				var htmlJSEnd ="";
				htmlJSEnd += '<tr><td></th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSEnd += '<td > '+ i +' </td>';
			    }
				htmlJSEnd += '<td ></td></tr>';
				
				htmlJSEnd += '<tr><td width="65px"></td>';
				for (var i = 1; i <= 14; i++){
					htmlJSEnd += '<td>' + ContentScript.handerJSEndData[i-1] + '</td>';
				}
				htmlJSEnd += '<td></td></tr>';

				$("#divCreateJS").empty();
				$("#divCreateJS").append(htmlJS + HeardHtml + ContentScript.tempJSHtml + htmlJSDeng + htmlJSCount + htmlJSEnd +'</table>');
			
	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100" || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100"  || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},
	CreateHtmlElementPage:function(){
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
		htmlList += '<div id="dragTable" style="background:white;width: 900px; height: 800px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 800px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">新版统计相关报表软件 &nbsp;&nbsp;<select width="80px" id="notNeed123">'
		htmlList += '<option value="1">需要录入赔率</option><option value="2">不需要录入赔率</option></select> &nbsp;&nbsp;&nbsp;&nbsp;脚数阀值<input type="number" id="JSLimits" step="1" style="width: 50px;" value="4" /></h3>';
		htmlList += '<div id="divEditTable" style="float: left;">'
		htmlList += '<table class="gridtable" style="width:860px">';
		htmlList += '<tr><th width="65px">手动输入</th><th width="55px">1</th><th width="55px">2</th><th width="55px">3</th><th width="55px">4</th><th width="55px">5</th><th width="55px">6</th><th width="55px">7</th><th width="55px">8</th><th width="55px">9</th><th width="55px">10</th><th width="55px">11</th><th width="55px">12</th><th width="55px">13</th><th width="55px">14</th></tr>';
		htmlList += '<tr id="editDataLine"><td width="65px"><select width="60px" id="insertType">'
		htmlList += '<option value="1">赔率前日</option><option value="2">赔率60分</option><option value="3">赔率30分</option>'
		htmlList += '<option value="4">票数前日</option><option value="5">票数60分</option><option value="6">票数30分</option>'
		htmlList += '<option value="7">脚数前日</option><option value="8">脚数60分</option><option value="9">脚数30分</option><option value="10">表格底部</option>'
		htmlList += '</select></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" />'
		htmlList += '</td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td></tr>';
		htmlList += '<td ><td colspan="16"><input type="button" style="width:200px;height:25px;" id="btnSave" title="提交" value="提交" text="确定"/><font color="blue" id="saveStatus"></font></td></tr></table>';
		htmlList += '</div>'
		htmlList += '<div id="divCreatePL" style="float: left;"></div>'
		htmlList += '<div id="divCreateJS" style="float: left;"></div>'
		htmlList += '<div id="divCreateTicket" style="float: left;"></div>'
		htmlList += '</div>';
		
		htmlList += '<div id="dragShowResult" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">最可能中马组合  &nbsp;&nbsp;买多少倍<input type="number" id="HowMuchPL" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits" value="700" step="100" style="width: 50px;" value="0" /> <input type="button" id="btnAllOrder" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		$("body").append(htmlList);
		
		ContentScript.HtmlAddDragEvent($("#dragTable"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult"));
		
		$("#btnAllOrder").bind("click",function(){
			var pl = parseInt($("#HowMuchPL"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder").hide();
			$("#divShowResult").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerSearch);
			clearInterval(ContentScript.timerSearchQP);
			
			$(ContentScript.orderResultList).each(function(){
				ContentScript.orderBetQ($(this)[0])
			});
		});
		
		$("#btnSave").bind("click",function(){
			var type = $("#insertType").val();
			switch(type)
			{
				case "1":
				{
					ContentScript.handerPLDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "2":
				{
					
					ContentScript.handerPLData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "3":
				{
					
					ContentScript.handerPLData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "4":
				{
					
					ContentScript.handerTicketDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "5":
				{
					
					ContentScript.handerTicketData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "6":
				{
					ContentScript.handerTicketData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "7":
				{
					
					ContentScript.handerJSDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "8":
				{
					
					ContentScript.handerJSData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "9":
				{
					
					ContentScript.handerJSData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "10":
				{
					
					ContentScript.handerJSEndData=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSEndData.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				
			}
			
			for(var i=0;i<14;i++){
				$($("#editDataLine").find("input").eq(i)).val("0");
			}
			$("#saveStatus").text("保存成功");
		});
	},
	orderBetQ:function(obj){
		var y;
		try{
			y = view1.options[view1.selectedIndex].value;
		}catch(e){
			y = $(".dd-selected-value").val();
		}
		var Limits = $("#Limits").val()
		var signInfo = ContentScript.GetSignInInfo();
		var postData = {};
		postData.task = "betBox";
		postData.combo ="box";
		postData.Tix = parseInt(obj.countJS) * parseInt($("#HowMuchPL").val());//多少票
		postData.Race = parseInt(y);
		if(parseInt(obj.hourse1)>parseInt(obj.hourse2) ){
			postData.Hss = obj.hourse2+"_"+obj.hourse1;
		}else{
			postData.Hss = obj.hourse1+"_"+obj.hourse2;
		}
		postData.type = "BET";
		postData.amount = 100;
		postData.fclmt = parseInt(Limits);
		postData.race_type = signInfo.RaceType;
		postData.race_date = signInfo.RaceDate;
	    postData.show = parseInt(y);
		postData.rd = Math.random();
		postData.post = 1;
		postData.fctype=0;
		///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
		///forecast?task=betBox&combo=box&Tix=10&Race=1&Hss=1_2&fctype=0&type=BET&amount=80&fclmt=700&race_type=3H&race_date=10-04-2016&show=1&post=1&rd=0.7604487739642092
		$.ajax({
					type: "get",
					url: ContentScript.urlX +"/forecast",
					data: postData,
					success: function (msg) {
						console.log(msg);
					},
					error:function(e){
						console.log(e);
					}
				});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
	ContentScript.onInit();
}        
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V708</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	handerTicketList:['日','60分','30分'],
	handerJSList:['日','60分','30分'],
	handerPLHeadList:['日','60分','15分'],
	handerPLFooterList:['10%','25%'],
	orderResultList:[],
	urlX: "http://"+window.location.host,
	handerPLDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerTicketDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSEndData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	resultPL3Yellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPL1MinYellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultJSCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	tempJSHtml:"",
	tempTicketHtml:"",
	tempPLHtml:"",
	ChangePervChangCi:0,
	monitorTicketTimeList: [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorPLTimeList: [900,420,300,60],
	monitorJSTimeList:     [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			//,0,-30,-50,-70,-90
			if(resultValue<=0 && resultValue>-360){
				if (resultValue >-30  && resultValue<=0) {
					return 0;
				}
				if (resultValue >-50  && resultValue<=-30) {
					return -30;
				}
				if (resultValue >-70  && resultValue<=-50) {
					return -50;
				}
				if (resultValue >-90  && resultValue<=-70) {
					return -70;
				}
				if (resultValue<=-90) {
					return -90;
				}
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		
		if (TIMER > 15 && TIMER<=20) {
			return 1200;
		}
		
		if (TIMER > 10 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 7 && TIMER<=10) {
			return 600;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 3 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER > 2 && TIMER<=3) {
			return 180;
		}
		
		if (TIMER > 1 && TIMER<=2) {
			return 120;
		}
		
		if (TIMER<=1) {
			return 60;
		}
		
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return 0;
			}
			return 0;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 7 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 1 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER<=1) {
			return 60;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		ContentScript.CreateHtmlElementPage();

		ContentScript.timerSearchQP  = self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if(isTicketTime==false){
				isExistTicket=true;
			}else{
				if (isTicketTime &&  !isNaN(currentPMTime)) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistTicket = true;
							return;
						}
					});
				}
			}

			if(isPeiLvTime==false){
				isExistPL=true;
			}else{
				if (isPeiLvTime && !isNaN(currentPLTime)) {
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPLTime) {
							isExistPL = true;
							return;
						}
					});
				}
			}
			


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPLTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
            
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
			});
			
			
				var htmlTicket = '<table id="HKTicket" class="gridtable" style="width:900px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketDataOneDay[i-1] + '</td>';
				}
				htmlTicket += '<td>日</td></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData60Min[i-1] + '</td>';
				}
				htmlTicket += '<td>60</td></tr>';
				
				htmlTicket += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData30Min[i-1] + '</td>';
				}
				htmlTicket += '<td>30</td></tr>';
				
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempTicket="";
				if (!isExistTicket) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempTicket += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempTicket += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempTicket += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempTicket += '<td width="50px">' + ContentScript.getTicketByHourse(temp.Data, i) + '</td>';
							}
							tempTicket += '<td></td></tr>';
						}
					});
					ContentScript.tempTicketHtml = tempTicket;
				}

				$("#divCreateTicket").empty();
				$("#divCreateTicket").append(htmlTicket+ContentScript.tempTicketHtml);
			

			
				var htmlPeiLv = '<table id="HKPL" class="gridtable" style="width:900px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLDataOneDay[i-1] + '</td>';
				}
				htmlPeiLv += '<td>日</td></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData60Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>60</td></tr>';
				
				htmlPeiLv += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData30Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>30</td></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
                var tempPL = "";
                if (!isExistPL) {
                	var FirstTemp=[];
	                var HadChangeTime = true;
	                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
	                if(LastData!=undefined && LastData!=null){
	                	if(LastData.currentPMTime<=420){
		                	FirstTemp = LastData.Data;
		                }else{
		                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
		                		HadChangeTime = false;
		                	}else{
		                		$(ContentScript.monitorPLTimeData).each(function(item){
		                			var temp = $(this)[0];
		                			if(temp.currentPMTime==420){
		                				FirstTemp = temp.Data;
		                				return;
		                			}
		                		});
		                	}
		                }
	                }
	                
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempPL += '<tr class="count"><td width="50px">30分前</th>';
								}else{
									tempPL += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempPL += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempPL += '<td width="50px">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</td>';
							}
							tempPL += '<td></td></tr>';
						}
					});
					ContentScript.tempPLHtml = tempPL;
				}
				
				var htmlPeiLv2="";
				htmlPeiLv2 += '<tr id="line10"><td width="65px">10%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2+='<td></td></tr>';
				
				htmlPeiLv2 += '<tr id="line25"><td width="65px">25%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2 +='<td></td></tr>';
				
				console.log(1);
				$("#divCreatePL").empty();
				$("#divCreatePL").append(htmlPeiLv+ContentScript.tempPLHtml+htmlPeiLv2);
			
			ContentScript.createPLColor();
			ContentScript.createTicketColor();
			ContentScript.createResultHtml();
		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	createPLColor:function(){
		var notNeed123 = ($("#notNeed123").val()=="2");
		var data = $("#HKPL").find(".count td");
		var change10 =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var change25=  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		if(notNeed123){
			var has15Data = false;
			var plFirst = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			$(data).each(function(index){
				
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(line<=2){
					return;
				}
				
				if(item==0 && $(this).text()=="15"){
					has15Data = true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
					plFirst =pl;
				}
				
				if(has15Data && line>2 && item>=1 && item<=14 && $(data[line*16]).text()=="1"){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				
				
				if(line==3 && $(data[line*16]).text()=="15" && item>=1 && item<=14){
					var nextLine = parseFloat($(data[index+16]).text());
					var nextLine2 = parseFloat($(data[index+32]).text());
					if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
						$(this).css("background-color","orange");
						$(data[index+16]).css("background-color","orange");
						$(data[index+32]).css("background-color","orange");
						ContentScript.resultPL3Yellow[item-1]=1;
					}
				}
				
				if(line==6 && item>=1 && item<=14){
					if(plFirst[item-1]>=val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="1"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			});
		}else{
			var plFirst = ContentScript.handerPLDataOneDay;
			var has5Data=false;
			$(data).each(function(index){
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(item==0 && $(this).text()=="5"){
					has5Data =true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
				}
				
				if(has5Data && line>0 && item>=1 && item<=14){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				if(line<=2 && item>=1 && item<=14){
					if(line==0){
						var nextLine = parseFloat($(data[index+16]).text());
						var nextLine2 = parseFloat($(data[index+32]).text());
						if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
							$(this).css("background-color","orange");
							$(data[index+16]).css("background-color","orange");
							$(data[index+32]).css("background-color","orange");
							ContentScript.resultPL3Yellow[item-1]=1;
						}
					}
				}
				
				if(line>2 && item>=1 && item<=14){
					if(plFirst[item-1]>val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="1"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			} );
		}
		
		$("#line10").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change10[index-1]>0){
						$(this).css("background-color","orange");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		$("#line25").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change25[index-1]>0){
						ContentScript.resultPLCount[index-1] = 1;
						$(this).css("background-color","red");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		for(var item=0;item<14;item++){
			if(ContentScript.resultPL3Yellow[item]>0 && ContentScript.resultPL1MinYellow[item]>0){
				ContentScript.resultPLCount[item]=1;
			}
		}
		
	},
	createTicketColor:function(){
		var data = $("#HKTicket").find(".count td");
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		var lineMax = ContentScript.getLineMaxValue(data);
		$(data).each(function(index){
			var line = parseInt(index/16);
			var item = index%16;
			var val = parseFloat($(this).text())
			if(item>=1 && item<=14){
				if(lineMax[line]<=val && val>0){
					$(this).css("background-color","orange");
				}
			}
			index++;
		});
	},
	getLineMaxValue:function(obj){
		var retVal = [];
		var line = parseInt(obj.length/16);
		for(var i=0;i<line;i++){
			var lineMax=0;
			for(var j=0;j<16;j++){
			  if(j>=1 && j<=14){
			  	  var temp = parseFloat($(obj[i*16+j]).text());
				  if(temp>lineMax){
				  	lineMax= temp;
				  }
			  }
			}
			retVal.push(lineMax);
		}
		return retVal;
	},
	createResultHtml:function(){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th><th>购买</th></tr>';
		var JSLimits = parseInt($("#JSLimits").val());
		var HowMuchPL= parseInt($("#HowMuchPL").val());
		var masterList=[];
		for(var item=0;item<14;item++){
			if(ContentScript.resultPLCount[item]>0 && ContentScript.resultJSCount[item]>=JSLimits){
				masterList.push(item+1);	
			}
		}
		var resultList =[];
		var jsList=[];
		var countMa =0;
		if(masterList.length>0){
			for(var i=0;i<masterList.length;i++){
				for(var j=0;j<14;j++){
					if(ContentScript.resultJSCount[j]>0){
						jsList.push(ContentScript.resultJSCount[j]);
						if(masterList[i]!=j+1){
							var item ={"id":Math.random(),"hourse1":masterList[i],"hourse2":j+1,"countJS":ContentScript.resultJSCount[j]}
							resultList.push(item);	
							countMa+=ContentScript.resultJSCount[j];
						}
					}
				}
			}
			
			resultList.sort(function(a, b) {
				return parseInt(a["countJS"]) < parseInt(b["countJS"]) ? 1 : parseInt(a["countJS"]) == parseInt(b["countJS"]) ? 0 : -1;
			});
			
			 
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this)[0].hourse1 + '-' + $(this)[0].hourse2 +'</td><td>'+ $(this)[0].countJS +'</td><td><input type="button" value="购买" class="orderOne"/><input type="hidden" class="hiddenOrderData" value="'+ $(this)[0].id +'"/></td></tr>';
			});
			
			ContentScript.orderResultList = resultList;
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td><td>'+ parseInt(countMa)*parseInt(HowMuchPL) +'</td></tr>';
			
			$("#divShowResult").empty();
		    $("#divShowResult").append(htmlJS +'</table>');	
		    
		    $(".orderOne").bind("click",function(){
				$(this).hide();
				//下单即不再计算马
				clearInterval(ContentScript.timerSearch);
			    clearInterval(ContentScript.timerSearchQP);
				
				var data = $(this).parent().find(".hiddenOrderData").val();
				$(ContentScript.orderResultList).each(function(){
					if(data==$(this)[0].id){
						ContentScript.orderBetQ($(this)[0]);
					}
				});
			})
		}
	},
	createJSColor:function(){
		var data = $("#HKJS").find(".count td");
		//统计每个马的总数
		var countLine = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var countLineSort = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var dengData =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var lineMax = ContentScript.getLineMaxValue(data);
		var has5Data=false;
		var has1Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			if(item>=1 && item<=14){
				var val = parseFloat($(this).text())
				countLine[item-1] += val ;
				countLineSort[item-1] += val ;
				// 如果有5分钟的基数的时候
				if(has5Data){
					if(min5Line[item-1]+2 <= val){
						dengData[item-1]= val;
					}
				}
				// 如果有1分钟的基数的时候
				if(has1Data){
					if(ContentScript.resultJSCount[item-1] < val){
						ContentScript.resultJSCount[item-1]= val;
					}
				}
				
				//最大显示黄色
				if(lineMax[line]<=val && val >0){
					$(this).css("background-color","orange");
				}
			}
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					min5Line[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(item==0 && $(this).text()=="1"){
				has1Data =true;
				for(var i=1;i<=14;i++){
					ContentScript.resultJSCount[i-1]= parseFloat($(data[index+i]).text());	
				}
			}
			
			index++;
		});
		countLineSort.sort(function(a,b){return a>b?1:-1});;
		//显示统计 并且排名前3的显示黄色背景
	    $("#countJS").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(countLine[index-1] >0 && countLineSort[11]<=countLine[index-1]){
	    			$(this).text(countLine[index-1]).css("background-color","orange")
	    		}else{
	    			$(this).text(countLine[index-1]).css("background-color","")
	    		}
	    	}
	    	index++;
	    });
		//显示灯  以5分钟为基数 超过两个的显示绿色 background-color:#00FF00;
		$("#deng").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(dengData[index-1]>0){
	    			$(this).css("background-color","#00FF00")
	    		}
	    	}
	    	index++;
	  });
	},
	allOnitEvent: function() {
		ContentScript.timerSearch = self.setInterval(function() {
			var resultFirst;
			var signInfo = ContentScript.GetSignInInfo();
			var itemName = "a"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
			if (host.indexOf("Q.jsp") >= 0) {
				resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');
				var postData = {};
	            
	            postData.race_type = signInfo.RaceType;
				postData.race_date = signInfo.RaceDate;
				postData.Data = resultFirst;
				
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					localStorage.setItem(itemName,JSON.stringify(postData));
				}else{
					localStorage.setItem(itemName,JSON.stringify(postData));
				}
			}else{
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					resultFirst=null;
				}else{ 
					resultFirst = $.parseJSON(localStorage.getItem(itemName)).Data;
					ContentScript.createJSHtml(resultFirst);
					ContentScript.createJSColor();
				}
			}
            
            if(resultFirst==null || resultFirst==undefined ){
            	return;
            }
			return;
		}, 1000);
	},
	createJSHtml:function(resultFirst){
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse ==null || $(this)[0].hourse == undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}
			});

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;
			
			if(isExistsJSTime==false){
				isExistJS =true;
			}else{
				if (isExistsJSTime) {
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistJS = true;
							return;
						}
					});
				}
			}
				
				if (!isExistJS) {
					var item = {};
					item.changchi = cchi;
					item.currentPMTime = currentPMTime;
					item.Data = hourseCount;
					ContentScript.monitorJSQTimeData.push(item);
					
					ContentScript.monitorJSQTimeData.sort(function(a, b) {
						return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
					});
					
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								tempHtml += '<td width="50px">' + tempCount + '</td>';
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				
				var htmlJS = '<table id="HKJS" class="gridtable" style="width:900px">';
				htmlJS += '<tr><th width="65px">HK脚数</th>';
				
				for (var i = 1; i <= 14; i++) {
					htmlJS += '<th width="50px">' + i + '</th>';
				}
				htmlJS += '<th></th></tr>'
				
				var HeardHtml = '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSDataOneDay[i-1] + '</td>';
				}
				HeardHtml += '<td>日</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData60Min[i-1] + '</td>';
				}
				HeardHtml += '<td>60</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData30Min[i-1] + '</td>';
				}
				HeardHtml += '<td>30</td></tr>';
				
				
				var htmlJSCount ="";
				htmlJSCount += '<tr id="countJS" style="background-color:#fff68f" ><td style="background-color:#fff68f">合脚</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f"></td>';
			    }
				htmlJSCount += '<td >合脚</td></tr>';
				
				
				var htmlJSDeng ="";
				htmlJSDeng += '<tr id="deng" style="background-color:#fff68f" ><td style="background-color:#fff68f">灯</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSDeng += '<td >  </td>';
			    }
				htmlJSDeng += '<td style="background-color:#fff68f">灯</td></tr>';
				
				var htmlJSEnd ="";
				htmlJSEnd += '<tr><td></th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSEnd += '<td > '+ i +' </td>';
			    }
				htmlJSEnd += '<td ></td></tr>';
				
				htmlJSEnd += '<tr><td width="65px"></td>';
				for (var i = 1; i <= 14; i++){
					htmlJSEnd += '<td>' + ContentScript.handerJSEndData[i-1] + '</td>';
				}
				htmlJSEnd += '<td></td></tr>';

				$("#divCreateJS").empty();
				$("#divCreateJS").append(htmlJS + HeardHtml + ContentScript.tempJSHtml + htmlJSDeng + htmlJSCount + htmlJSEnd +'</table>');
			
	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {	
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100" || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100"  || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},
	CreateHtmlElementPage:function(){
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
		htmlList += '<div id="dragTable" style="background:white;width: 900px; height: 800px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 800px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">新版统计相关报表软件 &nbsp;&nbsp;<select width="80px" id="notNeed123">'
		htmlList += '<option value="1">需要录入赔率</option><option value="2">不需要录入赔率</option></select> &nbsp;&nbsp;&nbsp;&nbsp;脚数阀值<input type="number" id="JSLimits" step="1" style="width: 50px;" value="4" /></h3>';
		htmlList += '<div id="divEditTable" style="float: left;">'
		htmlList += '<table class="gridtable" style="width:860px">';
		htmlList += '<tr><th width="65px">手动输入</th><th width="55px">1</th><th width="55px">2</th><th width="55px">3</th><th width="55px">4</th><th width="55px">5</th><th width="55px">6</th><th width="55px">7</th><th width="55px">8</th><th width="55px">9</th><th width="55px">10</th><th width="55px">11</th><th width="55px">12</th><th width="55px">13</th><th width="55px">14</th></tr>';
		htmlList += '<tr id="editDataLine"><td width="65px"><select width="60px" id="insertType">'
		htmlList += '<option value="1">赔率前日</option><option value="2">赔率60分</option><option value="3">赔率30分</option>'
		htmlList += '<option value="4">票数前日</option><option value="5">票数60分</option><option value="6">票数30分</option>'
		htmlList += '<option value="7">脚数前日</option><option value="8">脚数60分</option><option value="9">脚数30分</option><option value="10">表格底部</option>'
		htmlList += '</select></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" />'
		htmlList += '</td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td></tr>';
		htmlList += '<td ><td colspan="16"><input type="button" style="width:200px;height:25px;" id="btnSave" title="提交" value="提交" text="确定"/><font color="blue" id="saveStatus"></font></td></tr></table>';
		htmlList += '</div>'
		htmlList += '<div id="divCreatePL" style="float: left;"></div>'
		htmlList += '<div id="divCreateJS" style="float: left;"></div>'
		htmlList += '<div id="divCreateTicket" style="float: left;"></div>'
		htmlList += '</div>';
		
		htmlList += '<div id="dragShowResult" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">最可能中马组合  &nbsp;&nbsp;买多少倍<input type="number" id="HowMuchPL" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits" value="700" step="100" style="width: 50px;" value="0" /> <input type="button" id="btnAllOrder" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		$("body").append(htmlList);
		
		ContentScript.HtmlAddDragEvent($("#dragTable"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult"));
		
		$("#btnAllOrder").bind("click",function(){
			var pl = parseInt($("#HowMuchPL"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder").hide();
			$("#divShowResult").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerSearch);
			clearInterval(ContentScript.timerSearchQP);
			
			$(ContentScript.orderResultList).each(function(){
				ContentScript.orderBetQ($(this)[0])
			});
		});
		
		$("#btnSave").bind("click",function(){
			var type = $("#insertType").val();
			switch(type)
			{
				case "1":
				{
					ContentScript.handerPLDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "2":
				{
					
					ContentScript.handerPLData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "3":
				{
					
					ContentScript.handerPLData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "4":
				{
					
					ContentScript.handerTicketDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "5":
				{
					
					ContentScript.handerTicketData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "6":
				{
					ContentScript.handerTicketData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "7":
				{
					
					ContentScript.handerJSDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "8":
				{
					
					ContentScript.handerJSData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "9":
				{
					
					ContentScript.handerJSData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "10":
				{
					
					ContentScript.handerJSEndData=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSEndData.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				
			}
			
			for(var i=0;i<14;i++){
				$($("#editDataLine").find("input").eq(i)).val("0");
			}
			$("#saveStatus").text("保存成功");
		});
	},
	orderBetQ:function(obj){
		var y;
		try{
			y = view1.options[view1.selectedIndex].value;
		}catch(e){
			y = $(".dd-selected-value").val();
		}
		var Limits = $("#Limits").val()
		var signInfo = ContentScript.GetSignInInfo();
		var postData = {};
		postData.task = "betBox";
		postData.combo ="box";
		postData.Tix = parseInt(obj.countJS) * parseInt($("#HowMuchPL").val());//多少票
		postData.Race = parseInt(y);
		if(parseInt(obj.hourse1)>parseInt(obj.hourse2) ){
			postData.Hss = obj.hourse2+"_"+obj.hourse1;
		}else{
			postData.Hss = obj.hourse1+"_"+obj.hourse2;
		}
		postData.type = "BET";
		postData.amount = 100;
		postData.fclmt = parseInt(Limits);
		postData.race_type = signInfo.RaceType;
		postData.race_date = signInfo.RaceDate;
	    postData.show = parseInt(y);
		postData.rd = Math.random();
		postData.post = 1;
		postData.fctype=0;
		///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
		///forecast?task=betBox&combo=box&Tix=10&Race=1&Hss=1_2&fctype=0&type=BET&amount=80&fclmt=700&race_type=3H&race_date=10-04-2016&show=1&post=1&rd=0.7604487739642092
		$.ajax({
					type: "get",
					url: ContentScript.urlX +"/forecast",
					data: postData,
					success: function (msg) {
						console.log(msg);
					},
					error:function(e){
						console.log(e);
					}
				});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
	ContentScript.onInit();
}            
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V666</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	monitorTicketTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorPLTimeList: [2400,1800, 0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorJSTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	monitorCountList:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	ccEndTime: null,
	PervChangCi:0, 
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER <= 30 && TIMER > 20) {
			return 1800;
		}
		if (TIMER <= 20 && TIMER > 15) {
			return 1200;
		}
		if (TIMER <= 15 && TIMER > 10) {
			return 900;
		}
		if (TIMER <= 10 && TIMER > 7) {
			return 600;
		}
		if (TIMER <= 7 && TIMER > 5) {
			return 420;
		}
		if (TIMER <= 5 && TIMER > 3) {
			return 300;
		}
		if (TIMER <= 3 && TIMER > 2) {
			return 180;
		}
		if (TIMER <= 2 && TIMER > 1) {
			return 120;
		}
		if (TIMER <= 1 && TIMER > 0) {
			return 60;
		}
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER > 0 && TIMER<=30) {
			return 1800;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));

		var htmlList1 = '<div id="ticket" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList1 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢票数统计</span></h3>';
		htmlList1 += '<div id="divTicketCreate"></div>'
		htmlList1 += '</div>';
		$("body").append(htmlList1);
		ContentScript.HtmlAddDragEvent($("#ticket"));

		var htmlList2 = '<div id="peilv" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList2 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢赔率统计</span></h3>';
		htmlList2 += '<div id="divPeilvCreate"></div>'
		htmlList2 += '</div>';
		$("body").append(htmlList2);
		ContentScript.HtmlAddDragEvent($("#peilv"));

		self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if (isTicketTime &&  !isNaN(currentPMTime)) {
				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistTicket = true;
						return;
					}
				});
			}

			if (isPeiLvTime && !isNaN(currentPMTime)) {
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistPL = true;
						return;
					}
				});
			}


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}

			var htmlListQPRight = '<table class="bettable" style="width:250px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th><th width="20%">最多</th><th width="20%">最少</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].ticketsw + '</td>';
				htmlListQPRight += '<td>' + maxValue + '</td>';
				htmlListQPRight += '<td>' + minValue + '</td>';
				htmlListQPRight += '</tr>';
			});
			htmlListQPRight += '</table>';
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);

			if (!isExistTicket) {
				var htmlTicket = '<table class="bettable" style="width:800px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlTicket += '<tr><th width="">30分前</th>';
							}else{
								htmlTicket += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlTicket += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							htmlTicket += '<th width="">' + ContentScript.getTicketByHourse(temp.Data, i) + '</th>';
						}
						htmlTicket += '</tr>';
					}
				});

				$("#divTicketCreate").empty();
				$("#divTicketCreate").append(htmlTicket);
			}

			if (!isExistPL) {
				var htmlPeiLv = '<table class="bettable" style="width:800px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

                var FirstTemp=[];
                var HadChangeTime = true;
                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
                if(LastData.currentPMTime<=420){
                	FirstTemp = LastData.Data;
                }else{
                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
                		HadChangeTime = false;
                	}else{
                		$(ContentScript.monitorPLTimeData).each(function(item){
                			var temp = $(this)[0];
                			if(temp.currentPMTime==420){
                				FirstTemp = temp.Data;
                				return;
                			}
                		});
                	}
                }
                
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlPeiLv += '<tr><th width="">30分前</th>';
							}else{
								htmlPeiLv += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlPeiLv += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							if(HadChangeTime){
								if(temp.currentPMTime>420){
									htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
								}else{
									var currentValue = ContentScript.getWPPLByHourse(temp.Data, i);
									var firstValue = ContentScript.getWPPLByHourse(FirstTemp, i);
									if(currentValue!=0&& firstValue!=0 && parseFloat(currentValue) <= (parseFloat(firstValue)*0.9) && parseFloat(currentValue) > (parseFloat(firstValue)*0.75)){
									    htmlPeiLv += '<th width=""><font color="orange">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</font></th>';
									}
									else if(currentValue!=0 && firstValue!=0 && parseFloat(currentValue) <= (parseFloat(firstValue)*0.75)){
										htmlPeiLv += '<th width=""><font color="red">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</font></th>';
									}
									else{
										htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
									}
								}
								
							}else{
								htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
							}
						}
						htmlPeiLv += '</tr>';
					}
				});
				console.log(1);
				$("#divPeilvCreate").empty();
				$("#divPeilvCreate").append(htmlPeiLv);
			}

		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		ContentScript.HtmlAddDragEvent($("#dragJSQ"));
		ContentScript.HtmlAddDragEvent($("#dragJSQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);


		ContentScript.timerSearch = self.setInterval(function() {

			var start = $("#startDiscount").val();
			var end = $("#endDiscount").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');

			var htmlList = '<table class="bettable" style="width:400px">';
			htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultFirst).each(function(index) {
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlList += '<tr style="line-height: 30px;">';
				htmlList += '<td>' + $(this)[0].hourse + '</td>';
				htmlList += '<td>' + $(this)[0].tickets + '</td>';
				htmlList += '</tr>';
			});

			htmlList += '</table><br/>';
			$("#divCreateQLeft").empty();
			$("#divCreateQLeft").append(htmlList);

			var htmlListQRight = '<table class="bettable" style="width:150px">';
			htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount;
				ContentScript.monitorJSQTimeData.push(item);
				
				ContentScript.monitorJSQTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var zeroDataList = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var zeroMaxDataList = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var tempHtml = "";
				var firstHeard = false;
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							if(!firstHeard)
							{
								ContentScript.monitorCountList[i-1] = tempCount;
							}
							if(temp.currentPMTime ==0){
								zeroDataList[i-1]=zeroDataList[i-1] + tempCount;
							}
							if(temp.currentPMTime<0){
								if(zeroMaxDataList[i-1] < tempCount){
									zeroMaxDataList[i-1]= tempCount;
								}
							}
							countList[i-1]=countList[i-1] + tempCount;
							if(parseInt(tempCount)>= parseInt($("#jsRedColor").val())){
								tempHtml += '<th width=""><font color="Red">' + tempCount + '</font></th>';
							}else{
								tempHtml += '<th width="">' + tempCount + '</th>';
							}
							
						}
						tempHtml += '</tr>';
					}
					firstHeard=true;
				});
				
				var htmlJS = '';
				htmlJS += '<table class="bettable" style="width:800px">';
				htmlJS += '<tr id="JSheader"><td width="65px">HK脚数</td>';
				
				for (var i = 1; i <= 14; i++) {
					if(zeroMaxDataList[i-1]>=(zeroDataList[i-1]+2)){
						htmlJS += '<td style="background-color:#00FF00;">' + i + '</td>';
					}else
					{
						htmlJS += '<td>' + i + '</td>';
					}
				}
				
				var htmlJSCount ="";
				htmlJSCount += '<tr style="background-color:#fff68f" ><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f">' + countList[i-1] + '</td>';
			    }
				htmlJSCount += '</tr>';
				$("#divCreateJSQ").empty();
				$("#divCreateJSQ").append(htmlJS + htmlJSCount +tempHtml+'</table>');
			}

			$(hourseCount).each(function(index) {
				htmlListQRight += '<tr style="line-height: 30px;">';
				htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQRight += '</tr>';
			});
			$("#divCreateQRight").empty();
			$("#divCreateQRight").append(htmlListQRight);
		}, 1000);

		ContentScript.timerSearch = self.setInterval(function() {
			var start = $("#startDiscountQP").val();
			var end = $("#endDiscountQP").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultSecond = ContentScript.GetTransactionDataByArea('vrtFC_3', 'FC_DATA_3');

			var hourseCount1 = [];

			var htmlListQP = '<table class="bettable" style="width:400px">';
			htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			resultSecond.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultSecond).each(function(index) {

				var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount1).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount1.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount1.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlListQP += '<tr style="line-height: 30px;">';
				htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
				htmlListQP += '</tr>';
			});
			htmlListQP += '</table>';
			//$("#divCreateQPLeft").empty();
			//$("#divCreateQPLeft").append(htmlListQP);

			var htmlListQPRight = '<table class="bettable" style="width:150px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorJSQPTimeData.push(item);

                var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var htmlJS = '<table class="bettable" style="width:800px">';
				htmlJS += '<tr><th width="65px">HK脚数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorJSQPTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempHtml="";
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && !isNaN(temp.currentPMTime)) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							countList[i-1]= countList[i-1] + tempCount;
							tempHtml += '<th width="">' + tempCount + '</th>';
						}
						tempHtml += '</tr>';
					}
				});
				
				htmlJS += '<tr style="background-color:#fff68f"><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJS += '<td style="background-color:#fff68f">' + countList[i-1] + '</th>';
			    }
				htmlJS += '</tr>';

				//$("#divCreateJSQP").empty();
				//$("#divCreateJSQP").append(htmlJS+tempHtml+'</table>');
			}

			$(hourseCount1).each(function(index) {
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQPRight += '</tr>';
			});
			$("#divCreateQPRight").empty();
			$("#divCreateQPRight").append(htmlListQPRight);

		}, 1000);

	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] && parseInt(tempArray[3]) == 0) {
					isExists = true;
					if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[3]) == 0) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="display:none;background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="display:none;background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q下注统计</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select>'
		htmlList += '买多少倍<input type="number" id="HowMuchPL" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits" value="700" step="100" style="width: 50px;" value="0" />';
		htmlList += '</h3>';
		htmlList += '<div style="float: left;">'
		htmlList += '<input id="hourse1" type="number" style="width: 40px;"/>+<input id="hourse2" type="number" style="width: 40px;"/>+<input id="hourse3" type="number" style="width: 40px;"/>+<input id="hourse4" type="number" style="width: 40px;"/>+<input id="hourse5" type="number" style="width: 40px;"/>'
		htmlList += '<input id="btnHourse" type="button" value="购买"/>  &nbsp;&nbsp;';
		htmlList += '</div>'
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQP" style="display:none;background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q脚数统计</h3>';
		htmlList += '<div id="divCreateJSQP" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
		
		$("#btnHourse").bind("click",function(){
			clearInterval(ContentScript.timerSearch);
			$("#btnHourse").hide();
			var hourse1 = $("#hourse1").val();
			var hourse2 = $("#hourse2").val();
			var hourse3 = $("#hourse3").val();
			var hourse4 = $("#hourse4").val();
			var hourse5 = $("#hourse5").val();
			if(hourse1){
				for(var item=0;item<14;item++){
					if(ContentScript.monitorCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.monitorCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse1;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse2){
				for(var item=0;item<14;item++){
					if(ContentScript.monitorCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.monitorCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse2;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse3){
				for(var item=0;item<14;item++){
					if(ContentScript.monitorCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.monitorCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse3;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse4){
				for(var item=0;item<14;item++){
					if(ContentScript.monitorCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.monitorCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse4;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse5){
				for(var item=0;item<14;item++){
					if(ContentScript.monitorCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.monitorCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse5;
						ContentScript.orderBetQ(obj);
					}
				}
			}
		});
		
	},
    orderBetQ:function(obj){
		var y;
		try{
			y = view1.options[view1.selectedIndex].value;
		}catch(e){
			y = $(".dd-selected-value").val();
		}
		var Limits = $("#Limits").val()
		var signInfo = ContentScript.GetSignInInfo();
		var postData = {};
		postData.task = "betBox";
		postData.combo ="box";
		postData.Tix = parseInt(obj.countJS) * parseInt($("#HowMuchPL").val());//多少票
		postData.Race = parseInt(y);
		if(parseInt(obj.hourse1)>parseInt(obj.hourse2) ){
			postData.Hss = obj.hourse2+"_"+obj.hourse1;
		}else{
			postData.Hss = obj.hourse1+"_"+obj.hourse2;
		}
		postData.type = "BET";
		postData.amount = 100;
		postData.fclmt = parseInt(Limits);
		postData.race_type = signInfo.RaceType;
		postData.race_date = signInfo.RaceDate;
	    postData.show = parseInt(y);
		postData.rd = Math.random();
		postData.post = 1;
		postData.fctype=0;
		///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
		///forecast?task=betBox&combo=box&Tix=10&Race=1&Hss=1_2&fctype=0&type=BET&amount=80&fclmt=700&race_type=3H&race_date=10-04-2016&show=1&post=1&rd=0.7604487739642092
		$.ajax({
					type: "get",
					url: ContentScript.urlX +"/forecast",
					data: postData,
					success: function (msg) {
						console.log(msg);
					},
					error:function(e){
						console.log(e);
					}
				});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}       
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V668</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	monitorTicketTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorPLTimeList: [2400,1800, 0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorJSTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	orderResultList1:[],
	orderResultList2:[],
	orderResultList3:[],
	orderResultList4:[],
	orderResultList5:[],
	currentHourseCount:[],
	timerHourseCount1:null,
	timerHourseCount2:null,
	timerHourseCount3:null,
	timerHourseCount4:null,
	timerHourseCount5:null,
	monitorCountList:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	ccEndTime: null,
	PervChangCi:0, 
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER <= 30 && TIMER > 20) {
			return 1800;
		}
		if (TIMER <= 20 && TIMER > 15) {
			return 1200;
		}
		if (TIMER <= 15 && TIMER > 10) {
			return 900;
		}
		if (TIMER <= 10 && TIMER > 7) {
			return 600;
		}
		if (TIMER <= 7 && TIMER > 5) {
			return 420;
		}
		if (TIMER <= 5 && TIMER > 3) {
			return 300;
		}
		if (TIMER <= 3 && TIMER > 2) {
			return 180;
		}
		if (TIMER <= 2 && TIMER > 1) {
			return 120;
		}
		if (TIMER <= 1 && TIMER > 0) {
			return 60;
		}
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER > 0 && TIMER<=30) {
			return 1800;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));

		var htmlList1 = '<div id="ticket" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList1 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢票数统计</span></h3>';
		htmlList1 += '<div id="divTicketCreate"></div>'
		htmlList1 += '</div>';
		$("body").append(htmlList1);
		ContentScript.HtmlAddDragEvent($("#ticket"));

		var htmlList2 = '<div id="peilv" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList2 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢赔率统计</span></h3>';
		htmlList2 += '<div id="divPeilvCreate"></div>'
		htmlList2 += '</div>';
		$("body").append(htmlList2);
		ContentScript.HtmlAddDragEvent($("#peilv"));

		self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if (isTicketTime &&  !isNaN(currentPMTime)) {
				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistTicket = true;
						return;
					}
				});
			}

			if (isPeiLvTime && !isNaN(currentPMTime)) {
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistPL = true;
						return;
					}
				});
			}


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}

			var htmlListQPRight = '<table class="bettable" style="width:250px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th><th width="20%">最多</th><th width="20%">最少</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].ticketsw + '</td>';
				htmlListQPRight += '<td>' + maxValue + '</td>';
				htmlListQPRight += '<td>' + minValue + '</td>';
				htmlListQPRight += '</tr>';
			});
			htmlListQPRight += '</table>';
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);

			if (!isExistTicket) {
				var htmlTicket = '<table class="bettable" style="width:800px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlTicket += '<tr><th width="">30分前</th>';
							}else{
								htmlTicket += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlTicket += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							htmlTicket += '<th width="">' + ContentScript.getTicketByHourse(temp.Data, i) + '</th>';
						}
						htmlTicket += '</tr>';
					}
				});

				$("#divTicketCreate").empty();
				$("#divTicketCreate").append(htmlTicket);
			}

			if (!isExistPL) {
				var htmlPeiLv = '<table class="bettable" style="width:800px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

                var FirstTemp=[];
                var HadChangeTime = true;
                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
                if(LastData.currentPMTime<=420){
                	FirstTemp = LastData.Data;
                }else{
                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
                		HadChangeTime = false;
                	}else{
                		$(ContentScript.monitorPLTimeData).each(function(item){
                			var temp = $(this)[0];
                			if(temp.currentPMTime==420){
                				FirstTemp = temp.Data;
                				return;
                			}
                		});
                	}
                }
                
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlPeiLv += '<tr><th width="">30分前</th>';
							}else{
								htmlPeiLv += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlPeiLv += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							if(HadChangeTime){
								if(temp.currentPMTime>420){
									htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
								}else{
									var currentValue = ContentScript.getWPPLByHourse(temp.Data, i);
									var firstValue = ContentScript.getWPPLByHourse(FirstTemp, i);
									if(currentValue!=0&& firstValue!=0 && parseFloat(currentValue) <= (parseFloat(firstValue)*0.9) && parseFloat(currentValue) > (parseFloat(firstValue)*0.75)){
									    htmlPeiLv += '<th width=""><font color="orange">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</font></th>';
									}
									else if(currentValue!=0 && firstValue!=0 && parseFloat(currentValue) <= (parseFloat(firstValue)*0.75)){
										htmlPeiLv += '<th width=""><font color="red">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</font></th>';
									}
									else{
										htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
									}
								}
								
							}else{
								htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
							}
						}
						htmlPeiLv += '</tr>';
					}
				});
				console.log(1);
				$("#divPeilvCreate").empty();
				$("#divPeilvCreate").append(htmlPeiLv);
			}

		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		ContentScript.HtmlAddDragEvent($("#dragJSQ"));
		ContentScript.HtmlAddDragEvent($("#dragJSQP"));
		
		
		$("#daoqitime").text(ContentScript.DaoQiTime);


		ContentScript.timerSearch = self.setInterval(function() {

			var start = $("#startDiscount").val();
			var end = $("#endDiscount").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');

			var htmlList = '<table class="bettable" style="width:400px">';
			htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse==undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlList += '<tr style="line-height: 30px;">';
				htmlList += '<td>' + $(this)[0].hourse + '</td>';
				htmlList += '<td>' + $(this)[0].tickets + '</td>';
				htmlList += '</tr>';
			});

			htmlList += '</table><br/>';
			$("#divCreateQLeft").empty();
			$("#divCreateQLeft").append(htmlList);

			var htmlListQRight = '<table class="bettable" style="width:150px">';
			htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount;
				ContentScript.monitorJSQTimeData.push(item);
				
				ContentScript.monitorJSQTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var zeroDataList = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var zeroMaxDataList = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var tempHtml = "";
				var firstHeard = false;
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							if(!firstHeard)
							{
								ContentScript.monitorCountList[i-1] = tempCount;
							}
							if(temp.currentPMTime ==0){
								zeroDataList[i-1]=zeroDataList[i-1] + tempCount;
							}
							if(temp.currentPMTime<0){
								if(zeroMaxDataList[i-1] < tempCount){
									zeroMaxDataList[i-1]= tempCount;
								}
							}
							countList[i-1]=countList[i-1] + tempCount;
							if(parseInt(tempCount)>= parseInt($("#jsRedColor").val())){
								tempHtml += '<th width=""><font color="Red">' + tempCount + '</font></th>';
							}else{
								tempHtml += '<th width="">' + tempCount + '</th>';
							}
							
						}
						tempHtml += '</tr>';
					}
					firstHeard=true;
				});
				
				var htmlJS = '';
				htmlJS += '<table class="bettable" style="width:800px">';
				htmlJS += '<tr id="JSheader"><td width="65px">HK脚数</td>';
				
				for (var i = 1; i <= 14; i++) {
					if(zeroMaxDataList[i-1]>=(zeroDataList[i-1]+2)){
						htmlJS += '<td style="background-color:#00FF00;">' + i + '</td>';
					}else
					{
						htmlJS += '<td>' + i + '</td>';
					}
				}
				
				var htmlJSCount ="";
				htmlJSCount += '<tr style="background-color:#fff68f" ><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f">' + countList[i-1] + '</td>';
			    }
				htmlJSCount += '</tr>';
				$("#divCreateJSQ").empty();
				$("#divCreateJSQ").append(htmlJS + htmlJSCount +tempHtml+'</table>');
			}
			ContentScript.currentHourseCount = hourseCount;
			$(hourseCount).each(function(index) {
				htmlListQRight += '<tr style="line-height: 30px;">';
				htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQRight += '</tr>';
			});
			$("#divCreateQRight").empty();
			$("#divCreateQRight").append(htmlListQRight);
		}, 1000);

		ContentScript.timerSearch = self.setInterval(function() {
			var start = $("#startDiscountQP").val();
			var end = $("#endDiscountQP").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultSecond = ContentScript.GetTransactionDataByArea('vrtFC_3', 'FC_DATA_3');

			var hourseCount1 = [];

			var htmlListQP = '<table class="bettable" style="width:400px">';
			htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			resultSecond.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultSecond).each(function(index) {
				if($(this)[0].hourse==undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount1).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount1.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount1.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlListQP += '<tr style="line-height: 30px;">';
				htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
				htmlListQP += '</tr>';
			});
			htmlListQP += '</table>';
			//$("#divCreateQPLeft").empty();
			//$("#divCreateQPLeft").append(htmlListQP);

			var htmlListQPRight = '<table class="bettable" style="width:150px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorJSQPTimeData.push(item);

                var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var htmlJS = '<table class="bettable" style="width:800px">';
				htmlJS += '<tr><th width="65px">HK脚数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorJSQPTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempHtml="";
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && !isNaN(temp.currentPMTime)) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							countList[i-1]= countList[i-1] + tempCount;
							tempHtml += '<th width="">' + tempCount + '</th>';
						}
						tempHtml += '</tr>';
					}
				});
				
				htmlJS += '<tr style="background-color:#fff68f"><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJS += '<td style="background-color:#fff68f">' + countList[i-1] + '</th>';
			    }
				htmlJS += '</tr>';

				//$("#divCreateJSQP").empty();
				//$("#divCreateJSQP").append(htmlJS+tempHtml+'</table>');
			}

			$(hourseCount1).each(function(index) {
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQPRight += '</tr>';
			});
			$("#divCreateQPRight").empty();
			$("#divCreateQPRight").append(htmlListQPRight);

		}, 1000);

	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] && parseInt(tempArray[3]) == 0) {
					isExists = true;
					if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[3]) == 0) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
	    htmlList = '<div id="drag" style="display:none;background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="display:none;background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q下注统计</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select>'
		htmlList += '买多少倍<input type="number" id="HowMuchPL" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits" value="700" step="100" style="width: 50px;" value="0" />';
		htmlList += '</h3>';
		htmlList += '<div style="float: left;">'
		htmlList += '<input id="hourse1" type="number" style="width: 40px;"/>+<input id="hourse2" type="number" style="width: 40px;"/>+<input id="hourse3" type="number" style="width: 40px;"/>+<input id="hourse4" type="number" style="width: 40px;"/>+<input id="hourse5" type="number" style="width: 40px;"/>'
		htmlList += '<input id="btnHourse" type="button" value="购买"/>  &nbsp;&nbsp;';
		htmlList += '</div>'
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQP" style="display:none;background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q脚数统计</h3>';
		htmlList += '<div id="divCreateJSQP" style="float: left;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragShowResult1" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">组合1&nbsp;买多少倍<input type="number" id="HowMuchPL1" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits1" value="700" step="100" style="width: 50px;" value="0" /> ';
		htmlList += ' 托马<input type="number" id="TuoMa1"  step="1" style="width: 50px;"/> <input type="button" id="btnTuoMa1" value="生成组合" />';
		htmlList += ' 脚数<input type="number" id="JiaoShu1" value="3" step="1" style="width: 50px;" value="3" /> <input type="button" id="btnAllOrder1" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult1" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		htmlList += '<div id="dragShowResult2" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">组合2&nbsp;买多少倍<input type="number" id="HowMuchPL2" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits2" value="700" step="100" style="width: 50px;" value="0" /> ';
		htmlList += ' 托马<input type="number" id="TuoMa2"  step="1" style="width: 50px;" value="" /> <input type="button" id="btnTuoMa2" value="生成组合" />';
		htmlList += '脚数<input type="number" id="JiaoShu2" value="3" step="1" style="width: 50px;" value="3" /> <input type="button" id="btnAllOrder2" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult2" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		htmlList += '<div id="dragShowResult3" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">组合3&nbsp;买多少倍<input type="number" id="HowMuchPL3" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits3" value="700" step="100" style="width: 50px;" value="0" /> ';
		htmlList += ' 托马<input type="number" id="TuoMa3"  step="1" style="width: 50px;" value="" /> <input type="button" id="btnTuoMa3" value="生成组合" />';
		htmlList += '脚数<input type="number" id="JiaoShu3" value="3" step="1" style="width: 50px;" value="3" /> <input type="button" id="btnAllOrder3" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult3" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		htmlList += '<div id="dragShowResult4" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">组合4 &nbsp;买多少倍<input type="number" id="HowMuchPL4" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits4" value="700" step="100" style="width: 50px;" value="0" /> ';
		htmlList += ' 托马<input type="number" id="TuoMa4"  step="1" style="width: 50px;" value="" /> <input type="button" id="btnTuoMa4" value="生成组合" />';
		htmlList += '脚数<input type="number" id="JiaoShu4" value="3" step="1" style="width: 50px;" value="3" /> <input type="button" id="btnAllOrder4" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult4" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		htmlList += '<div id="dragShowResult5" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">组合5&nbsp;买多少倍<input type="number" id="HowMuchPL5" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits5" value="700" step="100" style="width: 50px;" value="0" /> ';
		htmlList += ' 托马<input type="number" id="TuoMa5"  step="1" style="width: 50px;" value="" /> <input type="button" id="btnTuoMa5" value="生成组合" />';
		htmlList += ' 脚数<input type="number" id="JiaoShu5" value="3" step="1" style="width: 50px;" value="3" /> <input type="button" id="btnAllOrder5" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult5" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'

		$("body").append(htmlList);
		
		$("#btnAllOrder1").bind("click",function(){
			var pl = parseInt($("#HowMuchPL1"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder1").hide();
			$("#divShowResult1").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerHourseCount1);
			
			$(ContentScript.orderResultList1).each(function(){
				ContentScript.orderBetQ($(this)[0],"#Limits1","#HowMuchPL1");
			});
		});
		
		$("#btnAllOrder2").bind("click",function(){
			var pl = parseInt($("#HowMuchPL2"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder2").hide();
			$("#divShowResult2").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerHourseCount2);
			
			$(ContentScript.orderResultList2).each(function(){
				ContentScript.orderBetQ($(this)[0],"#Limits2","#HowMuchPL2");
			});
		});
		
		$("#btnAllOrder3").bind("click",function(){
			var pl = parseInt($("#HowMuchPL3"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder3").hide();
			$("#divShowResult3").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerHourseCount3);
			
			$(ContentScript.orderResultList3).each(function(){
				ContentScript.orderBetQ($(this)[0],"#Limits3","#HowMuchPL3");
			});
		});
		
		$("#btnAllOrder4").bind("click",function(){
			var pl = parseInt($("#HowMuchPL4"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder4").hide();
			$("#divShowResult4").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerHourseCount4);
			
			$(ContentScript.orderResultList4).each(function(){
				ContentScript.orderBetQ($(this)[0],"#Limits4","#HowMuchPL4");
			});
		});
		
		$("#btnAllOrder5").bind("click",function(){
			var pl = parseInt($("#HowMuchPL5"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder5").hide();
			$("#divShowResult5").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerHourseCount5);
			
			$(ContentScript.orderResultList5).each(function(){
				ContentScript.orderBetQ($(this)[0],"#Limits5","#HowMuchPL5");
			});
		});
		
		$("#btnTuoMa1").bind("click",function(){
			if($("#TuoMa1").val()){
				ContentScript.timerHourseCount1 = self.setInterval(function(){
					var tuoma1 = $("#TuoMa1").val();
					if(tuoma1){
						ContentScript.createResultHtml("#TuoMa1","#JiaoShu1","#HowMuchPL1","#divShowResult1","#Limits1",1,"#btnTuoMa1",ContentScript.timerHourseCount1);
					}
				},100);
			}else{
				alert("请输入马");
			}
		});
		
		$("#btnTuoMa2").bind("click",function(){
			if($("#TuoMa2").val()){
				ContentScript.timerHourseCount2 = self.setInterval(function(){
					var tuoma2 = $("#TuoMa2").val();
					if(tuoma2){
						ContentScript.createResultHtml("#TuoMa2","#JiaoShu2","#HowMuchPL2","#divShowResult2","#Limits2",2,"#btnTuoMa2",ContentScript.timerHourseCount2);
					}
				},100);
			}else{
				alert("请输入马");
			}
		});
		
		$("#btnTuoMa3").bind("click",function(){
			if($("#TuoMa3").val()){
				ContentScript.timerHourseCount3 = self.setInterval(function(){
					var tuoma3 = $("#TuoMa3").val();
					if(tuoma3){
						ContentScript.createResultHtml("#TuoMa3","#JiaoShu3","#HowMuchPL3","#divShowResult3","#Limits3",3,"#btnTuoMa3",ContentScript.timerHourseCount3);
					}
				},100);
			}else{
				alert("请输入马");
			}
		});
		
		$("#btnTuoMa4").bind("click",function(){
			if($("#TuoMa4").val()){
				ContentScript.timerHourseCount4 = self.setInterval(function(){
					var tuoma4 = $("#TuoMa4").val();
					if(tuoma4){
						ContentScript.createResultHtml("#TuoMa4","#JiaoShu4","#HowMuchPL4","#divShowResult4","#Limits4",4,"#btnTuoMa4",ContentScript.timerHourseCount4);
					}
				},100);
			}else{
				alert("请输入马");
			}
		});
		
		$("#btnTuoMa5").bind("click",function(){
			if($("#TuoMa5").val()){
				ContentScript.timerHourseCount5 = self.setInterval(function(){
					var tuoma5 = $("#TuoMa5").val();
					if(tuoma5){
						ContentScript.createResultHtml("#TuoMa5","#JiaoShu5","#HowMuchPL5","#divShowResult5","#Limits5",5,"#btnTuoMa5",ContentScript.timerHourseCount5);
					}
				},100);
			}else{
				alert("请输入马");
			}
		});
		
		
		
		ContentScript.HtmlAddDragEvent($("#dragShowResult1"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult2"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult3"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult4"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult5"));
		
		$("#btnHourse").bind("click",function(){
			clearInterval(ContentScript.timerSearch);
			$("#btnHourse").hide();
			var hourse1 = $("#hourse1").val();
			var hourse2 = $("#hourse2").val();
			var hourse3 = $("#hourse3").val();
			var hourse4 = $("#hourse4").val();
			var hourse5 = $("#hourse5").val();
			if(hourse1){
				for(var item=0;item<14;item++){
					if(ContentScript.monitorCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.monitorCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse1;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse2){
				for(var item=0;item<14;item++){
					if(ContentScript.monitorCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.monitorCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse2;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse3){
				for(var item=0;item<14;item++){
					if(ContentScript.monitorCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.monitorCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse3;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse4){
				for(var item=0;item<14;item++){
					if(ContentScript.monitorCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.monitorCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse4;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse5){
				for(var item=0;item<14;item++){
					if(ContentScript.monitorCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.monitorCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse5;
						ContentScript.orderBetQ(obj);
					}
				}
			}
		});
	},
	createResultHtml:function(TuoMa,jiaoshu,howmuchpl,divShowResult,limits,orderResult,btnTuoMa,timerClock){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th><th>购买</th></tr>';
		var JSLimits = parseInt($(jiaoshu).val());
		var HowMuchPL= parseInt($(howmuchpl).val());
		var masterList=[];
		var tuoma = $(TuoMa).val();
		$(ContentScript.currentHourseCount).each(function(){
			var temp =$(this)[0];
			if(temp.count>=JSLimits){
				masterList.push(temp);	
			}
		});
		
		var resultList =[];
		var countMa =0;
		if(masterList.length>0){
			
			$(masterList).each(function(){
				var item ={"id":Math.random(),"hourse1":$(this)[0].hourse,"hourse2":tuoma,"countJS":parseInt($(this)[0].count)}
				if($(this)[0].hourse!=tuoma){
					resultList.push(item);
					countMa+=parseInt($(this)[0].count);
				}
			});
			
			resultList.sort(function(a, b) {
				return parseInt(a["countJS"]) < parseInt(b["countJS"]) ? 1 : parseInt(a["countJS"]) == parseInt(b["countJS"]) ? 0 : -1;
			});
			
			 
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this)[0].hourse1 + '-' + $(this)[0].hourse2 +'</td><td>'+ $(this)[0].countJS +'</td><td>'+ parseInt($(this)[0].countJS)*parseInt(HowMuchPL) +'</td></tr>';
			});
			
			if(orderResult==1){
				ContentScript.orderResultList1 = resultList;
			}
			if(orderResult==2){
				ContentScript.orderResultList2 = resultList;
			}
			if(orderResult==3){
				ContentScript.orderResultList3 = resultList;
			}
			if(orderResult==4){
				ContentScript.orderResultList4 = resultList;
			}
			if(orderResult==5){
				ContentScript.orderResultList5 = resultList;
			}
			//orderResult = resultList;
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td><td>'+ parseInt(countMa)*parseInt(HowMuchPL) +'</td></tr>';
			
			$(divShowResult).empty();
		    $(divShowResult).append(htmlJS +'</table>');	
		    
//		    $().bind("click",function(){
//		    	clearInterval(timerClock)
//				$(this).hide();
//				$(btnTuoMa).hide();
//				var data = $(this).parent().find(".hiddenOrderData").val();
//				$(orderResult).each(function(){
//					if(data==$(this)[0].id){
//						ContentScript.orderBetQ($(this)[0],limits,howmuchpl);
//					}
//				});
//			})
		}
	},
    orderBetQ:function(obj,limits,hommuchpl){
		var y;
		try{
			y = view1.options[view1.selectedIndex].value;
		}catch(e){
			y = $(".dd-selected-value").val();
		}
		var Limits = $(limits).val()
		var signInfo = ContentScript.GetSignInInfo();
		var postData = {};
		postData.task = "betBox";
		postData.combo ="box";
		postData.Tix = parseInt(obj.countJS) * parseInt($(hommuchpl).val());//多少票
		postData.Race = parseInt(y);
		if(parseInt(obj.hourse1)>parseInt(obj.hourse2) ){
			postData.Hss = obj.hourse2+"_"+obj.hourse1;
		}else{
			postData.Hss = obj.hourse1+"_"+obj.hourse2;
		}
		postData.type = "BET";
		postData.amount = 100;
		postData.fclmt = parseInt(Limits);
		postData.race_type = signInfo.RaceType;
		postData.race_date = signInfo.RaceDate;
	    postData.show = parseInt(y);
		postData.rd = Math.random();
		postData.post = 1;
		postData.fctype=0;
		///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
		///forecast?task=betBox&combo=box&Tix=10&Race=1&Hss=1_2&fctype=0&type=BET&amount=80&fclmt=700&race_type=3H&race_date=10-04-2016&show=1&post=1&rd=0.7604487739642092
		$.ajax({
					type: "get",
					url: ContentScript.urlX +"/forecast",
					data: postData,
					success: function (msg) {
						console.log(msg);
					},
					error:function(e){
						console.log(e);
					}
				});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}   
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V669</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	monitorTicketTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorPLTimeList: [2400,1800, 0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorJSTimeList: [2400,1800, 1200, 900, 600, 420, 300, 180, 120, 60,  0,-10,-20,-30,-40,-50, -60,-70,-80, -90,-100,-110, -120,-130,-140, -150,-160,-170, -180,-190,-200, -210,-220,-230,-240,-250,-260,-270,-280,-290,-300,-310,-320,-330,-340,-350,-360],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	maxCountList:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	monitorCountList:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	ccEndTime: null,
	PervChangCi:0, 
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER <= 30 && TIMER > 20) {
			return 1800;
		}
		if (TIMER <= 20 && TIMER > 15) {
			return 1200;
		}
		if (TIMER <= 15 && TIMER > 10) {
			return 900;
		}
		if (TIMER <= 10 && TIMER > 7) {
			return 600;
		}
		if (TIMER <= 7 && TIMER > 5) {
			return 420;
		}
		if (TIMER <= 5 && TIMER > 3) {
			return 300;
		}
		if (TIMER <= 3 && TIMER > 2) {
			return 180;
		}
		if (TIMER <= 2 && TIMER > 1) {
			return 120;
		}
		if (TIMER <= 1 && TIMER > 0) {
			return 60;
		}
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return parseInt(parseInt(resultValue/10)*10);
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 30) {
			return 2400;
		}
		if (TIMER > 0 && TIMER<=30) {
			return 1800;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));

		var htmlList1 = '<div id="ticket" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList1 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢票数统计</span></h3>';
		htmlList1 += '<div id="divTicketCreate"></div>'
		htmlList1 += '</div>';
		$("body").append(htmlList1);
		ContentScript.HtmlAddDragEvent($("#ticket"));

		var htmlList2 = '<div id="peilv" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList2 += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp;<span>&nbsp;独赢赔率统计</span></h3>';
		htmlList2 += '<div id="divPeilvCreate"></div>'
		htmlList2 += '</div>';
		$("body").append(htmlList2);
		ContentScript.HtmlAddDragEvent($("#peilv"));

		self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if (isTicketTime &&  !isNaN(currentPMTime)) {
				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistTicket = true;
						return;
					}
				});
			}

			if (isPeiLvTime && !isNaN(currentPMTime)) {
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistPL = true;
						return;
					}
				});
			}


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
			}

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}

			var htmlListQPRight = '<table class="bettable" style="width:250px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th><th width="20%">最多</th><th width="20%">最少</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].ticketsw + '</td>';
				htmlListQPRight += '<td>' + maxValue + '</td>';
				htmlListQPRight += '<td>' + minValue + '</td>';
				htmlListQPRight += '</tr>';
			});
			htmlListQPRight += '</table>';
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);

			if (!isExistTicket) {
				var htmlTicket = '<table class="bettable" style="width:800px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

				$(ContentScript.monitorTicketData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlTicket += '<tr><th width="">30分前</th>';
							}else{
								htmlTicket += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlTicket += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							htmlTicket += '<th width="">' + ContentScript.getTicketByHourse(temp.Data, i) + '</th>';
						}
						htmlTicket += '</tr>';
					}
				});

				$("#divTicketCreate").empty();
				$("#divTicketCreate").append(htmlTicket);
			}

			if (!isExistPL) {
				var htmlPeiLv = '<table class="bettable" style="width:800px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});

                var FirstTemp=[];
                var HadChangeTime = true;
                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
                if(LastData.currentPMTime<=420){
                	FirstTemp = LastData.Data;
                }else{
                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
                		HadChangeTime = false;
                	}else{
                		$(ContentScript.monitorPLTimeData).each(function(item){
                			var temp = $(this)[0];
                			if(temp.currentPMTime==420){
                				FirstTemp = temp.Data;
                				return;
                			}
                		});
                	}
                }
                
				$(ContentScript.monitorPLTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								htmlPeiLv += '<tr><th width="">30分前</th>';
							}else{
								htmlPeiLv += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							htmlPeiLv += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							if(HadChangeTime){
								if(temp.currentPMTime>420){
									htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
								}else{
									var currentValue = ContentScript.getWPPLByHourse(temp.Data, i);
									var firstValue = ContentScript.getWPPLByHourse(FirstTemp, i);
									if(currentValue!=0&& firstValue!=0 && parseFloat(currentValue) <= (parseFloat(firstValue)*0.9) && parseFloat(currentValue) > (parseFloat(firstValue)*0.75)){
									    htmlPeiLv += '<th width=""><font color="orange">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</font></th>';
									}
									else if(currentValue!=0 && firstValue!=0 && parseFloat(currentValue) <= (parseFloat(firstValue)*0.75)){
										htmlPeiLv += '<th width=""><font color="red">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</font></th>';
									}
									else{
										htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
									}
								}
								
							}else{
								htmlPeiLv += '<th width="">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</th>';
							}
						}
						htmlPeiLv += '</tr>';
					}
				});
				console.log(1);
				$("#divPeilvCreate").empty();
				$("#divPeilvCreate").append(htmlPeiLv);
			}

		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		ContentScript.HtmlAddDragEvent($("#dragJSQ"));
		ContentScript.HtmlAddDragEvent($("#dragJSQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);


		ContentScript.timerSearch = self.setInterval(function() {

			var start = $("#startDiscount").val();
			var end = $("#endDiscount").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');

			var htmlList = '<table class="bettable" style="width:400px">';
			htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultFirst).each(function(index) {
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlList += '<tr style="line-height: 30px;">';
				htmlList += '<td>' + $(this)[0].hourse + '</td>';
				htmlList += '<td>' + $(this)[0].tickets + '</td>';
				htmlList += '</tr>';
			});

			htmlList += '</table><br/>';
			$("#divCreateQLeft").empty();
			$("#divCreateQLeft").append(htmlList);

			var htmlListQRight = '<table class="bettable" style="width:150px">';
			htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount;
				ContentScript.monitorJSQTimeData.push(item);
				
				ContentScript.monitorJSQTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var zeroDataList = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var zeroMaxDataList = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var tempHtml = "";
				var firstHeard = false;
				$(ContentScript.monitorJSQTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							if(!firstHeard)
							{
								ContentScript.monitorCountList[i-1] = tempCount;
							}
							if(temp.currentPMTime ==0){
								zeroDataList[i-1]=zeroDataList[i-1] + tempCount;
							}
							if(temp.currentPMTime<0){
								if(zeroMaxDataList[i-1] < tempCount){
									zeroMaxDataList[i-1]= tempCount;
								}
							}
							
							if(ContentScript.maxCountList[i-1]<tempCount)
							{
								ContentScript.maxCountList[i-1]=tempCount;
							}
							
							countList[i-1]=countList[i-1] + tempCount;
							if(parseInt(tempCount)>= parseInt($("#jsRedColor").val())){
								tempHtml += '<th width=""><font color="Red">' + tempCount + '</font></th>';
							}else{
								tempHtml += '<th width="">' + tempCount + '</th>';
							}
							
						}
						tempHtml += '</tr>';
					}
					firstHeard=true;
				});
				
				var htmlJS = '';
				htmlJS += '<table class="bettable" style="width:800px">';
				htmlJS += '<tr id="JSheader"><td width="65px">HK脚数</td>';
				
				for (var i = 1; i <= 14; i++) {
					if(zeroMaxDataList[i-1]>=(zeroDataList[i-1]+2)){
						htmlJS += '<td style="background-color:#00FF00;">' + i + '</td>';
					}else
					{
						htmlJS += '<td>' + i + '</td>';
					}
				}
				
				//var htmlJSCount ="";
				//htmlJSCount += '<tr style="background-color:#fff68f" ><td style="background-color:#fff68f">总计</th>';
			    //for (var i = 1; i <= 14; i++){
			    //	htmlJSCount += '<td style="background-color:#fff68f">' + countList[i-1] + '</td>';
			    //}
				//htmlJSCount += '</tr>';
				
				var htmlJSCount ="";
				htmlJSCount += '<tr style="background-color:#fff68f" ><td style="background-color:#fff68f">最大</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f">' + ContentScript.maxCountList[i-1] + '</td>';
			    }
				htmlJSCount += '</tr>';
				
				
				$("#divCreateJSQ").empty();
				$("#divCreateJSQ").append(htmlJS + htmlJSCount +tempHtml+'</table>');
			}

			$(hourseCount).each(function(index) {
				htmlListQRight += '<tr style="line-height: 30px;">';
				htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQRight += '</tr>';
			});
			$("#divCreateQRight").empty();
			$("#divCreateQRight").append(htmlListQRight);
		}, 1000);

		ContentScript.timerSearch = self.setInterval(function() {
			var start = $("#startDiscountQP").val();
			var end = $("#endDiscountQP").val();
			start = parseFloat(start);
			end = parseFloat(end);
			var resultSecond = ContentScript.GetTransactionDataByArea('vrtFC_3', 'FC_DATA_3');

			var hourseCount1 = [];

			var htmlListQP = '<table class="bettable" style="width:400px">';
			htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th></tr>';
			resultSecond.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			$(resultSecond).each(function(index) {

				var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount1).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount1.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount1.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}

				htmlListQP += '<tr style="line-height: 30px;">';
				htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
				htmlListQP += '</tr>';
			});
			htmlListQP += '</table>';
			//$("#divCreateQPLeft").empty();
			//$("#divCreateQPLeft").append(htmlListQP);

			var htmlListQPRight = '<table class="bettable" style="width:150px">';
			htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';
			hourseCount1.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;

			if (isExistsJSTime) {
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
						isExistJS = true;
						return;
					}
				});
			}

			if (!isExistJS) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorJSQPTimeData.push(item);

                var countList= [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
				var htmlJS = '<table class="bettable" style="width:800px">';
				htmlJS += '<tr><th width="65px">HK脚数</th><th width="">1</th><th width="">2</th><th width="">3</th><th width="">4</th><th width="">5</th><th width="">6</th><th width="">7</th><th width="">8</th><th width="">9</th><th width="">10</th><th width="">11</th><th width="">12</th><th width="">13</th><th width="">14</th></tr>';
				ContentScript.monitorJSQPTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) > parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempHtml="";
				$(ContentScript.monitorJSQPTimeData).each(function(item) {
					var temp = $(this)[0];
					if (temp.changchi == cchi && !isNaN(temp.currentPMTime)) {
						if (temp.currentPMTime >= 60) {
							if(temp.currentPMTime==2400){
								tempHtml += '<tr><th width="">30分前</th>';
							}else{
								tempHtml += '<tr><th width="">' + (temp.currentPMTime / 60) + '分</th>';
							}
						} else {
							tempHtml += '<tr><th width="">' + temp.currentPMTime + '秒</th>';
						}
						for (var i = 1; i <= 14; i++) {
							var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
							countList[i-1]= countList[i-1] + tempCount;
							tempHtml += '<th width="">' + tempCount + '</th>';
						}
						tempHtml += '</tr>';
					}
				});
				
				htmlJS += '<tr style="background-color:#fff68f"><td style="background-color:#fff68f">总计</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJS += '<td style="background-color:#fff68f">' + countList[i-1] + '</th>';
			    }
				htmlJS += '</tr>';

				//$("#divCreateJSQP").empty();
				//$("#divCreateJSQP").append(htmlJS+tempHtml+'</table>');
			}

			$(hourseCount1).each(function(index) {
				htmlListQPRight += '<tr style="line-height: 30px;">';
				htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
				htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
				htmlListQPRight += '</tr>';
			});
			$("#divCreateQPRight").empty();
			$("#divCreateQPRight").append(htmlListQPRight);

		}, 1000);

	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] && parseInt(tempArray[3]) == 0) {
					isExists = true;
					if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[3]) == 0) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="display:none;background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="display:none;background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q下注统计</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>1</option><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select>'
		htmlList += '买多少倍<input type="number" id="HowMuchPL" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits" value="700" step="100" style="width: 50px;" value="0" />';
		htmlList += '</h3>';
		htmlList += '<div style="float: left;">'
		htmlList += '<input id="hourse1" type="number" style="width: 40px;"/>+<input id="hourse2" type="number" style="width: 40px;"/>+<input id="hourse3" type="number" style="width: 40px;"/>+<input id="hourse4" type="number" style="width: 40px;"/>+<input id="hourse5" type="number" style="width: 40px;"/>'
		htmlList += '<input id="btnHourse" type="button" value="购买"/>  &nbsp;&nbsp;';
		htmlList += '</div>'
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQP" style="display:none;background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q脚数统计</h3>';
		htmlList += '<div id="divCreateJSQP" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
		
		$("#btnHourse").bind("click",function(){
			clearInterval(ContentScript.timerSearch);
			$("#btnHourse").hide();
			var hourse1 = $("#hourse1").val();
			var hourse2 = $("#hourse2").val();
			var hourse3 = $("#hourse3").val();
			var hourse4 = $("#hourse4").val();
			var hourse5 = $("#hourse5").val();
			if(hourse1){
				for(var item=0;item<14;item++){
					if(ContentScript.maxCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.maxCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse1;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse2){
				for(var item=0;item<14;item++){
					if(ContentScript.maxCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.maxCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse2;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse3){
				for(var item=0;item<14;item++){
					if(ContentScript.maxCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.maxCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse3;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse4){
				for(var item=0;item<14;item++){
					if(ContentScript.maxCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.maxCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse4;
						ContentScript.orderBetQ(obj);
					}
				}
			}
			if(hourse5){
				for(var item=0;item<14;item++){
					if(ContentScript.maxCountList[item]>0){
						var obj={};
						obj.countJS= ContentScript.maxCountList[item];
						obj.hourse1 = item+1;
						obj.hourse2 = hourse5;
						ContentScript.orderBetQ(obj);
					}
				}
			}
		});
		
	},
    orderBetQ:function(obj){
    	if(parseInt(obj.countJS) < parseInt($("#jsRedColor").val())){
    		return;
    	}
		var y;
		try{
			y = view1.options[view1.selectedIndex].value;
		}catch(e){
			y = $(".dd-selected-value").val();
		}
		var Limits = $("#Limits").val()
		var signInfo = ContentScript.GetSignInInfo();
		var postData = {};
		postData.task = "betBox";
		postData.combo ="box";
		
		postData.Tix = parseInt(obj.countJS) * parseInt($("#HowMuchPL").val());//多少票
		postData.Race = parseInt(y);
		if(parseInt(obj.hourse1)>parseInt(obj.hourse2) ){
			postData.Hss = obj.hourse2+"_"+obj.hourse1;
		}else{
			postData.Hss = obj.hourse1+"_"+obj.hourse2;
		}
		postData.type = "BET";
		postData.amount = 100;
		postData.fclmt = parseInt(Limits);
		postData.race_type = signInfo.RaceType;
		postData.race_date = signInfo.RaceDate;
	    postData.show = parseInt(y);
		postData.rd = Math.random();
		postData.post = 1;
		postData.fctype=0;
		///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
		///forecast?task=betBox&combo=box&Tix=10&Race=1&Hss=1_2&fctype=0&type=BET&amount=80&fclmt=700&race_type=3H&race_date=10-04-2016&show=1&post=1&rd=0.7604487739642092
		$.ajax({
					type: "get",
					url: ContentScript.urlX +"/forecast",
					data: postData,
					success: function (msg) {
						console.log(msg);
					},
					error:function(e){
						console.log(e);
					}
				});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}                  
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V49</version>
    <JSCode>
    <![CDATA[
      Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }

      ContentScript={
	      txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	      Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	      WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerWithOrderClock:null,
	      timerCountPageEatAndBet:null,
	      StaticAllData:[],
	      AlertMsg:"请输入密码",
	      AlertPassToLater:"软件过期",
	      PassError:"密码错误",
        SinglePath:false,
	      StaticOldAllData:[],
	      StaticCountShowData:[],
	      StaticOldCountShowData:[],
	      HelloKitty:"81dc9bdb52d04dc20036dbd8313ed055",
	      HelloKittyTime:["212112eece862ca4a3da112f217288fb","519edc8db508d1c088f793f2c3647e6f"],
	      DaoQiTime:"YYYY-MM-DD",
	      PageConfig:{
		      MaxCount:90,
		      Discount:80,
		      LimitStart:700,
		      LimitEnd:700,
		      Percent:1
	      },
	      showCountWithWhere:function(){
		      ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		      ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		      if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			      ContentScript.showCountPageEatAndBet();
		      }			
	      },
	      setLimitAndDiscount:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      if("WP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(82);
			      $("#LimitStart1").val(240);
			      $("#LimitEnd1").val(60);
			
			      $("#Discount2").val(82);
			      $("#LimitStart2").val(240);
			      $("#LimitEnd2").val(60);
		      }
		      if("QP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(400);
			      $("#LimitEnd1").val(400);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(400);
			      $("#LimitEnd2").val(400);
		      }
		      if("Q" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(700);
			      $("#LimitEnd1").val(700);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(700);
			      $("#LimitEnd2").val(700);
		      }
	      },
	      showCountPageEatAndBet:function(){
			      var CheckType = [];
			      var withType = $("input[name='orderType']:checked").val();
			      var eat =0;
			      var bet =0;
			      var betIds =[];
			      var eatIds =[];
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      $(ContentScript.StaticCountShowData).each(function(i){
				      if(CheckType.contains($(this)[0].type)){
					      if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						      bet++;
						      betIds.push($(this)[0].id);
					      }
					      if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						      eat++;
						      eatIds.push($(this)[0].id);
					      }
				      }
			      })
			      $("#eatCount").text(eat);
			      $("#betCount").text(bet);
		
	      },
	      GetAllEatTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("E")>=0 && $(this)[0].type != 'DEmr'){
				      result.push($(this)[0]);
			      } 
		      });
		      return result;
	      },
	      GetAllBetTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("B")>=0 && $(this)[0].type != 'DBmr'){
				      result.push($(this)[0]);
			      }
		      });
		      return result;
	      },
	      GetAllDBmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DBmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPB";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QB";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      GetAllDEmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DEmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPE";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QE";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
          },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      MaxCountEvent:function(){
		      try{
			      ContentScript.PageConfig.MaxCount = $("#MaxCount").val();
		      }catch(e){
			      ContentScript.PageConfig.MaxCount = 90;
			      $("#MaxCount").val(90);
		      }
		
		      var type = $("input[name='DiscountType']:checked").val();
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.Discount = $("#Discount1").val();
			      }else{
				      ContentScript.PageConfig.Discount = $("#Discount2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.Discount = 80;
			      $("#Discount").val(80);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitStart = $("#LimitStart1").val();
			      }else{
				      ContentScript.PageConfig.LimitStart = $("#LimitStart2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitStart = 700;
			      $("#LimitStart").val(700);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd1").val();
			      }else{
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitEnd = 700;
			      $("#LimitEnd").val(700);
		      }
		
		      ContentScript.PageConfig.Percent = $("#Percent").val();
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      PrecentChangeEvent:function(){
		      $("#Percent").bind("change",function(){
			      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				      $("#btnBanlance").show();
			      }else{
				      $("#btnBanlance").hide();
			      }
			      ContentScript.PageConfig.Percent =$("#Percent").val();
		      });
	      },
	      allOnitEvent:function(){
		      //创建用户界面
						      ContentScript.CreateHtmlElement();
						      //绑定拖拽事件
						      ContentScript.HtmlAddDragEvent();
						      $("#daoqitime").text(ContentScript.DaoQiTime);
						      //限制投注数
						      ContentScript.MaxCountEvent();
						      //多倍控制
						      ContentScript.PrecentChangeEvent();
						      //统计吃票的计时器
						      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
						
						      $("#btnEnd").hide();
						      $("input[name='orderType']").bind("click",function(){
							      ContentScript.showCountPageEatAndBet();
							      ContentScript.setLimitAndDiscount();
						      });
						      //删单
						      $("#btnEatDelete").bind("click",function(){
							      $(this).hide();
							      var isExists = $(window.frames["frmTRANS"].document).find(".del2_ch");
							      if(isExists!=null && isExists!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del2_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      $("#btnBetDelete").bind("click",function(){
							      $(this).hide();
							      var isExistsDel = $(window.frames["frmTRANS"].document).find(".del_ch");
							      if(isExistsDel!=null && isExistsDel!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      //开始
						      $("#btnStart").bind("click",function(){
						      		console.log(1);
                                    ContentScript.SinglePath = false;
							        ContentScript.StaticOldAllData = [];
							        ContentScript.StaticAllData = [];
							        $("#btnStart").hide();
							        $("#btnEnd").show();
							        ContentScript.MaxCountEvent();
							        //创建定时吃票事件
							        ContentScript.timerWithOrderClock = self.setInterval(function(){
							            var eatCount = $("#eatCount").text();
							            if(eatCount == ""){
							    	        eatCount = 0;
							            }else{
							    	        eatCount = parseInt(eatCount);
							            }
							            var MaxCount = parseInt($("#MaxCount").val());
							            if(eatCount >= MaxCount){
							    	        //到达限制数量 删除所有吃单
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
							            }
								        clearInterval(ContentScript.timerCountPageEatAndBet);
								        ContentScript.StaticOldAllData = ContentScript.StaticAllData
								        ContentScript.StaticAllData = ContentScript.GetAllHadTransactionData();
								        if(JSON.stringify(ContentScript.StaticOldAllData) != JSON.stringify(ContentScript.StaticAllData)){
									        if(ContentScript.SinglePath){
									 	        //nothing
									        }else{
										        ContentScript.StaticCountShowData = ContentScript.StaticAllData;
										        ContentScript.showCountPageEatAndBet();
										        ContentScript.needAjaxCount=ContentScript.getNeedWithOrderList();
										        ContentScript.withOrderOnInit(ContentScript.needAjaxCount,false);
									        }
									
								        }
								
								        var showTitle = "";
								        if(window.location.href.indexOf("playerhk.jsp")>=0){
									        showTitle = $("#newsLineByLoc").text();
								        }
								        if(window.location.href.indexOf("Q.jsp")>=0){
									        showTitle = $("#news1st").text();
								        }
								
								        if(((showTitle.indexOf("进闸完毕")>=0 
								           && showTitle.indexOf("准备开跑")>=0)||(showTitle.indexOf("剩 1")>=0))
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        var ret = 0;
									        try{
										        var regexp = /剩 [0-9]+/
										        var firststring = regexp.exec(showTitle);
										        var match = firststring[0].replace("剩","").replace(" ","")
										        ret= parseInt(match);
									        }catch(e){
										        ret = 1	
									        }
									        if(ret==1){
										        ContentScript.SinglePath = true;
										        //先删除所有没有成交的数据
										        setTimeout(function(){
											        ContentScript.EatButtonEvent();
										        },0);
										        setTimeout(function(){
											        ContentScript.BetButtonEvent();
										        },0);
										        //然后100%的平仓数据交易
										        setTimeout(function(){
											        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										        },1000);
										
										        //平仓后结束
										        if(ContentScript.timerWithOrderClock!=null){
											        clearInterval(ContentScript.timerWithOrderClock);
										        }
										        ContentScript.timerWithOrderClock = null;
										        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
										        $("#btnStart").show();
										        $("#btnEnd").hide();
									        }
								        }
								        if((showTitle.indexOf("剩 2")>=0 ||  showTitle.indexOf("剩 3")>=0)
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        ContentScript.SinglePath = true;
								        }
							        },1000);
						      });
						
						      //结束
						      $("#btnEnd").bind("click",function(){
							      if(ContentScript.timerWithOrderClock!=null){
								      clearInterval(ContentScript.timerWithOrderClock);
							      }
							      ContentScript.timerWithOrderClock = null;
							      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							      $("#btnStart").show();
							      $("#btnEnd").hide();
						      });
						
						      //平仓
						      $("#btnBanlance").bind("click",function(){
							        if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
									        //平仓后结束
									        if(ContentScript.timerWithOrderClock!=null){
										        clearInterval(ContentScript.timerWithOrderClock);
									        }
									        ContentScript.timerWithOrderClock = null;
									        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
									        $("#btnStart").show();
									        $("#btnEnd").hide();
									
									        $(this).hide();
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        setTimeout(function(){
										        ContentScript.BetButtonEvent();
									        },0);
									        //然后100%的平仓数据交易
									        setTimeout(function(){
										        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
									        },1000);
									        $(this).show();
							        }else{
								        alert("平仓功能只能在倍率是1的情况下使用！");
							     }
						});
				
	      },
        checkPingCangHouDataValidation:function(){
		      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
			      if($($(this).find(".del_ch").parent().parent()).find("td").eq(4).text()!="100"){
				      return false;
			      }
		      });
		      return true;
	      },
	      getNeedWithOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','PFTB','QPB','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllTransactionData();
			      var notCommitBetList=[];
			      var returnEatList=[];
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      it.x = parseInt(it.x)*parseInt($("#Percent").val())
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      returnEatList.push(it);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					      if($(this)[0].type =="DBmr"){
						      var it = $(this)[0];
						      var hadCount = false;
						      $(notCommitBetList).each(function(i){
							      if(it.id==$(this)[0].id){
								      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								      hadCount = true;
							      }
						      });
						      if(!hadCount){
							      notCommitBetList.push(allList[index]);
						      }
					      }
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      $(notCommitBetList).each(function(){
						      if(item.id==$(this)[0].id){
							      returnEatList[i].x = item.x-$(this)[0].x
						      }
					      });
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
					      if($("input[id='PostionToZQ']:checked").val() == "1" && item.x<0){
					      	item.x = -1 * item.x
					      	returnList.push(item);
					      }
				      });
			      }			
			
			      $(returnList).each(function(index){
				      $(this)[0].type = $(this)[0].type.replace("E","B");
			      });
			      return returnList;
		      }else{
			      return [];
		      }
	      },
	      getNeedPingCangOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllHadTransactionData();
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      var returnEatList=[];
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x);
									      returnEatList.push(allList[index]);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					
				      });
				
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      })
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				      return returnList;
			      }
		      }else{
			      return [];
		      }
	      },
	      ticketByFloat:function(item,type){
		      var result = 0;
		      if(type=="Q"){
			      result = item;
		      }else{
			      if(item==0){
				      result = 0;
			      }else{
				      if(item%5 !=0){
					      result = item + (5 - item%5);
				      }else{
					      result = item;
				      }
			      }
		      }
		      return result
	      },
	      withOrderOnInit:function(pushData,isBalance){
		        //真实的跟单操作
		        $(pushData).each(function(i){
			        var item = $(this)[0];
			        if(true){
				        var signInfo = ContentScript.GetSignInInfo();
				        if(['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'].contains(item.type)){
							        var postData = {};
							        postData.task = "betBox";
							        postData.combo =0;
							        var pcBeiShu = 1;
							        try{
								        if(isBalance){
									        pcBeiShu = parseInt($("#MulitBeiPingCang").val());
								        }
							        }catch(e){
								        pcBeiShu = 1;
							        }
							        postData.Tix =  ContentScript.ticketByFloat(parseInt(item.x)*pcBeiShu,"Q");
							        postData.Race = parseInt(item.matches);
							        var hourse1,hourse2;
							        //如果含有括号特殊处理一下
							        if(item.fb.indexOf("(")<0){
								        hourse1 = item.fb.split("-")[0];
								        hourse2 = item.fb.split("-")[1];
								        postData.fctype = 0;
							        }else{
								        hourse1 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
								        hourse2 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
								        postData.fctype = 1;
								        if($("input[id='PostionToZQ']:checked").val() == "1"){
								        	postData.fctype = 0;
								        }
							        }
							        
							        postData.Hs1 = hourse1;
							        postData.Hs2 = hourse2;
							        postData.Hs3 = "";
							        postData.Hs4 = "";
							        postData.Hs5 = "";
							        postData.Hs6 = "";
							        postData.Hs7 = "";
							        postData.Hs8 = "";
							        //postData.fctype = 0;
							        postData.Q = "Q";
							        if(item.type.indexOf("E")>=0){
								        postData.type = "EAT";
							        }else{
								        postData.type = "BET";
							        }
							
							        if(isBalance){
								        postData.amount = 100;
							        }else{
								        postData.amount = ContentScript.PageConfig.Discount;
							        }
							        postData.fclmt = ContentScript.PageConfig.LimitStart;
								
							        postData.overflow = "1";
							        //postData.amount = "100";
							        postData.race_type = signInfo.RaceType;
							        postData.race_date = signInfo.RaceDate;
							        postData.show = parseInt(item.matches);
							        postData.rd = Math.random();
							
							        console.log(postData);
							        ///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							        $.ajax({
							                      type: "get",
							                      url: ContentScript.urlX +"/forecast",
							                      data: postData,
							                      success: function (msg) {
							              	        console.log(msg);
							                      },
							                      error:function(e){
							              	        console.log(e);
							                      }
							        });
						        } 
				        if(['WPB','WPE','WB','WE','PB','PE'].contains($(this)[0].type)){
					
							        var postURL = "";
							        var postData = {};
							        postData.t = "frm";
							        postData.race = item.matches;
							        postData.horse = item.rdfb;
							        //var Proportion = parseInt(ContentScript.PageConfig.Percent);
							        var pcBeiShu = 1;
							        try{
								        if(isBalance){
									        pcBeiShu = parseInt($("#MulitBeiPingCang").val());
								        }
							        }catch(e){
								        pcBeiShu = 1;
							        }
							
							        postData.win = ContentScript.ticketByFloat(parseInt(item.fb)*pcBeiShu,"WP");
							        postData.place = ContentScript.ticketByFloat(parseInt(item.x)*pcBeiShu,"WP");
							
							        var postURL ="";
							        postURL ="/bets";
							
							        if(isBalance){
								        postData.amount = 99;
							        }else{
								        postData.amount = ContentScript.PageConfig.Discount;
							        }
							
							        postData.l_win = ContentScript.PageConfig.LimitStart;
							        postData.l_place = ContentScript.PageConfig.LimitEnd;
							        postData.race_type = signInfo.RaceType;
							        postData.race_date = signInfo.RaceDate;
							        postData.show = parseInt(item.matches);
							
							        if(parseInt(postData.win)>0 && parseInt(postData.place)>0){
								        postData.wptck=1;
							        }else{
								        postData.wptck=0;
							        } 
							        if(parseInt(postData.win)>0 && parseInt(postData.place)==0){
								        postData.wtck=1;
								        postData.l_place = "0";
							        }
							        if(parseInt(postData.win)==0 && parseInt(postData.place)>0){
								        postData.ptck=1;
								        postData.l_win = "0";
							        }
							
							        postData.post = "1";
							        postData.rd = Math.random();
							        console.log(postData);
							        $.ajax({
							                      type: "get",
							                      url: ContentScript.urlX + postURL,
							                      data: postData,
							                      success: function (msg) {
							              	        console.log(msg);
							                      },
							                      error:function(e){
							              	        console.log(e);
							                      }
							        });
					        }
			        }
		        });
	        },
	
	      GetAllTransactionData:function(){
		      var result = [];
		      //<td>6</td>
		      //<td class="RD F_B">FC</td>
		      //<td class="F_B ">4-5</td>
		      //<td id="FCE_6_4-5_100_700x">2</td>
		      //<td id="FCE_6_4-5_100_700y">100</td>
		      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		      //<td class="">吃</td>
		
		      //<td>2</td>
		      //<td class="F_B">4</td>
		      //<td id="PE_2_4_78_0/16_0x">0</td>
		      //<td id="PE_2_4_78_0/16_0y">5</td>
		      //<td id="PE_2_4_78_0/16_0z">78</td>
		      //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		      //<td class="">吃</td></tr>
		
		      $(ContentScript.txn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	      GetAllHadTransactionData:function(){
		      var result = [];
		      $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2];
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 400px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
              htmlList +='<table style="width:100%">';
              htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
              htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
              htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
              htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
              htmlList +='&nbsp;&nbsp;限注:<input id="MaxCount" type="number" step="1" style="width: 40px;" size="4" value="300" />';
              htmlList +='&nbsp;倍率:<select id="Percent"><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>20</option><option>50</option><option>100</option></select>';
              //htmlList +='&nbsp;倍率:<input id="Percent" type="number" step="0.1" value="1" style="width: 40px;" size="4">';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">'
              htmlList +='<input type= "radio" name="DiscountType"  value="F1" checked="checked" id="DiscountType1"/>'
              htmlList +='折头:<input id="Discount1" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		          htmlList +='极限:<input id="LimitStart1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		          htmlList +='/<input id="LimitEnd1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;赌单多倍平仓<input id="MulitBeiPingCang" type="number" value="1" style="width: 40px;" size="4" />'
        
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">';
              htmlList +='<input type= "radio" name="DiscountType" value="F2" id="DiscountType2"/>';
              htmlList +='折头:<input id="Discount2" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		          htmlList +='极限:<input id="LimitStart2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		          htmlList +='/<input id="LimitEnd2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;<input id="AutoPingCang" type="checkbox" value="1" />自动平仓'
              htmlList +='&nbsp;<input id="PostionToZQ" type="checkbox" value="1" />位置到正Q'
              //htmlList +='比例:<input id="Percent" type="number" step="1" style="width: 40px;" size="4" value="1" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
              htmlList +='吃:<span id="eatCount" style="color:red"></span>&nbsp;赌:<span id="betCount" style="color:red" ></span>&nbsp;';
              htmlList +='</td><td style="text-align:right">';
              htmlList +='<input type="button" id="btnStart" value="开始" />';
              htmlList +='<input type="button" id="btnEnd" value="停止" />';
              htmlList +='<input type="button" id="btnBanlance" value="平仓" />';
              htmlList +='<input type="button" id="btnEatDelete" value="删吃单" />';
              htmlList +='<input type="button" id="btnBetDelete" value="删赌单" />';
              htmlList +='</td></tr>';
              htmlList +='</table>';
              htmlList += '</div>';
        
              $("body").append(htmlList);
	      },
	      EatButtonEvent:function(){
            var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
            if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
			      var obj = $(window.frames["frmTRANS"].document).find(".del2_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
      		      PostHelp.AjaxDeleteData(obj);
      	      }
        },
        BetButtonEvent:function(){
      	    var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
      	    if(greenList!=null && greenList!=undefined && greenList.length>0 ){
			        var obj = $(window.frames["frmTRANS"].document).find(".del_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
			        PostHelp.AjaxDeleteData(obj);
      	    }
        },
	      HtmlAddDragEvent:function(){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  $("#drag").click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt($("#drag").css("left"));
                      _y = e.pageY - parseInt($("#drag").css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          $("#drag").css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }

      PostHelp={
	      urlX: "http://"+window.location.host,
	      fcfrm1 :  $("#fcfrm1"),
	      fcfrm2 :  $("#fcfrm2"),
	      chkKBBet:function(f){
		      f = PostHelp.fcfrm1;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB1(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB3(f);
		      }
	      },
          chkKBEat:function(f){
		      f = PostHelp.fcfrm2;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB2(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB4(f);
		      }
	      },
          chkKB1:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		         && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val();
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined	
			      ){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
          chkKB2:function(f){
		      f=PostHelp.fcfrm2;
		      var combo=f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }	
			      if(hss=="")
			      {
				      hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
          chkKB3:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			      && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val()
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined
			      ){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }			
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
	      chkKB4:function(f){
		      f=PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }		
			      if(hss=="")
			      {
				      hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
	      chkActBet:function(f){
		      f = PostHelp.fcfrm1;
		      var combo;
		      var check = f.find("input[name='banker1'] :checked");
		      if(check) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );	
		      }
	      },
	      chkActEat:function(f){
		      f = PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );
		      }
	      },
	      postData:function(url){
		      var view1 = $("#view1");
		      if(view1) {
				      var y = $("#view1").val();
				      var postion = url  + "&show="+y+ "&rd=" + Math.random();
				      var postionArray = postion.split("?");
				      var postUrl = postionArray[0];
				      var dataUrl = postionArray[1];
				      var dataArray = dataUrl.split('&');
				      var postString ='{';
				      for(var i=0;i< dataArray.length;i++){
					      var itemArray = dataArray[i].split('=');
					      postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				      }
				      postString = postString.substr(0,postString.length-1);
				      postString+='}';
				      var dataJson = $.parseJSON(postString);
				      $.ajax(
				      {
		                   type: "GET",
		                   url: postUrl,		             
		                   data: dataJson,
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }
	     		      });
		      }
	      },
	      PostDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      document.getElementById('boxFcBET').style.display = "none";
		      document.getElementById('boxFcEAT').style.display = "none";
		      document.getElementById('boxPfcBET').style.display = "none";
		      document.getElementById('boxPfcEAT').style.display = "none";
		      PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	      },
	      AjaxDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      var y = 0;
		      try{
			      y = view1.options[view1.selectedIndex].value;
		      }catch(e){
			      y = $(".dd-selected-value").val();
		      }
		
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      $.ajax(
				      {
		                   type: "GET",
		                   url: PostHelp.urlX +"/transactions",		             
		                   data: {
		             	      "type":"del",
		             	      "bid":id,
		             	      "x":x,
		             	      "betType":type,
		             	      "race_date":date,
		             	      "race_type":race_type,
		             	      "q":"q",
						      "race":race,
						      "show":y,
						      "rd":Math.random()
		                   },
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }   
	   				 
	           });
	      }
      }

      var host =window.location.href;
      if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }
    
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V733</version>
    <JSCode>
    <![CDATA[

Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	handerTicketList:['日','60分','30分'],
	handerJSList:['日','60分','30分'],
	handerPLHeadList:['日','60分','15分'],
	handerPLFooterList:['10%','25%'],
	orderResultList:[],
	urlX: "http://"+window.location.host,
	handerPLDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	has30PL:false,
	has15PL:false,
	has7PL:false,
	has5PL:false,
	has1PL:false,
	has0PL:false,
	current30PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current15PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current7PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current5PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current1PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPLData:[],
	handerTicketDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSEndData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	resultPL3Yellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPL1MinYellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultJSCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	tempJSHtml:"",
	tempTicketHtml:"",
	tempPLHtml:"",
	ChangePervChangCi:0,
	monitorTicketTimeList: [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorPLTimeList: [900,420,300,60],
	monitorJSTimeList:     [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			//,0,-30,-50,-70,-90
			if(resultValue<=0 && resultValue>-360){
				if (resultValue >-30  && resultValue<=0) {
					return 0;
				}
				if (resultValue >-50  && resultValue<=-30) {
					return -30;
				}
				if (resultValue >-70  && resultValue<=-50) {
					return -50;
				}
				if (resultValue >-90  && resultValue<=-70) {
					return -70;
				}
				if (resultValue<=-90) {
					return -90;
				}
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		
		if (TIMER > 15 && TIMER<=20) {
			return 1200;
		}
		
		if (TIMER > 10 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 7 && TIMER<=10) {
			return 600;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 3 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER > 2 && TIMER<=3) {
			return 180;
		}
		
		if (TIMER > 1 && TIMER<=2) {
			return 120;
		}
		
		if (TIMER<=1) {
			return 60;
		}
		
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return 0;
			}
			return 0;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 7 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 1 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER<=1) {
			return 60;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		ContentScript.CreateHtmlElementPage();

		ContentScript.timerSearchQP  = self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if(isTicketTime==false){
				isExistTicket=true;
			}else{
				if (isTicketTime &&  !isNaN(currentPMTime)) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistTicket = true;
							return;
						}
					});
				}
			}

			if(isPeiLvTime==false){
				isExistPL=true;
			}else{
				if (isPeiLvTime && !isNaN(currentPLTime)) {
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPLTime) {
							isExistPL = true;
							return;
						}
					});
				}
			}
			


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPLTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
				
				if(currentPLTime>=1790 && currentPLTime<=1800 && ContentScript.has30PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current30PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has30PL =true;
				}
				if(currentPLTime>=890 && currentPLTime<=900 && ContentScript.has15PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current15PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has15PL =true;
				}
				if(currentPLTime>=410 && currentPLTime<=420 && ContentScript.has7PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current7PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has7PL =true;
				}
				if(currentPLTime>=290 && currentPLTime<=300 && ContentScript.has5PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current5PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has5PL =true;
				}
				if(currentPLTime>=50 && currentPLTime<=60 && ContentScript.has1PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current1PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has1PL =true;
				}
				
			}
			if(currentPLTime<=0){
					for (var i = 1; i <= 14; i++) {
						ContentScript.currentPL[i-1]= ContentScript.getWPPLByHourse(ContentScript.getWPPLDataList(), i);
					}
					ContentScript.has0PL = true;
			}
			
			

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
            
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
			});
			
			
				var htmlTicket = '<table id="HKTicket" class="gridtable" style="width:900px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketDataOneDay[i-1] + '</td>';
				}
				htmlTicket += '<td>日</td></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData60Min[i-1] + '</td>';
				}
				htmlTicket += '<td>60</td></tr>';
				
				htmlTicket += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData30Min[i-1] + '</td>';
				}
				htmlTicket += '<td>30</td></tr>';
				
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempTicket="";
				if (!isExistTicket) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempTicket += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempTicket += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempTicket += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempTicket += '<td width="50px">' + ContentScript.getTicketByHourse(temp.Data, i) + '</td>';
							}
							tempTicket += '<td></td></tr>';
						}
					});
					ContentScript.tempTicketHtml = tempTicket;
				}

				$("#divCreateTicket").empty();
				$("#divCreateTicket").append(htmlTicket+ContentScript.tempTicketHtml);
			

			
				var htmlPeiLv = '<table id="HKPL" class="gridtable" style="width:900px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLDataOneDay[i-1] + '</td>';
				}
				htmlPeiLv += '<td>日</td></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData60Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>60</td></tr>';
				
				htmlPeiLv += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData30Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>30</td></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
                var tempPL = "";
                if (!isExistPL) {
                	var FirstTemp=[];
	                var HadChangeTime = true;
	                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
	                if(LastData!=undefined && LastData!=null){
	                	if(LastData.currentPMTime<=420){
		                	FirstTemp = LastData.Data;
		                }else{
		                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
		                		HadChangeTime = false;
		                	}else{
		                		$(ContentScript.monitorPLTimeData).each(function(item){
		                			var temp = $(this)[0];
		                			if(temp.currentPMTime==420){
		                				FirstTemp = temp.Data;
		                				return;
		                			}
		                		});
		                	}
		                }
	                }
	                
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempPL += '<tr class="count"><td width="50px">30分前</th>';
								}else{
									tempPL += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempPL += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempPL += '<td width="50px">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</td>';
							}
							tempPL += '<td></td></tr>';
						}
					});
					ContentScript.tempPLHtml = tempPL;
				}
				
				var htmlPeiLv2="";
				htmlPeiLv2 += '<tr id="line10"><td width="65px">10%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2+='<td></td></tr>';
				
				htmlPeiLv2 += '<tr id="line25"><td width="65px">25%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2 +='<td></td></tr>';
				
				$("#divCreatePL").empty();
				$("#divCreatePL").append(htmlPeiLv+ContentScript.tempPLHtml+htmlPeiLv2);
			    
			    //var basePL = ContentScript.handerPLDataOneDay;
			    
			    var htmlPeiLv3='<table class="gridtable" style="width:900px">';
			    var hasOneDay =false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLDataOneDay[i-1]>0 && hasOneDay==false){
			    		hasOneDay = true;
			    	}
			    }
			    var has30 = false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLData30Min[i-1]>0 && has30==false){
			    		has30 = true;
			    	}
			    }
			    
			    if(hasOneDay){
			    	if(has30){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">30</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.handerPLData30Min[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else {
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has15PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">15</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current15PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has7PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">7</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current7PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has5PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">5</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current5PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has1PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">1</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current1PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has0PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">0</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.currentPL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						
						htmlPeiLv3 +='<td></td></tr>';
						htmlPeiLv3 += '<tr id="line10"><td width="65px">0赔率</td>';
						for (var i = 1; i <= 14; i++){
							var currPL = ContentScript.currentPL[i-1];
							htmlPeiLv3 += '<td width="50px">'+ currPL +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    }
				
			htmlPeiLv3+='</table>';
			$("#divCreatePL1").empty();
			$("#divCreatePL1").append(htmlPeiLv3);
			
			ContentScript.createPLColor();
			ContentScript.createTicketColor();
			ContentScript.createResultHtml();
		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	createPLColor:function(){
		var notNeed123 = ($("#notNeed123").val()=="2");
		var data = $("#HKPL").find(".count td");
		var change10 =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var change25=  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		if(notNeed123){
			var has15Data = false;
			var plFirst = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			$(data).each(function(index){
				
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(line<=2){
					return;
				}
				
				if(item==0 && $(this).text()=="15"){
					has15Data = true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
					plFirst =pl;
				}
				
				if(has15Data && line>2 && item>=1 && item<=14 && $(data[line*16]).text()=="1"){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				
				
				if(line==3 && $(data[line*16]).text()=="15" && item>=1 && item<=14){
					var nextLine = parseFloat($(data[index+16]).text());
					var nextLine2 = parseFloat($(data[index+32]).text());
					if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
						$(this).css("background-color","orange");
						$(data[index+16]).css("background-color","orange");
						$(data[index+32]).css("background-color","orange");
						ContentScript.resultPL3Yellow[item-1]=1;
					}
				}
				
				if(line==6 && item>=1 && item<=14){
					if(plFirst[item-1]>=val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="1"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			});
		}else{
			var plFirst = ContentScript.handerPLDataOneDay;
			var has5Data=false;
			$(data).each(function(index){
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(item==0 && $(this).text()=="5"){
					has5Data =true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
				}
				
				if(has5Data && line>0 && item>=1 && item<=14){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				if(line<=2 && item>=1 && item<=14){
					if(line==0){
						var nextLine = parseFloat($(data[index+16]).text());
						var nextLine2 = parseFloat($(data[index+32]).text());
						if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
							$(this).css("background-color","orange");
							$(data[index+16]).css("background-color","orange");
							$(data[index+32]).css("background-color","orange");
							ContentScript.resultPL3Yellow[item-1]=1;
						}
					}
				}
				
				if(line>2 && item>=1 && item<=14){
					if(plFirst[item-1]>val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="1"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			} );
		}
		
		$("#line10").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change10[index-1]>0){
						$(this).css("background-color","orange");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		$("#line25").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change25[index-1]>0){
						ContentScript.resultPLCount[index-1] = 1;
						$(this).css("background-color","red");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		for(var item=0;item<14;item++){
			if(ContentScript.resultPL3Yellow[item]>0 && ContentScript.resultPL1MinYellow[item]>0){
				ContentScript.resultPLCount[item]=1;
			}
		}
		
	},
	createTicketColor:function(){
		var data = $("#HKTicket").find(".count td");
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		var lineMax = ContentScript.getLineMaxValue(data);
		$(data).each(function(index){
			var line = parseInt(index/16);
			var item = index%16;
			var val = parseFloat($(this).text())
			if(item>=1 && item<=14){
				if(lineMax[line]<=val && val>0){
					$(this).css("background-color","orange");
				}
			}
			index++;
		});
	},
	getLineMaxValue:function(obj){
		var retVal = [];
		var line = parseInt(obj.length/16);
		for(var i=0;i<line;i++){
			var lineMax=0;
			for(var j=0;j<16;j++){
			  if(j>=1 && j<=14){
			  	  var temp = parseFloat($(obj[i*16+j]).text());
				  if(temp>lineMax){
				  	lineMax= temp;
				  }
			  }
			}
			retVal.push(lineMax);
		}
		return retVal;
	},
	createResultHtml:function(){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th><th>购买</th></tr>';
		var JSLimits = parseInt($("#JSLimits").val());
		var HowMuchPL= parseInt($("#HowMuchPL").val());
		var masterList=[];
		for(var item=0;item<14;item++){
			if(ContentScript.resultPLCount[item]>0 && ContentScript.resultJSCount[item]>=JSLimits){
				masterList.push(item+1);	
			}
		}
		var resultList =[];
		var jsList=[];
		var countMa =0;
		if(masterList.length>0){
			for(var i=0;i<masterList.length;i++){
				for(var j=0;j<14;j++){
					if(ContentScript.resultJSCount[j]>0){
						jsList.push(ContentScript.resultJSCount[j]);
						if(masterList[i]!=j+1){
							var item ={"id":Math.random(),"hourse1":masterList[i],"hourse2":j+1,"countJS":ContentScript.resultJSCount[j]}
							resultList.push(item);	
							countMa+=ContentScript.resultJSCount[j];
						}
					}
				}
			}
			
			resultList.sort(function(a, b) {
				return parseInt(a["countJS"]) < parseInt(b["countJS"]) ? 1 : parseInt(a["countJS"]) == parseInt(b["countJS"]) ? 0 : -1;
			});
			
			 
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this)[0].hourse1 + '-' + $(this)[0].hourse2 +'</td><td>'+ $(this)[0].countJS +'</td><td><input type="button" value="购买" class="orderOne"/><input type="hidden" class="hiddenOrderData" value="'+ $(this)[0].id +'"/></td></tr>';
			});
			
			ContentScript.orderResultList = resultList;
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td><td>'+ parseInt(countMa)*parseInt(HowMuchPL) +'</td></tr>';
			
			$("#divShowResult").empty();
		    $("#divShowResult").append(htmlJS +'</table>');	
		    
		    $(".orderOne").bind("click",function(){
				$(this).hide();
				//下单即不再计算马
				clearInterval(ContentScript.timerSearch);
			    clearInterval(ContentScript.timerSearchQP);
				
				var data = $(this).parent().find(".hiddenOrderData").val();
				$(ContentScript.orderResultList).each(function(){
					if(data==$(this)[0].id){
						ContentScript.orderBetQ($(this)[0]);
					}
				});
			})
		}
	},
	createJSColor:function(){
		var data = $("#HKJS").find(".count td");
		//统计每个马的总数
		var countLine = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var countLineSort = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var dengData =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var lineMax = ContentScript.getLineMaxValue(data);
		var has5Data=false;
		var has1Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			if(item>=1 && item<=14){
				var val = parseFloat($(this).text())
				countLine[item-1] += val ;
				countLineSort[item-1] += val ;
				// 如果有5分钟的基数的时候
				if(has5Data){
					if(min5Line[item-1]+2 <= val){
						dengData[item-1]= val;
					}
				}
				// 如果有1分钟的基数的时候
				if(has1Data){
					if(ContentScript.resultJSCount[item-1] < val){
						ContentScript.resultJSCount[item-1]= val;
					}
				}
				
				//最大显示黄色
				if(lineMax[line]<=val && val >0){
					$(this).css("background-color","orange");
				}
			}
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					min5Line[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(item==0 && $(this).text()=="1"){
				has1Data =true;
				for(var i=1;i<=14;i++){
					ContentScript.resultJSCount[i-1]= parseFloat($(data[index+i]).text());	
				}
			}
			
			index++;
		});
		countLineSort.sort(function(a,b){return a>b?1:-1});;
		//显示统计 并且排名前3的显示黄色背景
	    $("#countJS").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(countLine[index-1] >0 && countLineSort[11]<=countLine[index-1]){
	    			$(this).text(countLine[index-1]).css("background-color","orange")
	    		}else{
	    			$(this).text(countLine[index-1]).css("background-color","")
	    		}
	    	}
	    	index++;
	    });
		//显示灯  以5分钟为基数 超过两个的显示绿色 background-color:#00FF00;
		$("#deng").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(dengData[index-1]>0){
	    			$(this).css("background-color","#00FF00")
	    		}
	    	}
	    	index++;
	  });
	},
	allOnitEvent: function() {
		ContentScript.timerSearch = self.setInterval(function() {
			var resultFirst;
			var signInfo = ContentScript.GetSignInInfo();
			var itemName = "a"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
			if (host.indexOf("Q.jsp") >= 0) {
				resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');
				var postData = {};
	            
	            postData.race_type = signInfo.RaceType;
				postData.race_date = signInfo.RaceDate;
				postData.Data = resultFirst;
				
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					localStorage.setItem(itemName,JSON.stringify(postData));
				}else{
					localStorage.setItem(itemName,JSON.stringify(postData));
				}
			}else{
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					resultFirst=null;
				}else{ 
					resultFirst = $.parseJSON(localStorage.getItem(itemName)).Data;
					ContentScript.createJSHtml(resultFirst);
					ContentScript.createJSColor();
				}
			}
            
            if(resultFirst==null || resultFirst==undefined ){
            	return;
            }
			return;
		}, 1000);
	},
	createJSHtml:function(resultFirst){
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse ==null || $(this)[0].hourse == undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}
			});

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;
			
			if(isExistsJSTime==false){
				isExistJS =true;
			}else{
				if (isExistsJSTime) {
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistJS = true;
							return;
						}
					});
				}
			}
				
				if (!isExistJS) {
					var item = {};
					item.changchi = cchi;
					item.currentPMTime = currentPMTime;
					item.Data = hourseCount;
					ContentScript.monitorJSQTimeData.push(item);
					
					ContentScript.monitorJSQTimeData.sort(function(a, b) {
						return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
					});
					
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								tempHtml += '<td width="50px">' + tempCount + '</td>';
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				
				var htmlJS = '<table id="HKJS" class="gridtable" style="width:900px">';
				htmlJS += '<tr><th width="65px">HK脚数</th>';
				
				for (var i = 1; i <= 14; i++) {
					htmlJS += '<th width="50px">' + i + '</th>';
				}
				htmlJS += '<th></th></tr>'
				
				var HeardHtml = '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSDataOneDay[i-1] + '</td>';
				}
				HeardHtml += '<td>日</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData60Min[i-1] + '</td>';
				}
				HeardHtml += '<td>60</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData30Min[i-1] + '</td>';
				}
				HeardHtml += '<td>30</td></tr>';
				
				
				var htmlJSCount ="";
				htmlJSCount += '<tr id="countJS" style="background-color:#fff68f" ><td style="background-color:#fff68f">合脚</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f"></td>';
			    }
				htmlJSCount += '<td >合脚</td></tr>';
				
				
				var htmlJSDeng ="";
				htmlJSDeng += '<tr id="deng" style="background-color:#fff68f" ><td style="background-color:#fff68f">灯</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSDeng += '<td >  </td>';
			    }
				htmlJSDeng += '<td style="background-color:#fff68f">灯</td></tr>';
				
				var htmlJSEnd ="";
				htmlJSEnd += '<tr><td></th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSEnd += '<td > '+ i +' </td>';
			    }
				htmlJSEnd += '<td ></td></tr>';
				
				htmlJSEnd += '<tr><td width="65px"></td>';
				for (var i = 1; i <= 14; i++){
					htmlJSEnd += '<td>' + ContentScript.handerJSEndData[i-1] + '</td>';
				}
				htmlJSEnd += '<td></td></tr>';

				$("#divCreateJS").empty();
				$("#divCreateJS").append(htmlJS + HeardHtml + ContentScript.tempJSHtml + htmlJSDeng + htmlJSCount + htmlJSEnd +'</table>');
			
	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100" || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100"  || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},
	CreateHtmlElementPage:function(){
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
		htmlList += '<div id="dragTable" style="background:white;width: 900px; height: 800px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 800px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">新版统计相关报表软件 &nbsp;&nbsp;<select width="80px" id="notNeed123">'
		htmlList += '<option value="1">需要录入赔率</option><option value="2">不需要录入赔率</option></select> &nbsp;&nbsp;&nbsp;&nbsp;脚数阀值<input type="number" id="JSLimits" step="1" style="width: 50px;" value="4" /></h3>';
		htmlList += '<div id="divEditTable" style="float: left;">'
		htmlList += '<table class="gridtable" style="width:860px">';
		htmlList += '<tr><th width="65px">手动输入</th><th width="55px">1</th><th width="55px">2</th><th width="55px">3</th><th width="55px">4</th><th width="55px">5</th><th width="55px">6</th><th width="55px">7</th><th width="55px">8</th><th width="55px">9</th><th width="55px">10</th><th width="55px">11</th><th width="55px">12</th><th width="55px">13</th><th width="55px">14</th></tr>';
		htmlList += '<tr id="editDataLine"><td width="65px"><select width="60px" id="insertType">'
		htmlList += '<option value="1">赔率前日</option><option value="2">赔率60分</option><option value="3">赔率30分</option>'
		htmlList += '<option value="4">票数前日</option><option value="5">票数60分</option><option value="6">票数30分</option>'
		htmlList += '<option value="7">脚数前日</option><option value="8">脚数60分</option><option value="9">脚数30分</option><option value="10">表格底部</option>'
		htmlList += '</select></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" />'
		htmlList += '</td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td></tr>';
		htmlList += '<td ><td colspan="16"><input type="button" style="width:200px;height:25px;" id="btnSave" title="提交" value="提交" text="确定"/><font color="blue" id="saveStatus"></font></td></tr></table>';
		htmlList += '</div>'
		htmlList += '<div id="divCreatePL" style="float: left;"></div>'
		htmlList += '<div id="divCreatePL1" style="float: left;"></div>'
		htmlList += '<div id="divCreateJS" style="float: left;"></div>'
		htmlList += '<div id="divCreateTicket" style="float: left;"></div>'
		htmlList += '</div>';
		
		htmlList += '<div id="dragShowResult" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">最可能中马组合  &nbsp;&nbsp;买多少倍<input type="number" id="HowMuchPL" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits" value="700" step="100" style="width: 50px;" value="0" /> <input type="button" id="btnAllOrder" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		$("body").append(htmlList);
		
		ContentScript.HtmlAddDragEvent($("#dragTable"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult"));
		
		$("#btnAllOrder").bind("click",function(){
			var pl = parseInt($("#HowMuchPL"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder").hide();
			$("#divShowResult").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerSearch);
			clearInterval(ContentScript.timerSearchQP);
			
			$(ContentScript.orderResultList).each(function(){
				ContentScript.orderBetQ($(this)[0])
			});
		});
		
		$("#btnSave").bind("click",function(){
			var type = $("#insertType").val();
			switch(type)
			{
				case "1":
				{
					ContentScript.handerPLDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "2":
				{
					
					ContentScript.handerPLData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "3":
				{
					
					ContentScript.handerPLData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "4":
				{
					
					ContentScript.handerTicketDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "5":
				{
					
					ContentScript.handerTicketData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "6":
				{
					ContentScript.handerTicketData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "7":
				{
					
					ContentScript.handerJSDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "8":
				{
					
					ContentScript.handerJSData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "9":
				{
					
					ContentScript.handerJSData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "10":
				{
					
					ContentScript.handerJSEndData=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSEndData.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				
			}
			
			for(var i=0;i<14;i++){
				$($("#editDataLine").find("input").eq(i)).val("0");
			}
			$("#saveStatus").text("保存成功");
		});
	},
	orderBetQ:function(obj){
		var y;
		try{
			y = view1.options[view1.selectedIndex].value;
		}catch(e){
			y = $(".dd-selected-value").val();
		}
		var Limits = $("#Limits").val()
		var signInfo = ContentScript.GetSignInInfo();
		var postData = {};
		postData.task = "betBox";
		postData.combo ="box";
		postData.Tix = parseInt(obj.countJS) * parseInt($("#HowMuchPL").val());//多少票
		postData.Race = parseInt(y);
		if(parseInt(obj.hourse1)>parseInt(obj.hourse2) ){
			postData.Hss = obj.hourse2+"_"+obj.hourse1;
		}else{
			postData.Hss = obj.hourse1+"_"+obj.hourse2;
		}
		postData.type = "BET";
		postData.amount = 100;
		postData.fclmt = parseInt(Limits);
		postData.race_type = signInfo.RaceType;
		postData.race_date = signInfo.RaceDate;
	    postData.show = parseInt(y);
		postData.rd = Math.random();
		postData.post = 1;
		postData.fctype=0;
		///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
		///forecast?task=betBox&combo=box&Tix=10&Race=1&Hss=1_2&fctype=0&type=BET&amount=80&fclmt=700&race_type=3H&race_date=10-04-2016&show=1&post=1&rd=0.7604487739642092
		$.ajax({
					type: "get",
					url: ContentScript.urlX +"/forecast",
					data: postData,
					success: function (msg) {
						console.log(msg);
					},
					error:function(e){
						console.log(e);
					}
				});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
	ContentScript.onInit();
}                                         
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V722</version>
    <JSCode>
    <![CDATA[

Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	handerTicketList:['日','60分','30分'],
	handerJSList:['日','60分','30分'],
	handerPLHeadList:['日','60分','15分'],
	handerPLFooterList:['10%','25%'],
	orderResultList:[],
	urlX: "http://"+window.location.host,
	handerPLDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	has30PL:false,
	has15PL:false,
	has7PL:false,
	has5PL:false,
	has1PL:false,
	has0PL:false,
	current30PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current15PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current7PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current5PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current1PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPLData:[],
	handerTicketDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSEndData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	resultPL3Yellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPL1MinYellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultJSCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	tempJSHtml:"",
	tempTicketHtml:"",
	tempPLHtml:"",
	ChangePervChangCi:0,
	monitorTicketTimeList: [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorPLTimeList: [900,420,300,60],
	monitorJSTimeList:     [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			//,0,-30,-50,-70,-90
			if(resultValue<=0 && resultValue>-360){
				if (resultValue >-30  && resultValue<=0) {
					return 0;
				}
				if (resultValue >-50  && resultValue<=-30) {
					return -30;
				}
				if (resultValue >-70  && resultValue<=-50) {
					return -50;
				}
				if (resultValue >-90  && resultValue<=-70) {
					return -70;
				}
				if (resultValue<=-90) {
					return -90;
				}
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		
		if (TIMER > 15 && TIMER<=20) {
			return 1200;
		}
		
		if (TIMER > 10 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 7 && TIMER<=10) {
			return 600;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 3 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER > 2 && TIMER<=3) {
			return 180;
		}
		
		if (TIMER > 1 && TIMER<=2) {
			return 120;
		}
		
		if (TIMER<=1) {
			return 60;
		}
		
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return 0;
			}
			return 0;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 7 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 1 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER<=1) {
			return 60;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		ContentScript.CreateHtmlElementPage();

		ContentScript.timerSearchQP  = self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if(isTicketTime==false){
				isExistTicket=true;
			}else{
				if (isTicketTime &&  !isNaN(currentPMTime)) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistTicket = true;
							return;
						}
					});
				}
			}

			if(isPeiLvTime==false){
				isExistPL=true;
			}else{
				if (isPeiLvTime && !isNaN(currentPLTime)) {
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPLTime) {
							isExistPL = true;
							return;
						}
					});
				}
			}
			


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPLTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
				
				if(currentPLTime>=1790 && currentPLTime<=1800 && ContentScript.has30PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current30PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has30PL =true;
				}
				if(currentPLTime>=890 && currentPLTime<=900 && ContentScript.has15PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current15PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has15PL =true;
				}
				if(currentPLTime>=410 && currentPLTime<=420 && ContentScript.has7PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current7PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has7PL =true;
				}
				if(currentPLTime>=290 && currentPLTime<=300 && ContentScript.has5PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current5PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has5PL =true;
				}
				if(currentPLTime>=50 && currentPLTime<=60 && ContentScript.has1PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current1PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has1PL =true;
				}
				
			}
			if(currentPLTime<=0){
					for (var i = 1; i <= 14; i++) {
						ContentScript.currentPL[i-1]= ContentScript.getWPPLByHourse(ContentScript.getWPPLDataList(), i);
					}
					ContentScript.has0PL = true;
			}
			
			

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
            
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
			});
			
			
				var htmlTicket = '<table id="HKTicket" class="gridtable" style="width:900px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketDataOneDay[i-1] + '</td>';
				}
				htmlTicket += '<td>日</td></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData60Min[i-1] + '</td>';
				}
				htmlTicket += '<td>60</td></tr>';
				
				htmlTicket += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData30Min[i-1] + '</td>';
				}
				htmlTicket += '<td>30</td></tr>';
				
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempTicket="";
				if (!isExistTicket) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempTicket += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempTicket += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempTicket += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempTicket += '<td width="50px">' + ContentScript.getTicketByHourse(temp.Data, i) + '</td>';
							}
							tempTicket += '<td></td></tr>';
						}
					});
					ContentScript.tempTicketHtml = tempTicket;
				}

				$("#divCreateTicket").empty();
				$("#divCreateTicket").append(htmlTicket+ContentScript.tempTicketHtml);
			

			
				var htmlPeiLv = '<table id="HKPL" class="gridtable" style="width:900px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">A1</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLDataOneDay[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A1</td></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">A2</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData60Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A2</td></tr>';
				
				htmlPeiLv += '<tr class="count"><td width="65px">A3</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData30Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A3</td></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
                var tempPL = "";
                if (!isExistPL) {
                	var FirstTemp=[];
	                var HadChangeTime = true;
	                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
	                if(LastData!=undefined && LastData!=null){
	                	if(LastData.currentPMTime<=420){
		                	FirstTemp = LastData.Data;
		                }else{
		                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
		                		HadChangeTime = false;
		                	}else{
		                		$(ContentScript.monitorPLTimeData).each(function(item){
		                			var temp = $(this)[0];
		                			if(temp.currentPMTime==420){
		                				FirstTemp = temp.Data;
		                				return;
		                			}
		                		});
		                	}
		                }
	                }
	                
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempPL += '<tr class="count"><td width="50px">30分前</th>';
								}else{
									tempPL += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempPL += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempPL += '<td width="50px">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</td>';
							}
							tempPL += '<td></td></tr>';
						}
					});
					ContentScript.tempPLHtml = tempPL;
				}
				
				var htmlPeiLv2="";
				htmlPeiLv2 += '<tr id="line10"><td width="65px">10%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2+='<td></td></tr>';
				
				htmlPeiLv2 += '<tr id="line25"><td width="65px">25%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2 +='<td></td></tr>';
				
				$("#divCreatePL").empty();
				$("#divCreatePL").append(htmlPeiLv+ContentScript.tempPLHtml+htmlPeiLv2);
			    
			    //var basePL = ContentScript.handerPLDataOneDay;
			    
			    var htmlPeiLv3='<table class="gridtable" style="width:900px">';
			    var hasOneDay =false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLDataOneDay[i-1]>0 && hasOneDay==false){
			    		hasOneDay = true;
			    	}
			    }
			    var has30 = false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLData30Min[i-1]>0 && has30==false){
			    		has30 = true;
			    	}
			    }
			    
			    if(hasOneDay){
			    	if(has30){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">30</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.handerPLData30Min[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else {
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has15PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">15</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current15PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has7PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">7</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current7PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has5PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">5</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current5PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has1PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">1</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current1PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has0PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">0</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.currentPL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						
						htmlPeiLv3 +='<td></td></tr>';
						htmlPeiLv3 += '<tr id="line10"><td width="65px">0赔率</td>';
						for (var i = 1; i <= 14; i++){
							var currPL = ContentScript.currentPL[i-1];
							htmlPeiLv3 += '<td width="50px">'+ currPL +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    }
				
			htmlPeiLv3+='</table>';
			$("#divCreatePL1").empty();
			$("#divCreatePL1").append(htmlPeiLv3);
			
			ContentScript.createPLColor();
			ContentScript.createTicketColor();
			ContentScript.createResultHtml();
		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	createPLColor:function(){
		var notNeed123 = ($("#notNeed123").val()=="2");
		var data = $("#HKPL").find(".count td");
		var change10 =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var change25=  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		if(notNeed123){
			var has15Data = false;
			var plFirst = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			$(data).each(function(index){
				
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(line<=2){
					return;
				}
				
				if(item==0 && $(this).text()=="15"){
					has15Data = true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
					plFirst =pl;
				}
				
				if(has15Data && line>2 && item>=1 && item<=14 && $(data[line*16]).text()=="1"){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				
				
				if(line==3 && $(data[line*16]).text()=="15" && item>=1 && item<=14){
					var nextLine = parseFloat($(data[index+16]).text());
					var nextLine2 = parseFloat($(data[index+32]).text());
					if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
						$(this).css("background-color","orange");
						$(data[index+16]).css("background-color","orange");
						$(data[index+32]).css("background-color","orange");
						ContentScript.resultPL3Yellow[item-1]=1;
					}
				}
				
				if(line==6 && item>=1 && item<=14){
					if(plFirst[item-1]>=val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="1"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			});
		}else{
			var plFirst = ContentScript.handerPLDataOneDay;
			var has5Data=false;
			$(data).each(function(index){
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(item==0 && $(this).text()=="5"){
					has5Data =true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
				}
				
				if(has5Data && line>0 && item>=1 && item<=14){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				if(line<=2 && item>=1 && item<=14){
					if(line==0){
						var nextLine = parseFloat($(data[index+16]).text());
						var nextLine2 = parseFloat($(data[index+32]).text());
						if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
							$(this).css("background-color","orange");
							$(data[index+16]).css("background-color","orange");
							$(data[index+32]).css("background-color","orange");
							ContentScript.resultPL3Yellow[item-1]=1;
						}
					}
				}
				
				if(line>2 && item>=1 && item<=14){
					if(plFirst[item-1]>val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="1"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			} );
		}
		
		$("#line10").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change10[index-1]>0){
						$(this).css("background-color","orange");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		$("#line25").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change25[index-1]>0){
						ContentScript.resultPLCount[index-1] = 1;
						$(this).css("background-color","red");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		for(var item=0;item<14;item++){
			if(ContentScript.resultPL3Yellow[item]>0 && ContentScript.resultPL1MinYellow[item]>0){
				ContentScript.resultPLCount[item]=1;
			}
		}
		
	},
	createTicketColor:function(){
		var data = $("#HKTicket").find(".count td");
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		var lineMax = ContentScript.getLineMaxValue(data);
		$(data).each(function(index){
			var line = parseInt(index/16);
			var item = index%16;
			var val = parseFloat($(this).text())
			if(item>=1 && item<=14){
				if(lineMax[line]<=val && val>0){
					$(this).css("background-color","orange");
				}
			}
			index++;
		});
	},
	getLineMaxValue:function(obj){
		var retVal = [];
		var line = parseInt(obj.length/16);
		for(var i=0;i<line;i++){
			var lineMax=0;
			for(var j=0;j<16;j++){
			  if(j>=1 && j<=14){
			  	  var temp = parseFloat($(obj[i*16+j]).text());
				  if(temp>lineMax){
				  	lineMax= temp;
				  }
			  }
			}
			retVal.push(lineMax);
		}
		return retVal;
	},
	createResultHtml:function(){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th><th>购买</th></tr>';
		var JSLimits = parseInt($("#JSLimits").val());
		var HowMuchPL= parseInt($("#HowMuchPL").val());
		var masterList=[];
		for(var item=0;item<14;item++){
			if(ContentScript.resultPLCount[item]>0 && ContentScript.resultJSCount[item]>=JSLimits){
				masterList.push(item+1);	
			}
		}
		var resultList =[];
		var jsList=[];
		var countMa =0;
		if(masterList.length>0){
			for(var i=0;i<masterList.length;i++){
				for(var j=0;j<14;j++){
					if(ContentScript.resultJSCount[j]>0){
						jsList.push(ContentScript.resultJSCount[j]);
						if(masterList[i]!=j+1){
							var item ={"id":Math.random(),"hourse1":masterList[i],"hourse2":j+1,"countJS":ContentScript.resultJSCount[j]}
							resultList.push(item);	
							countMa+=ContentScript.resultJSCount[j];
						}
					}
				}
			}
			
			resultList.sort(function(a, b) {
				return parseInt(a["countJS"]) < parseInt(b["countJS"]) ? 1 : parseInt(a["countJS"]) == parseInt(b["countJS"]) ? 0 : -1;
			});
			
			 
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this)[0].hourse1 + '-' + $(this)[0].hourse2 +'</td><td>'+ $(this)[0].countJS +'</td><td><input type="button" value="购买" class="orderOne"/><input type="hidden" class="hiddenOrderData" value="'+ $(this)[0].id +'"/></td></tr>';
			});
			
			ContentScript.orderResultList = resultList;
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td><td>'+ parseInt(countMa)*parseInt(HowMuchPL) +'</td></tr>';
			
			$("#divShowResult").empty();
		    $("#divShowResult").append(htmlJS +'</table>');	
		    
		    $(".orderOne").bind("click",function(){
				$(this).hide();
				//下单即不再计算马
				clearInterval(ContentScript.timerSearch);
			    clearInterval(ContentScript.timerSearchQP);
				
				var data = $(this).parent().find(".hiddenOrderData").val();
				$(ContentScript.orderResultList).each(function(){
					if(data==$(this)[0].id){
						ContentScript.orderBetQ($(this)[0]);
					}
				});
			})
		}
	},
	createJSColor:function(){
		var data = $("#HKJS").find(".count td");
		//统计每个马的总数
		var countLine = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var countLineSort = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var dengData =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var lineMax = ContentScript.getLineMaxValue(data);
		var has5Data=false;
		var has1Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			if(item>=1 && item<=14){
				var val = parseFloat($(this).text())
				countLine[item-1] += val ;
				countLineSort[item-1] += val ;
				// 如果有5分钟的基数的时候
				if(has5Data){
					if(min5Line[item-1]+2 <= val){
						dengData[item-1]= val;
					}
				}
				// 如果有1分钟的基数的时候
				if(has1Data){
					if(ContentScript.resultJSCount[item-1] < val){
						ContentScript.resultJSCount[item-1]= val;
					}
				}
				
				//最大显示黄色
				if(lineMax[line]<=val && val >0){
					$(this).css("background-color","orange");
				}
			}
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					min5Line[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(item==0 && $(this).text()=="1"){
				has1Data =true;
				for(var i=1;i<=14;i++){
					ContentScript.resultJSCount[i-1]= parseFloat($(data[index+i]).text());	
				}
			}
			
			index++;
		});
		countLineSort.sort(function(a,b){return a>b?1:-1});;
		//显示统计 并且排名前3的显示黄色背景
	    $("#countJS").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(countLine[index-1] >0 && countLineSort[11]<=countLine[index-1]){
	    			$(this).text(countLine[index-1]).css("background-color","orange")
	    		}else{
	    			$(this).text(countLine[index-1]).css("background-color","")
	    		}
	    	}
	    	index++;
	    });
		//显示灯  以5分钟为基数 超过两个的显示绿色 background-color:#00FF00;
		$("#deng").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(dengData[index-1]>0){
	    			$(this).css("background-color","#00FF00")
	    		}
	    	}
	    	index++;
	  });
	},
	allOnitEvent: function() {
		ContentScript.timerSearch = self.setInterval(function() {
			var resultFirst;
			var signInfo = ContentScript.GetSignInInfo();
			var itemName = "a"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
			if (host.indexOf("Q.jsp") >= 0) {
				resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');
				var postData = {};
	            
	            postData.race_type = signInfo.RaceType;
				postData.race_date = signInfo.RaceDate;
				postData.Data = resultFirst;
				
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					localStorage.setItem(itemName,JSON.stringify(postData));
				}else{
					localStorage.setItem(itemName,JSON.stringify(postData));
				}
			}else{
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					resultFirst=null;
				}else{ 
					resultFirst = $.parseJSON(localStorage.getItem(itemName)).Data;
					ContentScript.createJSHtml(resultFirst);
					ContentScript.createJSColor();
				}
			}
            
            if(resultFirst==null || resultFirst==undefined ){
            	return;
            }
			return;
		}, 1000);
	},
	createJSHtml:function(resultFirst){
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse ==null || $(this)[0].hourse == undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}
			});

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;
			
			if(isExistsJSTime==false){
				isExistJS =true;
			}else{
				if (isExistsJSTime) {
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistJS = true;
							return;
						}
					});
				}
			}
				
				if (!isExistJS) {
					var item = {};
					item.changchi = cchi;
					item.currentPMTime = currentPMTime;
					item.Data = hourseCount;
					ContentScript.monitorJSQTimeData.push(item);
					
					ContentScript.monitorJSQTimeData.sort(function(a, b) {
						return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
					});
					
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								tempHtml += '<td width="50px">' + tempCount + '</td>';
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				
				var htmlJS = '<table id="HKJS" class="gridtable" style="width:900px">';
				htmlJS += '<tr><th width="65px">HK指数</th>';
				
				for (var i = 1; i <= 14; i++) {
					htmlJS += '<th width="50px">' + i + '</th>';
				}
				htmlJS += '<th></th></tr>'
				
				var HeardHtml = '<tr class="count"><td width="65px">A1</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSDataOneDay[i-1] + '</td>';
				}
				HeardHtml += '<td>A1</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">A2</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData60Min[i-1] + '</td>';
				}
				HeardHtml += '<td>A2</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">A3</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData30Min[i-1] + '</td>';
				}
				HeardHtml += '<td>A3</td></tr>';
				
				
				var htmlJSCount ="";
				htmlJSCount += '<tr id="countJS" style="background-color:#fff68f" ><td style="background-color:#fff68f">合脚</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f"></td>';
			    }
				htmlJSCount += '<td >合脚</td></tr>';
				
				
				var htmlJSDeng ="";
				htmlJSDeng += '<tr id="deng" style="background-color:#fff68f" ><td style="background-color:#fff68f">灯</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSDeng += '<td >  </td>';
			    }
				htmlJSDeng += '<td style="background-color:#fff68f">灯</td></tr>';
				
				var htmlJSEnd ="";
				htmlJSEnd += '<tr><td></th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSEnd += '<td > '+ i +' </td>';
			    }
				htmlJSEnd += '<td ></td></tr>';
				
				htmlJSEnd += '<tr><td width="65px"></td>';
				for (var i = 1; i <= 14; i++){
					htmlJSEnd += '<td>' + ContentScript.handerJSEndData[i-1] + '</td>';
				}
				htmlJSEnd += '<td></td></tr>';

				$("#divCreateJS").empty();
				$("#divCreateJS").append(htmlJS + HeardHtml + ContentScript.tempJSHtml + htmlJSDeng + htmlJSCount + htmlJSEnd +'</table>');
			
	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100" || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100"  || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},
	CreateHtmlElementPage:function(){
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
		htmlList += '<div id="dragTable" style="background:white;width: 900px; height: 800px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 800px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">新版统计相关报表软件 &nbsp;&nbsp;<select width="80px" id="notNeed123">'
		htmlList += '<option value="1">需要录入赔率</option><option value="2">不需要录入赔率</option></select> &nbsp;&nbsp;&nbsp;&nbsp;脚数阀值<input type="number" id="JSLimits" step="1" style="width: 50px;" value="4" /></h3>';
		htmlList += '<div id="divEditTable" style="float: left;">'
		htmlList += '<table class="gridtable" style="width:860px">';
		htmlList += '<tr><th width="65px">手动输入</th><th width="55px">1</th><th width="55px">2</th><th width="55px">3</th><th width="55px">4</th><th width="55px">5</th><th width="55px">6</th><th width="55px">7</th><th width="55px">8</th><th width="55px">9</th><th width="55px">10</th><th width="55px">11</th><th width="55px">12</th><th width="55px">13</th><th width="55px">14</th></tr>';
		htmlList += '<tr id="editDataLine"><td width="65px"><select width="60px" id="insertType">'
		htmlList += '<option value="1">赔率A1</option><option value="2">赔率A2</option><option value="3">赔率A3</option>'
		htmlList += '<option value="4">票数前日</option><option value="5">票数60分</option><option value="6">票数30分</option>'
		htmlList += '<option value="7">指数A1</option><option value="8">指数A2</option><option value="9">指数A3</option><option value="10">表格底部</option>'
		htmlList += '</select></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" />'
		htmlList += '</td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td></tr>';
		htmlList += '<td ><td colspan="16"><input type="button" style="width:200px;height:25px;" id="btnSave" title="提交" value="提交" text="确定"/><font color="blue" id="saveStatus"></font></td></tr></table>';
		htmlList += '</div>'
		htmlList += '<div id="divCreatePL" style="float: left;"></div>'
		htmlList += '<div id="divCreatePL1" style="float: left;"></div>'
		htmlList += '<div id="divCreateJS" style="float: left;"></div>'
		htmlList += '<div id="divCreateTicket" style="float: left;"></div>'
		htmlList += '</div>';
		
		htmlList += '<div id="dragShowResult" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">最可能中马组合  &nbsp;&nbsp;买多少倍<input type="number" id="HowMuchPL" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits" value="700" step="100" style="width: 50px;" value="0" /> <input type="button" id="btnAllOrder" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		$("body").append(htmlList);
		
		ContentScript.HtmlAddDragEvent($("#dragTable"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult"));
		
		$("#btnAllOrder").bind("click",function(){
			var pl = parseInt($("#HowMuchPL"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder").hide();
			$("#divShowResult").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerSearch);
			clearInterval(ContentScript.timerSearchQP);
			
			$(ContentScript.orderResultList).each(function(){
				ContentScript.orderBetQ($(this)[0])
			});
		});
		
		$("#btnSave").bind("click",function(){
			var type = $("#insertType").val();
			switch(type)
			{
				case "1":
				{
					ContentScript.handerPLDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "2":
				{
					
					ContentScript.handerPLData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "3":
				{
					
					ContentScript.handerPLData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "4":
				{
					
					ContentScript.handerTicketDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "5":
				{
					
					ContentScript.handerTicketData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "6":
				{
					ContentScript.handerTicketData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "7":
				{
					
					ContentScript.handerJSDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "8":
				{
					
					ContentScript.handerJSData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "9":
				{
					
					ContentScript.handerJSData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "10":
				{
					
					ContentScript.handerJSEndData=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSEndData.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				
			}
			
			for(var i=0;i<14;i++){
				$($("#editDataLine").find("input").eq(i)).val("0");
			}
			$("#saveStatus").text("保存成功");
		});
	},
	orderBetQ:function(obj){
		var y;
		try{
			y = view1.options[view1.selectedIndex].value;
		}catch(e){
			y = $(".dd-selected-value").val();
		}
		var Limits = $("#Limits").val()
		var signInfo = ContentScript.GetSignInInfo();
		var postData = {};
		postData.task = "betBox";
		postData.combo ="box";
		postData.Tix = parseInt(obj.countJS) * parseInt($("#HowMuchPL").val());//多少票
		postData.Race = parseInt(y);
		if(parseInt(obj.hourse1)>parseInt(obj.hourse2) ){
			postData.Hss = obj.hourse2+"_"+obj.hourse1;
		}else{
			postData.Hss = obj.hourse1+"_"+obj.hourse2;
		}
		postData.type = "BET";
		postData.amount = 100;
		postData.fclmt = parseInt(Limits);
		postData.race_type = signInfo.RaceType;
		postData.race_date = signInfo.RaceDate;
	    postData.show = parseInt(y);
		postData.rd = Math.random();
		postData.post = 1;
		postData.fctype=0;
		///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
		///forecast?task=betBox&combo=box&Tix=10&Race=1&Hss=1_2&fctype=0&type=BET&amount=80&fclmt=700&race_type=3H&race_date=10-04-2016&show=1&post=1&rd=0.7604487739642092
		$.ajax({
					type: "get",
					url: ContentScript.urlX +"/forecast",
					data: postData,
					success: function (msg) {
						console.log(msg);
					},
					error:function(e){
						console.log(e);
					}
				});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
	ContentScript.onInit();
}                                    
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V788</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	handerTicketList:['日','60分','30分'],
	handerJSList:['日','60分','30分'],
	handerPLHeadList:['日','60分','15分'],
	handerPLFooterList:['10%','25%'],
	orderResultList:[],
	urlX: "http://"+window.location.host,
	handerPLDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	has30PL:false,
	has15PL:false,
	has7PL:false,
	has5PL:false,
	has1PL:false,
	has0PL:false,
	current30PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current15PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current7PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current5PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current1PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPLData:[],
	handerTicketDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSEndData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	resultPL3Yellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPL1MinYellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultJSCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	tempJSHtml:"",
	tempTicketHtml:"",
	tempPLHtml:"",
	ChangePervChangCi:0,
	monitorTicketTimeList: [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorPLTimeList: [900,420,300,60],
	monitorJSTimeList:     [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			//,0,-30,-50,-70,-90
			if(resultValue<=0 && resultValue>-360){
				if (resultValue >-30  && resultValue<=0) {
					return 0;
				}
				if (resultValue >-50  && resultValue<=-30) {
					return -30;
				}
				if (resultValue >-70  && resultValue<=-50) {
					return -50;
				}
				if (resultValue >-90  && resultValue<=-70) {
					return -70;
				}
				if (resultValue<=-90) {
					return -90;
				}
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		
		if (TIMER > 15 && TIMER<=20) {
			return 1200;
		}
		
		if (TIMER > 10 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 7 && TIMER<=10) {
			return 600;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 3 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER > 2 && TIMER<=3) {
			return 180;
		}
		
		if (TIMER > 1 && TIMER<=2) {
			return 120;
		}
		
		if (TIMER<=1) {
			return 60;
		}
		
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return 0;
			}
			return 0;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 7 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 1 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER<=1) {
			return 60;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		ContentScript.CreateHtmlElementPage();

		ContentScript.timerSearchQP  = self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if(isTicketTime==false){
				isExistTicket=true;
			}else{
				if (isTicketTime &&  !isNaN(currentPMTime)) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistTicket = true;
							return;
						}
					});
				}
			}

			if(isPeiLvTime==false){
				isExistPL=true;
			}else{
				if (isPeiLvTime && !isNaN(currentPLTime)) {
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPLTime) {
							isExistPL = true;
							return;
						}
					});
				}
			}
			


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPLTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
				
				if(currentPLTime>=1790 && currentPLTime<=1800 && ContentScript.has30PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current30PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has30PL =true;
				}
				if(currentPLTime>=890 && currentPLTime<=900 && ContentScript.has15PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current15PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has15PL =true;
				}
				if(currentPLTime>=410 && currentPLTime<=420 && ContentScript.has7PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current7PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has7PL =true;
				}
				if(currentPLTime>=290 && currentPLTime<=300 && ContentScript.has5PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current5PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has5PL =true;
				}
				if(currentPLTime>=50 && currentPLTime<=60 && ContentScript.has1PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current1PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has1PL =true;
				}
				
			}
			if(currentPLTime<=0){
					for (var i = 1; i <= 14; i++) {
						ContentScript.currentPL[i-1]= ContentScript.getWPPLByHourse(ContentScript.getWPPLDataList(), i);
					}
					ContentScript.has0PL = true;
			}
			
			

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
            
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
			});
			
			
				var htmlTicket = '<table id="HKTicket" class="gridtable" style="width:900px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketDataOneDay[i-1] + '</td>';
				}
				htmlTicket += '<td>日</td></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData60Min[i-1] + '</td>';
				}
				htmlTicket += '<td>60</td></tr>';
				
				htmlTicket += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData30Min[i-1] + '</td>';
				}
				htmlTicket += '<td>30</td></tr>';
				
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempTicket="";
				if (!isExistTicket) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempTicket += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempTicket += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempTicket += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempTicket += '<td width="50px">' + ContentScript.getTicketByHourse(temp.Data, i) + '</td>';
							}
							tempTicket += '<td></td></tr>';
						}
					});
					ContentScript.tempTicketHtml = tempTicket;
				}

				$("#divCreateTicket").empty();
				$("#divCreateTicket").append(htmlTicket+ContentScript.tempTicketHtml);
			

			
				var htmlPeiLv = '<table id="HKPL" class="gridtable" style="width:900px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">A1</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLDataOneDay[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A1</td></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">A2</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData60Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A2</td></tr>';
				
				htmlPeiLv += '<tr class="count"><td width="65px">A3</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData30Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A3</td></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
                var tempPL = "";
                if (!isExistPL) {
                	var FirstTemp=[];
	                var HadChangeTime = true;
	                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
	                if(LastData!=undefined && LastData!=null){
	                	if(LastData.currentPMTime<=420){
		                	FirstTemp = LastData.Data;
		                }else{
		                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
		                		HadChangeTime = false;
		                	}else{
		                		$(ContentScript.monitorPLTimeData).each(function(item){
		                			var temp = $(this)[0];
		                			if(temp.currentPMTime==420){
		                				FirstTemp = temp.Data;
		                				return;
		                			}
		                		});
		                	}
		                }
	                }
	                
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempPL += '<tr class="count"><td width="50px">30分前</th>';
								}else{
									tempPL += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempPL += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempPL += '<td width="50px">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</td>';
							}
							tempPL += '<td></td></tr>';
						}
					});
					ContentScript.tempPLHtml = tempPL;
				}
				
				var htmlPeiLv2="";
				htmlPeiLv2 += '<tr id="line10"><td width="65px">10%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2+='<td></td></tr>';
				
				htmlPeiLv2 += '<tr id="line25"><td width="65px">25%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2 +='<td></td></tr>';
				
				$("#divCreatePL").empty();
				$("#divCreatePL").append(htmlPeiLv+ContentScript.tempPLHtml+htmlPeiLv2);
			    
			    //var basePL = ContentScript.handerPLDataOneDay;
			    
			    var htmlPeiLv3='<table class="gridtable" style="width:900px">';
			    var hasOneDay =false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLDataOneDay[i-1]>0 && hasOneDay==false){
			    		hasOneDay = true;
			    	}
			    }
			    var has30 = false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLData30Min[i-1]>0 && has30==false){
			    		has30 = true;
			    	}
			    }
			    
			    if(hasOneDay){
			    	if(has30){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">30</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.handerPLData30Min[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else {
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has15PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">15</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current15PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has7PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">7</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current7PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has5PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">5</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current5PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has1PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">1</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current1PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has0PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">0</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.currentPL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						
						htmlPeiLv3 +='<td></td></tr>';
						htmlPeiLv3 += '<tr id="line10"><td width="65px">0赔率</td>';
						for (var i = 1; i <= 14; i++){
							var currPL = ContentScript.currentPL[i-1];
							htmlPeiLv3 += '<td width="50px">'+ currPL +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    }
				
			htmlPeiLv3+='</table>';
			$("#divCreatePL1").empty();
			$("#divCreatePL1").append(htmlPeiLv3);
			
			ContentScript.createPLColor();
			ContentScript.createTicketColor();
			ContentScript.createResultHtml();
		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	createPLColor:function(){
		var notNeed123 = ($("#notNeed123").val()=="2");
		var data = $("#HKPL").find(".count td");
		var change10 =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var change25=  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		if(notNeed123){
			var has15Data = false;
			var plFirst = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			$(data).each(function(index){
				
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(line<=2){
					return;
				}
				
				if(item==0 && $(this).text()=="15"){
					has15Data = true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
					plFirst =pl;
				}
				
				if(has15Data && line>2 && item>=1 && item<=14 && $(data[line*16]).text()=="1"){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				
				
				if(line==3 && $(data[line*16]).text()=="15" && item>=1 && item<=14){
					var nextLine = parseFloat($(data[index+16]).text());
					var nextLine2 = parseFloat($(data[index+32]).text());
					if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
						$(this).css("background-color","orange");
						$(data[index+16]).css("background-color","orange");
						$(data[index+32]).css("background-color","orange");
						ContentScript.resultPL3Yellow[item-1]=1;
					}
				}
				
				if(line==6 && item>=1 && item<=14){
					if(plFirst[item-1]>=val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="1"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			});
		}else{
			var plFirst = ContentScript.handerPLDataOneDay;
			var has5Data=false;
			$(data).each(function(index){
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(item==0 && $(this).text()=="5"){
					has5Data =true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
				}
				
				if(has5Data && line>0 && item>=1 && item<=14){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				if(line<=2 && item>=1 && item<=14){
					if(line==0){
						var nextLine = parseFloat($(data[index+16]).text());
						var nextLine2 = parseFloat($(data[index+32]).text());
						if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
							$(this).css("background-color","orange");
							$(data[index+16]).css("background-color","orange");
							$(data[index+32]).css("background-color","orange");
							ContentScript.resultPL3Yellow[item-1]=1;
						}
					}
				}
				
				if(line>2 && item>=1 && item<=14){
					if(plFirst[item-1]>val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="1"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			} );
		}
		
		$("#line10").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change10[index-1]>0){
						$(this).css("background-color","orange");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		$("#line25").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change25[index-1]>0){
						ContentScript.resultPLCount[index-1] = 1;
						$(this).css("background-color","red");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		for(var item=0;item<14;item++){
			if(ContentScript.resultPL3Yellow[item]>0 && ContentScript.resultPL1MinYellow[item]>0){
				ContentScript.resultPLCount[item]=1;
			}
		}
		
	},
	createTicketColor:function(){
		var data = $("#HKTicket").find(".count td");
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		var lineMax = ContentScript.getLineMaxValue(data);
		$(data).each(function(index){
			var line = parseInt(index/16);
			var item = index%16;
			var val = parseFloat($(this).text())
			if(item>=1 && item<=14){
				if(lineMax[line]<=val && val>0){
					$(this).css("background-color","orange");
				}
			}
			index++;
		});
	},
	getLineMaxValue:function(obj){
		var retVal = [];
		var line = parseInt(obj.length/16);
		for(var i=0;i<line;i++){
			var lineMax=0;
			for(var j=0;j<16;j++){
			  if(j>=1 && j<=14){
			  	  var temp = parseFloat($(obj[i*16+j]).text());
				  if(temp>lineMax){
				  	lineMax= temp;
				  }
			  }
			}
			retVal.push(lineMax);
		}
		return retVal;
	},
	createResultHtml:function(){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th><th>购买</th></tr>';
		var JSLimits = parseInt($("#JSLimits").val());
		var HowMuchPL= parseInt($("#HowMuchPL").val());
		var masterList=[];
		for(var item=0;item<14;item++){
			if(ContentScript.resultPLCount[item]>0 && ContentScript.resultJSCount[item]>=JSLimits){
				masterList.push(item+1);	
			}
		}
		var resultList =[];
		var jsList=[];
		var countMa =0;
		if(masterList.length>0){
			for(var i=0;i<masterList.length;i++){
				for(var j=0;j<14;j++){
					if(ContentScript.resultJSCount[j]>0){
						jsList.push(ContentScript.resultJSCount[j]);
						if(masterList[i]!=j+1){
							var item ={"id":Math.random(),"hourse1":masterList[i],"hourse2":j+1,"countJS":ContentScript.resultJSCount[j]}
							resultList.push(item);	
							countMa+=ContentScript.resultJSCount[j];
						}
					}
				}
			}
			
			resultList.sort(function(a, b) {
				return parseInt(a["countJS"]) < parseInt(b["countJS"]) ? 1 : parseInt(a["countJS"]) == parseInt(b["countJS"]) ? 0 : -1;
			});
			
			 
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this)[0].hourse1 + '-' + $(this)[0].hourse2 +'</td><td>'+ $(this)[0].countJS +'</td><td><input type="button" value="购买" class="orderOne"/><input type="hidden" class="hiddenOrderData" value="'+ $(this)[0].id +'"/></td></tr>';
			});
			
			ContentScript.orderResultList = resultList;
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td><td>'+ parseInt(countMa)*parseInt(HowMuchPL) +'</td></tr>';
			
			$("#divShowResult").empty();
		    $("#divShowResult").append(htmlJS +'</table>');	
		    
		    $(".orderOne").bind("click",function(){
				$(this).hide();
				//下单即不再计算马
				clearInterval(ContentScript.timerSearch);
			    clearInterval(ContentScript.timerSearchQP);
				
				var data = $(this).parent().find(".hiddenOrderData").val();
				$(ContentScript.orderResultList).each(function(){
					if(data==$(this)[0].id){
						ContentScript.orderBetQ($(this)[0]);
					}
				});
			})
		}
	},
	createJSColor:function(){
		var data = $("#HKJS").find(".count td");
		//统计每个马的总数
		var countLine = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var countLineSort = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var dengData =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var lineMax = ContentScript.getLineMaxValue(data);
		var has5Data=false;
		var has1Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			if(item>=1 && item<=14){
				var val = parseFloat($(this).text())
				countLine[item-1] += val ;
				countLineSort[item-1] += val ;
				// 如果有5分钟的基数的时候
				if(has5Data){
					if(min5Line[item-1]+2 <= val){
						dengData[item-1]= val;
					}
				}
				// 如果有1分钟的基数的时候
				if(has1Data){
					if(ContentScript.resultJSCount[item-1] < val){
						ContentScript.resultJSCount[item-1]= val;
					}
				}
				
				//最大显示黄色
				if(lineMax[line]<=val && val >0){
					$(this).css("background-color","orange");
				}
			}
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					min5Line[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(item==0 && $(this).text()=="1"){
				has1Data =true;
				for(var i=1;i<=14;i++){
					ContentScript.resultJSCount[i-1]= parseFloat($(data[index+i]).text());	
				}
			}
			
			index++;
		});
		countLineSort.sort(function(a,b){return a>b?1:-1});;
		//显示统计 并且排名前3的显示黄色背景
	    $("#countJS").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(countLine[index-1] >0 && countLineSort[11]<=countLine[index-1]){
	    			$(this).text(countLine[index-1]).css("background-color","orange")
	    		}else{
	    			$(this).text(countLine[index-1]).css("background-color","")
	    		}
	    	}
	    	index++;
	    });
		//显示灯  以5分钟为基数 超过两个的显示绿色 background-color:#00FF00;
		$("#deng").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(dengData[index-1]>0){
	    			$(this).css("background-color","#00FF00")
	    		}
	    	}
	    	index++;
	  });
	},
	allOnitEvent: function() {
		ContentScript.timerSearch = self.setInterval(function() {
			var resultFirst;
			var signInfo = ContentScript.GetSignInInfo();
			var itemName = "a"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
			if (host.indexOf("Q.jsp") >= 0) {
				resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');
				var postData = {};
	            
	            postData.race_type = signInfo.RaceType;
				postData.race_date = signInfo.RaceDate;
				postData.Data = resultFirst;
				
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					localStorage.setItem(itemName,JSON.stringify(postData));
				}else{
					localStorage.setItem(itemName,JSON.stringify(postData));
				}
			}else{
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					resultFirst=null;
				}else{ 
					resultFirst = $.parseJSON(localStorage.getItem(itemName)).Data;
					ContentScript.createJSHtml(resultFirst);
					ContentScript.createJSColor();
				}
			}
            
            if(resultFirst==null || resultFirst==undefined ){
            	return;
            }
			return;
		}, 1000);
	},
	createJSHtml:function(resultFirst){
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse ==null || $(this)[0].hourse == undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}
			});

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;
			
			if(isExistsJSTime==false){
				isExistJS =true;
			}else{
				if (isExistsJSTime) {
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistJS = true;
							return;
						}
					});
				}
			}
				
				if (!isExistJS) {
					var item = {};
					item.changchi = cchi;
					item.currentPMTime = currentPMTime;
					item.Data = hourseCount;
					ContentScript.monitorJSQTimeData.push(item);
					
					ContentScript.monitorJSQTimeData.sort(function(a, b) {
						return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
					});
					
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								tempHtml += '<td width="50px">' + tempCount + '</td>';
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				
				var htmlJS = '<table id="HKJS" class="gridtable" style="width:900px">';
				htmlJS += '<tr><th width="65px">HK指数</th>';
				
				for (var i = 1; i <= 14; i++) {
					htmlJS += '<th width="50px">' + i + '</th>';
				}
				htmlJS += '<th></th></tr>'
				
				var HeardHtml = '<tr class="count"><td width="65px">A1</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSDataOneDay[i-1] + '</td>';
				}
				HeardHtml += '<td>A1</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">A2</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData60Min[i-1] + '</td>';
				}
				HeardHtml += '<td>A2</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">A3</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData30Min[i-1] + '</td>';
				}
				HeardHtml += '<td>A3</td></tr>';
				
				
				var htmlJSCount ="";
				htmlJSCount += '<tr id="countJS" style="background-color:#fff68f" ><td style="background-color:#fff68f">合脚</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f"></td>';
			    }
				htmlJSCount += '<td >合脚</td></tr>';
				
				
				var htmlJSDeng ="";
				htmlJSDeng += '<tr id="deng" style="background-color:#fff68f" ><td style="background-color:#fff68f">灯</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSDeng += '<td >  </td>';
			    }
				htmlJSDeng += '<td style="background-color:#fff68f">灯</td></tr>';
				
				var htmlJSEnd ="";
				htmlJSEnd += '<tr><td></th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSEnd += '<td > '+ i +' </td>';
			    }
				htmlJSEnd += '<td ></td></tr>';
				
				htmlJSEnd += '<tr><td width="65px"></td>';
				for (var i = 1; i <= 14; i++){
					htmlJSEnd += '<td>' + ContentScript.handerJSEndData[i-1] + '</td>';
				}
				htmlJSEnd += '<td></td></tr>';

				$("#divCreateJS").empty();
				$("#divCreateJS").append(htmlJS + HeardHtml + ContentScript.tempJSHtml + htmlJSDeng + htmlJSCount + htmlJSEnd +'</table>');
			
	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return "";
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100" || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100"  || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},
	CreateHtmlElementPage:function(){
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
		htmlList += '<div id="dragTable" style="background:white;width: 900px; height: 800px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 800px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">新版统计相关报表软件 &nbsp;&nbsp;<select width="80px" id="notNeed123">'
		htmlList += '<option value="1">需要录入赔率</option><option value="2">不需要录入赔率</option></select> &nbsp;&nbsp;&nbsp;&nbsp;脚数阀值<input type="number" id="JSLimits" step="1" style="width: 50px;" value="4" /></h3>';
		htmlList += '<div id="divEditTable" style="float: left;">'
		htmlList += '<table class="gridtable" style="width:860px">';
		htmlList += '<tr><th width="65px">手动输入</th><th width="55px">1</th><th width="55px">2</th><th width="55px">3</th><th width="55px">4</th><th width="55px">5</th><th width="55px">6</th><th width="55px">7</th><th width="55px">8</th><th width="55px">9</th><th width="55px">10</th><th width="55px">11</th><th width="55px">12</th><th width="55px">13</th><th width="55px">14</th></tr>';
		htmlList += '<tr id="editDataLine"><td width="65px"><select width="60px" id="insertType">'
		htmlList += '<option value="1">赔率A1</option><option value="2">赔率A2</option><option value="3">赔率A3</option>'
		htmlList += '<option value="4">票数前日</option><option value="5">票数60分</option><option value="6">票数30分</option>'
		htmlList += '<option value="7">指数A1</option><option value="8">指数A2</option><option value="9">指数A3</option><option value="10">表格底部</option>'
		htmlList += '</select></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" />'
		htmlList += '</td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td></tr>';
		htmlList += '<td ><td colspan="16"><input type="button" style="width:200px;height:25px;" id="btnSave" title="提交" value="提交" text="确定"/><input type="button" style="width:200px;height:25px;" id="btnGetNow" title="获取赔率" value="获取赔率" text="获取赔率"/><font color="blue" id="saveStatus"></font></td></tr></table>';
		htmlList += '</div>'
		htmlList += '<div id="divCreatePL" style="float: left;"></div>'
		htmlList += '<div id="divCreatePL1" style="float: left;"></div>'
		htmlList += '<div id="divCreateJS" style="float: left;"></div>'
		htmlList += '<div id="divCreateTicket" style="float: left;"></div>'
		htmlList += '</div>';
		
		htmlList += '<div id="dragShowResult" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">最可能中马组合  &nbsp;&nbsp;买多少倍<input type="number" id="HowMuchPL" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits" value="700" step="100" style="width: 50px;" value="0" /> <input type="button" id="btnAllOrder" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		$("body").append(htmlList);
		
		ContentScript.HtmlAddDragEvent($("#dragTable"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult"));
		
		$("#btnAllOrder").bind("click",function(){
			var pl = parseInt($("#HowMuchPL"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder").hide();
			$("#divShowResult").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerSearch);
			clearInterval(ContentScript.timerSearchQP);
			
			$(ContentScript.orderResultList).each(function(){
				ContentScript.orderBetQ($(this)[0])
			});
		});
		
		$("#btnGetNow").bind("click",function(){
			var list = $(this).parent().parent().prev().find("input[type=number]");
			var dt = ContentScript.getWPPLDataList();
			var i =1;
			$(list).each(function(item){
				$(this).val(ContentScript.getWPPLByHourse(dt, i));
				i++;
			});
		});
		
		$("#btnSave").bind("click",function(){
			var type = $("#insertType").val();
			switch(type)
			{
				case "1":
				{
					ContentScript.handerPLDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "2":
				{
					
					ContentScript.handerPLData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "3":
				{
					
					ContentScript.handerPLData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "4":
				{
					
					ContentScript.handerTicketDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "5":
				{
					
					ContentScript.handerTicketData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "6":
				{
					ContentScript.handerTicketData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "7":
				{
					
					ContentScript.handerJSDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "8":
				{
					
					ContentScript.handerJSData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "9":
				{
					
					ContentScript.handerJSData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "10":
				{
					
					ContentScript.handerJSEndData=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSEndData.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				
			}
			
			for(var i=0;i<14;i++){
				$($("#editDataLine").find("input").eq(i)).val("0");
			}
			$("#saveStatus").text("保存成功");
		});
	},
	orderBetQ:function(obj){
		var y;
		try{
			y = view1.options[view1.selectedIndex].value;
		}catch(e){
			y = $(".dd-selected-value").val();
		}
		var Limits = $("#Limits").val()
		var signInfo = ContentScript.GetSignInInfo();
		var postData = {};
		postData.task = "betBox";
		postData.combo ="box";
		postData.Tix = parseInt(obj.countJS) * parseInt($("#HowMuchPL").val());//多少票
		postData.Race = parseInt(y);
		if(parseInt(obj.hourse1)>parseInt(obj.hourse2) ){
			postData.Hss = obj.hourse2+"_"+obj.hourse1;
		}else{
			postData.Hss = obj.hourse1+"_"+obj.hourse2;
		}
		postData.type = "BET";
		postData.amount = 100;
		postData.fclmt = parseInt(Limits);
		postData.race_type = signInfo.RaceType;
		postData.race_date = signInfo.RaceDate;
	    postData.show = parseInt(y);
		postData.rd = Math.random();
		postData.post = 1;
		postData.fctype=0;
		///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
		///forecast?task=betBox&combo=box&Tix=10&Race=1&Hss=1_2&fctype=0&type=BET&amount=80&fclmt=700&race_type=3H&race_date=10-04-2016&show=1&post=1&rd=0.7604487739642092
		$.ajax({
					type: "get",
					url: ContentScript.urlX +"/forecast",
					data: postData,
					success: function (msg) {
						console.log(msg);
					},
					error:function(e){
						console.log(e);
					}
				});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
	ContentScript.onInit();
}                                            
    ]]>       
    </JSCode>
  </JSFile>
    <JSFile>
    <version>V755</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	handerTicketList:['日','60分','30分'],
	handerJSList:['日','60分','30分'],
	handerPLHeadList:['日','60分','15分'],
	handerPLFooterList:['10%','25%'],
	orderResultList:[],
	urlX: "http://"+window.location.host,
	handerPLDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	has30PL:false,
	has15PL:false,
	has7PL:false,
	has5PL:false,
	has1PL:false,
	has0PL:false,
	current30PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current15PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current7PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current5PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current1PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPLData:[],
	handerTicketDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSEndData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	resultPL3Yellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPL1MinYellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultJSCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	tempJSHtml:"",
	tempTicketHtml:"",
	tempPLHtml:"",
	ChangePervChangCi:0,
	monitorTicketTimeList: [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorPLTimeList: [900,420,300,60],
	monitorJSTimeList:     [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			//,0,-30,-50,-70,-90
			if(resultValue<=0 && resultValue>-360){
				if (resultValue >-30  && resultValue<=0) {
					return 0;
				}
				if (resultValue >-50  && resultValue<=-30) {
					return -30;
				}
				if (resultValue >-70  && resultValue<=-50) {
					return -50;
				}
				if (resultValue >-90  && resultValue<=-70) {
					return -70;
				}
				if (resultValue<=-90) {
					return -90;
				}
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		
		if (TIMER > 15 && TIMER<=20) {
			return 1200;
		}
		
		if (TIMER > 10 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 7 && TIMER<=10) {
			return 600;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 3 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER > 2 && TIMER<=3) {
			return 180;
		}
		
		if (TIMER > 1 && TIMER<=2) {
			return 120;
		}
		
		if (TIMER<=1) {
			return 60;
		}
		
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return 0;
			}
			return 0;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 7 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 1 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER<=1) {
			return 60;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		ContentScript.CreateHtmlElementPage();

		ContentScript.timerSearchQP  = self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if(isTicketTime==false){
				isExistTicket=true;
			}else{
				if (isTicketTime &&  !isNaN(currentPMTime)) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistTicket = true;
							return;
						}
					});
				}
			}

			if(isPeiLvTime==false){
				isExistPL=true;
			}else{
				if (isPeiLvTime && !isNaN(currentPLTime)) {
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPLTime) {
							isExistPL = true;
							return;
						}
					});
				}
			}
			


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPLTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
				
				if(currentPLTime>=1790 && currentPLTime<=1800 && ContentScript.has30PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current30PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has30PL =true;
				}
				if(currentPLTime>=890 && currentPLTime<=900 && ContentScript.has15PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current15PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has15PL =true;
				}
				if(currentPLTime>=410 && currentPLTime<=420 && ContentScript.has7PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current7PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has7PL =true;
				}
				if(currentPLTime>=290 && currentPLTime<=300 && ContentScript.has5PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current5PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has5PL =true;
				}
				if(currentPLTime>=50 && currentPLTime<=60 && ContentScript.has1PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current1PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has1PL =true;
				}
				
			}
			if(currentPLTime<=0){
					for (var i = 1; i <= 14; i++) {
						ContentScript.currentPL[i-1]= ContentScript.getWPPLByHourse(ContentScript.getWPPLDataList(), i);
					}
					ContentScript.has0PL = true;
			}
			
			

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
            
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
			});
			
			
				var htmlTicket = '<table id="HKTicket" class="gridtable" style="width:900px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketDataOneDay[i-1] + '</td>';
				}
				htmlTicket += '<td>日</td></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData60Min[i-1] + '</td>';
				}
				htmlTicket += '<td>60</td></tr>';
				
				htmlTicket += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData30Min[i-1] + '</td>';
				}
				htmlTicket += '<td>30</td></tr>';
				
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempTicket="";
				if (!isExistTicket) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempTicket += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempTicket += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempTicket += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempTicket += '<td width="50px">' + ContentScript.getTicketByHourse(temp.Data, i) + '</td>';
							}
							tempTicket += '<td></td></tr>';
						}
					});
					ContentScript.tempTicketHtml = tempTicket;
				}

				$("#divCreateTicket").empty();
				$("#divCreateTicket").append(htmlTicket+ContentScript.tempTicketHtml);
			

			
				var htmlPeiLv = '<table id="HKPL" class="gridtable" style="width:900px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">A1</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLDataOneDay[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A1</td></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">A2</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData60Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A2</td></tr>';
				
				htmlPeiLv += '<tr class="count"><td width="65px">A3</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData30Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A3</td></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
                var tempPL = "";
                if (!isExistPL) {
                	var FirstTemp=[];
	                var HadChangeTime = true;
	                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
	                if(LastData!=undefined && LastData!=null){
	                	if(LastData.currentPMTime<=420){
		                	FirstTemp = LastData.Data;
		                }else{
		                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
		                		HadChangeTime = false;
		                	}else{
		                		$(ContentScript.monitorPLTimeData).each(function(item){
		                			var temp = $(this)[0];
		                			if(temp.currentPMTime==420){
		                				FirstTemp = temp.Data;
		                				return;
		                			}
		                		});
		                	}
		                }
	                }
	                
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempPL += '<tr class="count"><td width="50px">30分前</th>';
								}else{
									tempPL += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempPL += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempPL += '<td width="50px">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</td>';
							}
							tempPL += '<td></td></tr>';
						}
					});
					ContentScript.tempPLHtml = tempPL;
				}
				
				var htmlPeiLv2="";
				htmlPeiLv2 += '<tr id="line10"><td width="65px">10%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2+='<td></td></tr>';
				
				htmlPeiLv2 += '<tr id="line25"><td width="65px">25%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2 +='<td></td></tr>';
				
				$("#divCreatePL").empty();
				$("#divCreatePL").append(htmlPeiLv+ContentScript.tempPLHtml+htmlPeiLv2);
			    
			    //var basePL = ContentScript.handerPLDataOneDay;
			    
			    var htmlPeiLv3='<table class="gridtable" style="width:900px">';
			    var hasOneDay =false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLDataOneDay[i-1]>0 && hasOneDay==false){
			    		hasOneDay = true;
			    	}
			    }
			    var has30 = false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLData30Min[i-1]>0 && has30==false){
			    		has30 = true;
			    	}
			    }
			    
			    if(hasOneDay){
			    	if(has30){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">30</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.handerPLData30Min[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else {
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has15PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">15</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current15PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has7PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">7</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current7PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has5PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">5</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current5PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has1PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">1</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current1PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has0PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">0</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.currentPL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						
						htmlPeiLv3 +='<td></td></tr>';
						htmlPeiLv3 += '<tr id="line10"><td width="65px">0赔率</td>';
						for (var i = 1; i <= 14; i++){
							var currPL = ContentScript.currentPL[i-1];
							htmlPeiLv3 += '<td width="50px">'+ currPL +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    }
				
			htmlPeiLv3+='</table>';
			$("#divCreatePL1").empty();
			$("#divCreatePL1").append(htmlPeiLv3);
			
			ContentScript.createPLColor();
			ContentScript.createTicketColor();
			ContentScript.createResultHtml();
		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	createPLColor:function(){
		var notNeed123 = ($("#notNeed123").val()=="2");
		var data = $("#HKPL").find(".count td");
		var change10 =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var change25=  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		if(notNeed123){
			var has15Data = false;
			var plFirst = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			$(data).each(function(index){
				
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(line<=2){
					return;
				}
				
				if(item==0 && $(this).text()=="15"){
					has15Data = true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
					plFirst =pl;
				}
				
				if(has15Data && line>2 && item>=1 && item<=14 && $(data[line*16]).text()=="1"){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				
				
				if(line==3 && $(data[line*16]).text()=="15" && item>=1 && item<=14){
					var nextLine = parseFloat($(data[index+16]).text());
					var nextLine2 = parseFloat($(data[index+32]).text());
					if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
						$(this).css("background-color","orange");
						$(data[index+16]).css("background-color","orange");
						$(data[index+32]).css("background-color","orange");
						ContentScript.resultPL3Yellow[item-1]=1;
					}
				}
				
				if(line==6 && item>=1 && item<=14){
					if(plFirst[item-1]>=val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="5"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			});
		}else{
			var plFirst = ContentScript.handerPLDataOneDay;
			var has5Data=false;
			$(data).each(function(index){
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(item==0 && $(this).text()=="5"){
					has5Data =true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
				}
				
				if(has5Data && line>0 && item>=1 && item<=14){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				if(line<=2 && item>=1 && item<=14){
					if(line==0){
						var nextLine = parseFloat($(data[index+16]).text());
						var nextLine2 = parseFloat($(data[index+32]).text());
						if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
							$(this).css("background-color","orange");
							$(data[index+16]).css("background-color","orange");
							$(data[index+32]).css("background-color","orange");
							ContentScript.resultPL3Yellow[item-1]=1;
						}
					}
				}
				
				if(line>2 && item>=1 && item<=14){
					if(plFirst[item-1]>val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="5"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			} );
		}
		
		$("#line10").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change10[index-1]>0){
						$(this).css("background-color","orange");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		$("#line25").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change25[index-1]>0){
						ContentScript.resultPLCount[index-1] = 1;
						$(this).css("background-color","red");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		for(var item=0;item<14;item++){
			//if(ContentScript.resultPL3Yellow[item]>0 && ContentScript.resultPL1MinYellow[item]>0){
			if(ContentScript.resultPL3Yellow[item]>0){
				ContentScript.resultPLCount[item]=1;
			}
		}
		
	},
	createTicketColor:function(){
		var data = $("#HKTicket").find(".count td");
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		var lineMax = ContentScript.getLineMaxValue(data);
		$(data).each(function(index){
			var line = parseInt(index/16);
			var item = index%16;
			var val = parseFloat($(this).text())
			if(item>=1 && item<=14){
				if(lineMax[line]<=val && val>0){
					$(this).css("background-color","orange");
				}
			}
			index++;
		});
	},
	getLineMaxValue:function(obj){
		var retVal = [];
		var line = parseInt(obj.length/16);
		for(var i=0;i<line;i++){
			var lineMax=0;
			for(var j=0;j<16;j++){
			  if(j>=1 && j<=14){
			  	  var temp = parseFloat($(obj[i*16+j]).text());
				  if(temp>lineMax){
				  	lineMax= temp;
				  }
			  }
			}
			retVal.push(lineMax);
		}
		return retVal;
	},
	createResultHtml:function(){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th><th>购买</th></tr>';
		var JSLimits = parseInt($("#JSLimits").val());
		var HowMuchPL= parseInt($("#HowMuchPL").val());
		var masterList=[];
		for(var item=0;item<14;item++){
			if(ContentScript.resultPLCount[item]>0 && ContentScript.resultJSCount[item]>=JSLimits){
				masterList.push(item+1);	
			}
		}
		var resultList =[];
		var jsList=[];
		var countMa =0;
		if(masterList.length>0){
			for(var i=0;i<masterList.length;i++){
				for(var j=0;j<14;j++){
					if(ContentScript.resultJSCount[j]>0){
						jsList.push(ContentScript.resultJSCount[j]);
						if(masterList[i]!=j+1){
							var item ={"id":Math.random(),"hourse1":masterList[i],"hourse2":j+1,"countJS":ContentScript.resultJSCount[j]}
							resultList.push(item);	
							countMa+=ContentScript.resultJSCount[j];
						}
					}
				}
			}
			
			resultList.sort(function(a, b) {
				return parseInt(a["countJS"]) < parseInt(b["countJS"]) ? 1 : parseInt(a["countJS"]) == parseInt(b["countJS"]) ? 0 : -1;
			});
			
			 
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this)[0].hourse1 + '-' + $(this)[0].hourse2 +'</td><td>'+ $(this)[0].countJS +'</td><td><input type="button" value="购买" class="orderOne"/><input type="hidden" class="hiddenOrderData" value="'+ $(this)[0].id +'"/></td></tr>';
			});
			
			ContentScript.orderResultList = resultList;
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td><td>'+ parseInt(countMa)*parseInt(HowMuchPL) +'</td></tr>';
			
			$("#divShowResult").empty();
		    $("#divShowResult").append(htmlJS +'</table>');	
		    
		    $(".orderOne").bind("click",function(){
				$(this).hide();
				//下单即不再计算马
				clearInterval(ContentScript.timerSearch);
			    clearInterval(ContentScript.timerSearchQP);
				
				var data = $(this).parent().find(".hiddenOrderData").val();
				$(ContentScript.orderResultList).each(function(){
					if(data==$(this)[0].id){
						ContentScript.orderBetQ($(this)[0]);
					}
				});
			})
		}
	},
	createJSColor:function(){
		var data = $("#HKJS").find(".count td");
		//统计每个马的总数
		var countLine = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var countLineSort = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var dengData =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var lineMax = ContentScript.getLineMaxValue(data);
		var has5Data=false;
		var has1Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			if(item>=1 && item<=14){
				var val = parseFloat($(this).text())
				countLine[item-1] += val ;
				countLineSort[item-1] += val ;
				// 如果有5分钟的基数的时候
				if(has5Data){
					if(min5Line[item-1]+2 <= val){
						dengData[item-1]= val;
					}
				}
				// 如果有1分钟的基数的时候
				if(has1Data){
					if(ContentScript.resultJSCount[item-1] < val){
						ContentScript.resultJSCount[item-1]= val;
					}
				}
				
				//最大显示黄色
				if(lineMax[line]<=val && val >0){
					$(this).css("background-color","orange");
				}
			}
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					min5Line[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(item==0 && $(this).text()=="5"){
				has1Data =true;
				for(var i=1;i<=14;i++){
					ContentScript.resultJSCount[i-1]= parseFloat($(data[index+i]).text());	
				}
			}
			
			index++;
		});
		countLineSort.sort(function(a,b){return a>b?1:-1});;
		//显示统计 并且排名前3的显示黄色背景
	    $("#countJS").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(countLine[index-1] >0 && countLineSort[11]<=countLine[index-1]){
	    			$(this).text(countLine[index-1]).css("background-color","orange")
	    		}else{
	    			$(this).text(countLine[index-1]).css("background-color","")
	    		}
	    	}
	    	index++;
	    });
		//显示灯  以5分钟为基数 超过两个的显示绿色 background-color:#00FF00;
		$("#deng").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(dengData[index-1]>0){
	    			$(this).css("background-color","#00FF00")
	    		}
	    	}
	    	index++;
	  });
	},
	allOnitEvent: function() {
		ContentScript.timerSearch = self.setInterval(function() {
			var resultFirst;
			var signInfo = ContentScript.GetSignInInfo();
			var itemName = "a"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
			if (host.indexOf("Q.jsp") >= 0) {
				resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');
				var postData = {};
	            
	            postData.race_type = signInfo.RaceType;
				postData.race_date = signInfo.RaceDate;
				postData.Data = resultFirst;
				
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					localStorage.setItem(itemName,JSON.stringify(postData));
				}else{
					localStorage.setItem(itemName,JSON.stringify(postData));
				}
			}else{
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					resultFirst=null;
				}else{ 
					resultFirst = $.parseJSON(localStorage.getItem(itemName)).Data;
					ContentScript.createJSHtml(resultFirst);
					ContentScript.createJSColor();
				}
			}
            
            if(resultFirst==null || resultFirst==undefined ){
            	return;
            }
			return;
		}, 1000);
	},
	createJSHtml:function(resultFirst){
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse ==null || $(this)[0].hourse == undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}
			});

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;
			
			if(isExistsJSTime==false){
				isExistJS =true;
			}else{
				if (isExistsJSTime) {
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistJS = true;
							return;
						}
					});
				}
			}
				
				if (!isExistJS) {
					var item = {};
					item.changchi = cchi;
					item.currentPMTime = currentPMTime;
					item.Data = hourseCount;
					ContentScript.monitorJSQTimeData.push(item);
					
					ContentScript.monitorJSQTimeData.sort(function(a, b) {
						return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
					});
					
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								tempHtml += '<td width="50px">' + tempCount + '</td>';
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				
				var htmlJS = '<table id="HKJS" class="gridtable" style="width:900px">';
				htmlJS += '<tr><th width="65px">HK指数</th>';
				
				for (var i = 1; i <= 14; i++) {
					htmlJS += '<th width="50px">' + i + '</th>';
				}
				htmlJS += '<th></th></tr>'
				
				var HeardHtml = '<tr class="count"><td width="65px">A1</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSDataOneDay[i-1] + '</td>';
				}
				HeardHtml += '<td>A1</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">A2</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData60Min[i-1] + '</td>';
				}
				HeardHtml += '<td>A2</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">A3</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData30Min[i-1] + '</td>';
				}
				HeardHtml += '<td>A3</td></tr>';
				
				
				var htmlJSCount ="";
				htmlJSCount += '<tr id="countJS" style="background-color:#fff68f" ><td style="background-color:#fff68f">合脚</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f"></td>';
			    }
				htmlJSCount += '<td >合脚</td></tr>';
				
				
				var htmlJSDeng ="";
				htmlJSDeng += '<tr id="deng" style="background-color:#fff68f" ><td style="background-color:#fff68f">灯</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSDeng += '<td >  </td>';
			    }
				htmlJSDeng += '<td style="background-color:#fff68f">灯</td></tr>';
				
				var htmlJSEnd ="";
				htmlJSEnd += '<tr><td></th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSEnd += '<td > '+ i +' </td>';
			    }
				htmlJSEnd += '<td ></td></tr>';
				
				htmlJSEnd += '<tr><td width="65px"></td>';
				for (var i = 1; i <= 14; i++){
					htmlJSEnd += '<td>' + ContentScript.handerJSEndData[i-1] + '</td>';
				}
				htmlJSEnd += '<td></td></tr>';

				$("#divCreateJS").empty();
				$("#divCreateJS").append(htmlJS + HeardHtml + ContentScript.tempJSHtml + htmlJSDeng + htmlJSCount + htmlJSEnd +'</table>');
			
	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100" || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100"  || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},
	CreateHtmlElementPage:function(){
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
		htmlList += '<div id="dragTable" style="background:white;width: 900px; height: 800px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 800px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">新版统计相关报表软件 &nbsp;&nbsp;<select width="80px" id="notNeed123">'
		htmlList += '<option value="1">需要录入赔率</option><option value="2">不需要录入赔率</option></select> &nbsp;&nbsp;&nbsp;&nbsp;脚数阀值<input type="number" id="JSLimits" step="1" style="width: 50px;" value="4" /></h3>';
		htmlList += '<div id="divEditTable" style="float: left;">'
		htmlList += '<table class="gridtable" style="width:860px">';
		htmlList += '<tr><th width="65px">手动输入</th><th width="55px">1</th><th width="55px">2</th><th width="55px">3</th><th width="55px">4</th><th width="55px">5</th><th width="55px">6</th><th width="55px">7</th><th width="55px">8</th><th width="55px">9</th><th width="55px">10</th><th width="55px">11</th><th width="55px">12</th><th width="55px">13</th><th width="55px">14</th></tr>';
		htmlList += '<tr id="editDataLine"><td width="65px"><select width="60px" id="insertType">'
		htmlList += '<option value="1">赔率A1</option><option value="2">赔率A2</option><option value="3">赔率A3</option>'
		htmlList += '<option value="4">票数前日</option><option value="5">票数60分</option><option value="6">票数30分</option>'
		htmlList += '<option value="7">指数A1</option><option value="8">指数A2</option><option value="9">指数A3</option><option value="10">表格底部</option>'
		htmlList += '</select></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" />'
		htmlList += '</td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td></tr>';
		htmlList += '<td ><td colspan="16"><input type="button" style="width:200px;height:25px;" id="btnSave" title="提交" value="提交" text="确定"/><font color="blue" id="saveStatus"></font></td></tr></table>';
		htmlList += '</div>'
		htmlList += '<div id="divCreatePL" style="float: left;"></div>'
		htmlList += '<div id="divCreatePL1" style="float: left;"></div>'
		htmlList += '<div id="divCreateJS" style="float: left;"></div>'
		htmlList += '<div id="divCreateTicket" style="float: left;"></div>'
		htmlList += '</div>';
		
		htmlList += '<div id="dragShowResult" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">最可能中马组合  &nbsp;&nbsp;买多少倍<input type="number" id="HowMuchPL" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits" value="700" step="100" style="width: 50px;" value="0" /> <input type="button" id="btnAllOrder" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		$("body").append(htmlList);
		
		ContentScript.HtmlAddDragEvent($("#dragTable"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult"));
		
		$("#btnAllOrder").bind("click",function(){
			var pl = parseInt($("#HowMuchPL"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder").hide();
			$("#divShowResult").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerSearch);
			clearInterval(ContentScript.timerSearchQP);
			
			$(ContentScript.orderResultList).each(function(){
				ContentScript.orderBetQ($(this)[0])
			});
		});
		
		$("#btnSave").bind("click",function(){
			var type = $("#insertType").val();
			switch(type)
			{
				case "1":
				{
					ContentScript.handerPLDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "2":
				{
					
					ContentScript.handerPLData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "3":
				{
					
					ContentScript.handerPLData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "4":
				{
					
					ContentScript.handerTicketDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "5":
				{
					
					ContentScript.handerTicketData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "6":
				{
					ContentScript.handerTicketData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "7":
				{
					
					ContentScript.handerJSDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "8":
				{
					
					ContentScript.handerJSData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "9":
				{
					
					ContentScript.handerJSData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "10":
				{
					
					ContentScript.handerJSEndData=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSEndData.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				
			}
			
			for(var i=0;i<14;i++){
				$($("#editDataLine").find("input").eq(i)).val("0");
			}
			$("#saveStatus").text("保存成功");
		});
	},
	orderBetQ:function(obj){
		var y;
		try{
			y = view1.options[view1.selectedIndex].value;
		}catch(e){
			y = $(".dd-selected-value").val();
		}
		var Limits = $("#Limits").val()
		var signInfo = ContentScript.GetSignInInfo();
		var postData = {};
		postData.task = "betBox";
		postData.combo ="box";
		postData.Tix = parseInt(obj.countJS) * parseInt($("#HowMuchPL").val());//多少票
		postData.Race = parseInt(y);
		if(parseInt(obj.hourse1)>parseInt(obj.hourse2) ){
			postData.Hss = obj.hourse2+"_"+obj.hourse1;
		}else{
			postData.Hss = obj.hourse1+"_"+obj.hourse2;
		}
		postData.type = "BET";
		postData.amount = 100;
		postData.fclmt = parseInt(Limits);
		postData.race_type = signInfo.RaceType;
		postData.race_date = signInfo.RaceDate;
	    postData.show = parseInt(y);
		postData.rd = Math.random();
		postData.post = 1;
		postData.fctype=0;
		///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
		///forecast?task=betBox&combo=box&Tix=10&Race=1&Hss=1_2&fctype=0&type=BET&amount=80&fclmt=700&race_type=3H&race_date=10-04-2016&show=1&post=1&rd=0.7604487739642092
		$.ajax({
					type: "get",
					url: ContentScript.urlX +"/forecast",
					data: postData,
					success: function (msg) {
						console.log(msg);
					},
					error:function(e){
						console.log(e);
					}
				});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
	ContentScript.onInit();
}                                                                      
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V756</version>
    <JSCode>
    <![CDATA[

Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	handerTicketList:['日','60分','30分'],
	handerJSList:['日','60分','30分'],
	handerPLHeadList:['日','60分','15分'],
	handerPLFooterList:['10%','25%'],
	orderResultList:[],
	urlX: "http://"+window.location.host,
	handerPLDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	has30PL:false,
	has15PL:false,
	has7PL:false,
	has5PL:false,
	has1PL:false,
	has0PL:false,
	current30PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current15PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current7PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current5PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current1PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPLData:[],
	handerTicketDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSEndData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	resultPL3Yellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPL1MinYellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultJSCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	tempJSHtml:"",
	tempTicketHtml:"",
	tempPLHtml:"",
	ChangePervChangCi:0,
	monitorTicketTimeList: [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorPLTimeList: [900,420,300,60],
	monitorJSTimeList:     [1200,900,600,420,300,180,120,60,0,-30,-50,-70,-90],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			//,0,-30,-50,-70,-90
			if(resultValue<=0 && resultValue>-360){
				if (resultValue >-30  && resultValue<=0) {
					return 0;
				}
				if (resultValue >-50  && resultValue<=-30) {
					return -30;
				}
				if (resultValue >-70  && resultValue<=-50) {
					return -50;
				}
				if (resultValue >-90  && resultValue<=-70) {
					return -70;
				}
				if (resultValue<=-90) {
					return -90;
				}
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		
		if (TIMER > 15 && TIMER<=20) {
			return 1200;
		}
		
		if (TIMER > 10 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 7 && TIMER<=10) {
			return 600;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 3 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER > 2 && TIMER<=3) {
			return 180;
		}
		
		if (TIMER > 1 && TIMER<=2) {
			return 120;
		}
		
		if (TIMER<=1) {
			return 60;
		}
		
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return 0;
			}
			return 0;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 7 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 1 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER<=1) {
			return 60;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		ContentScript.CreateHtmlElementPage();

		ContentScript.timerSearchQP  = self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if(isTicketTime==false){
				isExistTicket=true;
			}else{
				if (isTicketTime &&  !isNaN(currentPMTime)) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistTicket = true;
							return;
						}
					});
				}
			}

			if(isPeiLvTime==false){
				isExistPL=true;
			}else{
				if (isPeiLvTime && !isNaN(currentPLTime)) {
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPLTime) {
							isExistPL = true;
							return;
						}
					});
				}
			}
			


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPLTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
				
				if(currentPLTime>=1790 && currentPLTime<=1800 && ContentScript.has30PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current30PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has30PL =true;
				}
				if(currentPLTime>=890 && currentPLTime<=900 && ContentScript.has15PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current15PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has15PL =true;
				}
				if(currentPLTime>=410 && currentPLTime<=420 && ContentScript.has7PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current7PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has7PL =true;
				}
				if(currentPLTime>=290 && currentPLTime<=300 && ContentScript.has5PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current5PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has5PL =true;
				}
				if(currentPLTime>=50 && currentPLTime<=60 && ContentScript.has1PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current1PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has1PL =true;
				}
				
			}
			if(currentPLTime<=0){
					for (var i = 1; i <= 14; i++) {
						ContentScript.currentPL[i-1]= ContentScript.getWPPLByHourse(ContentScript.getWPPLDataList(), i);
					}
					ContentScript.has0PL = true;
			}
			
			

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
            
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
			});
			
			
				var htmlTicket = '<table id="HKTicket" class="gridtable" style="width:900px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketDataOneDay[i-1] + '</td>';
				}
				htmlTicket += '<td>日</td></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData60Min[i-1] + '</td>';
				}
				htmlTicket += '<td>60</td></tr>';
				
				htmlTicket += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData30Min[i-1] + '</td>';
				}
				htmlTicket += '<td>30</td></tr>';
				
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempTicket="";
				if (!isExistTicket) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempTicket += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempTicket += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempTicket += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempTicket += '<td width="50px">' + ContentScript.getTicketByHourse(temp.Data, i) + '</td>';
							}
							tempTicket += '<td></td></tr>';
						}
					});
					ContentScript.tempTicketHtml = tempTicket;
				}

				$("#divCreateTicket").empty();
				$("#divCreateTicket").append(htmlTicket+ContentScript.tempTicketHtml);
			

			
				var htmlPeiLv = '<table id="HKPL" class="gridtable" style="width:900px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">A1</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLDataOneDay[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A1</td></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">A2</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData60Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A2</td></tr>';
				
				htmlPeiLv += '<tr class="count"><td width="65px">A3</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData30Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A3</td></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
                var tempPL = "";
                if (!isExistPL) {
                	var FirstTemp=[];
	                var HadChangeTime = true;
	                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
	                if(LastData!=undefined && LastData!=null){
	                	if(LastData.currentPMTime<=420){
		                	FirstTemp = LastData.Data;
		                }else{
		                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
		                		HadChangeTime = false;
		                	}else{
		                		$(ContentScript.monitorPLTimeData).each(function(item){
		                			var temp = $(this)[0];
		                			if(temp.currentPMTime==420){
		                				FirstTemp = temp.Data;
		                				return;
		                			}
		                		});
		                	}
		                }
	                }
	                
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempPL += '<tr class="count"><td width="50px">30分前</th>';
								}else{
									tempPL += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempPL += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempPL += '<td width="50px">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</td>';
							}
							tempPL += '<td></td></tr>';
						}
					});
					ContentScript.tempPLHtml = tempPL;
				}
				
				var htmlPeiLv2="";
				htmlPeiLv2 += '<tr id="line10"><td width="65px">10%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2+='<td></td></tr>';
				
				htmlPeiLv2 += '<tr id="line25"><td width="65px">25%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2 +='<td></td></tr>';
				
				$("#divCreatePL").empty();
				$("#divCreatePL").append(htmlPeiLv+ContentScript.tempPLHtml+htmlPeiLv2);
			    
			    //var basePL = ContentScript.handerPLDataOneDay;
			    
			    var htmlPeiLv3='<table class="gridtable" style="width:900px">';
			    var hasOneDay =false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLDataOneDay[i-1]>0 && hasOneDay==false){
			    		hasOneDay = true;
			    	}
			    }
			    var has30 = false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLData30Min[i-1]>0 && has30==false){
			    		has30 = true;
			    	}
			    }
			    
			    if(hasOneDay){
			    	if(has30){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">30</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.handerPLData30Min[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else {
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has15PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">15</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current15PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has7PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">7</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current7PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has5PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">5</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current5PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has1PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">1</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current1PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has0PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">0</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.currentPL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						
						htmlPeiLv3 +='<td></td></tr>';
						htmlPeiLv3 += '<tr id="line10"><td width="65px">0赔率</td>';
						for (var i = 1; i <= 14; i++){
							var currPL = ContentScript.currentPL[i-1];
							htmlPeiLv3 += '<td width="50px">'+ currPL +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    }
				
			htmlPeiLv3+='</table>';
			$("#divCreatePL1").empty();
			$("#divCreatePL1").append(htmlPeiLv3);
			
			ContentScript.createPLColor();
			ContentScript.createTicketColor();
			ContentScript.createResultHtml();
		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	createPLColor:function(){
		var notNeed123 = ($("#notNeed123").val()=="2");
		var data = $("#HKPL").find(".count td");
		var change10 =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var change25=  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		if(notNeed123){
			var has15Data = false;
			var plFirst = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			$(data).each(function(index){
				
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(line<=2){
					return;
				}
				
				if(item==0 && $(this).text()=="15"){
					has15Data = true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
					plFirst =pl;
				}
				
				if(has15Data && line>2 && item>=1 && item<=14 && $(data[line*16]).text()=="1"){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				
				
				if(line==3 && $(data[line*16]).text()=="15" && item>=1 && item<=14){
					var nextLine = parseFloat($(data[index+16]).text());
					var nextLine2 = parseFloat($(data[index+32]).text());
					if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
						$(this).css("background-color","orange");
						$(data[index+16]).css("background-color","orange");
						$(data[index+32]).css("background-color","orange");
						ContentScript.resultPL3Yellow[item-1]=1;
					}
				}
				
				if(line==6 && item>=1 && item<=14){
					if(plFirst[item-1]>=val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="5"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			});
		}else{
			var plFirst = ContentScript.handerPLDataOneDay;
			var has5Data=false;
			$(data).each(function(index){
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(item==0 && $(this).text()=="5"){
					has5Data =true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
				}
				
				if(has5Data && line>0 && item>=1 && item<=14){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				if(line<=2 && item>=1 && item<=14){
					if(line==0){
						var nextLine = parseFloat($(data[index+16]).text());
						var nextLine2 = parseFloat($(data[index+32]).text());
						if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
							$(this).css("background-color","orange");
							$(data[index+16]).css("background-color","orange");
							$(data[index+32]).css("background-color","orange");
							ContentScript.resultPL3Yellow[item-1]=1;
						}
					}
				}
				
				if(line>2 && item>=1 && item<=14){
					if(plFirst[item-1]>val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="5"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			} );
		}
		
		$("#line10").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change10[index-1]>0){
						$(this).css("background-color","orange");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		$("#line25").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change25[index-1]>0){
						ContentScript.resultPLCount[index-1] = 1;
						$(this).css("background-color","red");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		for(var item=0;item<14;item++){
			//if(ContentScript.resultPL3Yellow[item]>0 && ContentScript.resultPL1MinYellow[item]>0){
			if(ContentScript.resultPL3Yellow[item]>0){
				ContentScript.resultPLCount[item]=1;
			}
		}
		
	},
	createTicketColor:function(){
		var data = $("#HKTicket").find(".count td");
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		var lineMax = ContentScript.getLineMaxValue(data);
		$(data).each(function(index){
			var line = parseInt(index/16);
			var item = index%16;
			var val = parseFloat($(this).text())
			if(item>=1 && item<=14){
				if(lineMax[line]<=val && val>0){
					$(this).css("background-color","orange");
				}
			}
			index++;
		});
	},
	getLineMaxValue:function(obj){
		var retVal = [];
		var line = parseInt(obj.length/16);
		for(var i=0;i<line;i++){
			var lineMax=0;
			for(var j=0;j<16;j++){
			  if(j>=1 && j<=14){
			  	  var temp = parseFloat($(obj[i*16+j]).text());
				  if(temp>lineMax){
				  	lineMax= temp;
				  }
			  }
			}
			retVal.push(lineMax);
		}
		return retVal;
	},
	createResultHtml:function(){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th><th>购买</th></tr>';
		var JSLimits = parseInt($("#JSLimits").val());
		var HowMuchPL= parseInt($("#HowMuchPL").val());
		var masterList=[];
		for(var item=0;item<14;item++){
			if(ContentScript.resultPLCount[item]>0 && ContentScript.resultJSCount[item]>=JSLimits){
				masterList.push(item+1);	
			}
		}
		var resultList =[];
		var jsList=[];
		var countMa =0;
		if(masterList.length>0){
			for(var i=0;i<masterList.length;i++){
				for(var j=0;j<14;j++){
					if(ContentScript.resultJSCount[j]>0){
						jsList.push(ContentScript.resultJSCount[j]);
						if(masterList[i]!=j+1){
							var item ={"id":Math.random(),"hourse1":masterList[i],"hourse2":j+1,"countJS":ContentScript.resultJSCount[j]}
							resultList.push(item);	
							countMa+=ContentScript.resultJSCount[j];
						}
					}
				}
			}
			
			resultList.sort(function(a, b) {
				return parseInt(a["countJS"]) < parseInt(b["countJS"]) ? 1 : parseInt(a["countJS"]) == parseInt(b["countJS"]) ? 0 : -1;
			});
			
			 
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this)[0].hourse1 + '-' + $(this)[0].hourse2 +'</td><td>'+ $(this)[0].countJS +'</td><td><input type="button" value="购买" class="orderOne"/><input type="hidden" class="hiddenOrderData" value="'+ $(this)[0].id +'"/></td></tr>';
			});
			
			ContentScript.orderResultList = resultList;
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td><td>'+ parseInt(countMa)*parseInt(HowMuchPL) +'</td></tr>';
			
			$("#divShowResult").empty();
		    $("#divShowResult").append(htmlJS +'</table>');	
		    
		    $(".orderOne").bind("click",function(){
				$(this).hide();
				//下单即不再计算马
				clearInterval(ContentScript.timerSearch);
			    clearInterval(ContentScript.timerSearchQP);
				
				var data = $(this).parent().find(".hiddenOrderData").val();
				$(ContentScript.orderResultList).each(function(){
					if(data==$(this)[0].id){
						ContentScript.orderBetQ($(this)[0]);
					}
				});
			})
		}
	},
	createJSColor:function(){
		var data = $("#HKJS").find(".count td");
		//统计每个马的总数
		var countLine = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var countLineSort = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var dengData =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var lineMax = ContentScript.getLineMaxValue(data);
		var has5Data=false;
		var has1Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			if(item>=1 && item<=14){
				var val = parseFloat($(this).text())
				countLine[item-1] += val ;
				countLineSort[item-1] += val ;
				// 如果有5分钟的基数的时候
				if(has5Data){
					if(min5Line[item-1]+2 <= val){
						dengData[item-1]= val;
					}
				}
				// 如果有1分钟的基数的时候
				if(has1Data){
					if(ContentScript.resultJSCount[item-1] < val){
						ContentScript.resultJSCount[item-1]= val;
					}
				}
				
				//最大显示黄色
				if(lineMax[line]<=val && val >0){
					$(this).css("background-color","orange");
				}
			}
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					min5Line[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(item==0 && $(this).text()=="5"){
				has1Data =true;
				for(var i=1;i<=14;i++){
					ContentScript.resultJSCount[i-1]= parseFloat($(data[index+i]).text());	
				}
			}
			
			index++;
		});
		countLineSort.sort(function(a,b){return a>b?1:-1});;
		//显示统计 并且排名前3的显示黄色背景
	    $("#countJS").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(countLine[index-1] >0 && countLineSort[11]<=countLine[index-1]){
	    			$(this).text(countLine[index-1]).css("background-color","orange")
	    		}else{
	    			$(this).text(countLine[index-1]).css("background-color","")
	    		}
	    	}
	    	index++;
	    });
		//显示灯  以5分钟为基数 超过两个的显示绿色 background-color:#00FF00;
		$("#deng").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(dengData[index-1]>0){
	    			$(this).css("background-color","#00FF00")
	    		}
	    	}
	    	index++;
	  });
	},
	allOnitEvent: function() {
		ContentScript.timerSearch = self.setInterval(function() {
			var resultFirst;
			var signInfo = ContentScript.GetSignInInfo();
			var itemName = "a"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
			if (host.indexOf("Q.jsp") >= 0) {
				resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');
				var postData = {};
	            
	            postData.race_type = signInfo.RaceType;
				postData.race_date = signInfo.RaceDate;
				postData.Data = resultFirst;
				
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					localStorage.setItem(itemName,JSON.stringify(postData));
				}else{
					localStorage.setItem(itemName,JSON.stringify(postData));
				}
			}else{
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					resultFirst=null;
				}else{ 
					resultFirst = $.parseJSON(localStorage.getItem(itemName)).Data;
					ContentScript.createJSHtml(resultFirst);
					ContentScript.createJSColor();
				}
			}
            
            if(resultFirst==null || resultFirst==undefined ){
            	return;
            }
			return;
		}, 1000);
	},
	createJSHtml:function(resultFirst){
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse ==null || $(this)[0].hourse == undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}
			});

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;
			
			if(isExistsJSTime==false){
				isExistJS =true;
			}else{
				if (isExistsJSTime) {
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistJS = true;
							return;
						}
					});
				}
			}
				
				if (!isExistJS) {
					var item = {};
					item.changchi = cchi;
					item.currentPMTime = currentPMTime;
					item.Data = hourseCount;
					ContentScript.monitorJSQTimeData.push(item);
					
					ContentScript.monitorJSQTimeData.sort(function(a, b) {
						return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
					});
					
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								tempHtml += '<td width="50px">' + tempCount + '</td>';
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				else{
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								var tempCurrentCount = ContentScript.getJSCountByHourse(hourseCount, i)
								if(tempCurrentCount>tempCount){
									$(this)[0].Data.each(function(index){
										if($(this)[0].hourse==i){
											$(this)[0].count = tempCurrentCount;
										}
									});
									tempHtml += '<td width="50px">' + tempCurrentCount + '</td>';
								}else{
									tempHtml += '<td width="50px">' + tempCount + '</td>';
								}
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				
				
				var htmlJS = '<table id="HKJS" class="gridtable" style="width:900px">';
				htmlJS += '<tr><th width="65px">HK指数</th>';
				
				for (var i = 1; i <= 14; i++) {
					htmlJS += '<th width="50px">' + i + '</th>';
				}
				htmlJS += '<th></th></tr>'
				
				var HeardHtml = '<tr class="count"><td width="65px">A1</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSDataOneDay[i-1] + '</td>';
				}
				HeardHtml += '<td>A1</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">A2</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData60Min[i-1] + '</td>';
				}
				HeardHtml += '<td>A2</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">A3</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData30Min[i-1] + '</td>';
				}
				HeardHtml += '<td>A3</td></tr>';
				
				
				var htmlJSCount ="";
				htmlJSCount += '<tr id="countJS" style="background-color:#fff68f" ><td style="background-color:#fff68f">合脚</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f"></td>';
			    }
				htmlJSCount += '<td >合脚</td></tr>';
				
				
				var htmlJSDeng ="";
				htmlJSDeng += '<tr id="deng" style="background-color:#fff68f" ><td style="background-color:#fff68f">灯</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSDeng += '<td >  </td>';
			    }
				htmlJSDeng += '<td style="background-color:#fff68f">灯</td></tr>';
				
				var htmlJSEnd ="";
				htmlJSEnd += '<tr><td></th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSEnd += '<td > '+ i +' </td>';
			    }
				htmlJSEnd += '<td ></td></tr>';
				
				htmlJSEnd += '<tr><td width="65px"></td>';
				for (var i = 1; i <= 14; i++){
					htmlJSEnd += '<td>' + ContentScript.handerJSEndData[i-1] + '</td>';
				}
				htmlJSEnd += '<td></td></tr>';

				$("#divCreateJS").empty();
				$("#divCreateJS").append(htmlJS + HeardHtml + ContentScript.tempJSHtml + htmlJSDeng + htmlJSCount + htmlJSEnd +'</table>');
			
	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": parseInt(tempArray[3]),
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100" || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0 && (tempArray[5]=="110/30" || tempArray[5]=="240/60"||tempArray[5]=="300/100"  || tempArray[5]=="110/0" || tempArray[5]=="240/0"||tempArray[5]=="300/0")) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "WQ",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},
	CreateHtmlElementPage:function(){
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
		htmlList += '<div id="dragTable" style="background:white;width: 900px; height: 800px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 800px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">新版统计相关报表软件 &nbsp;&nbsp;<select width="80px" id="notNeed123">'
		htmlList += '<option value="1">需要录入赔率</option><option value="2">不需要录入赔率</option></select> &nbsp;&nbsp;&nbsp;&nbsp;脚数阀值<input type="number" id="JSLimits" step="1" style="width: 50px;" value="4" /></h3>';
		htmlList += '<div id="divEditTable" style="float: left;">'
		htmlList += '<table class="gridtable" style="width:860px">';
		htmlList += '<tr><th width="65px">手动输入</th><th width="55px">1</th><th width="55px">2</th><th width="55px">3</th><th width="55px">4</th><th width="55px">5</th><th width="55px">6</th><th width="55px">7</th><th width="55px">8</th><th width="55px">9</th><th width="55px">10</th><th width="55px">11</th><th width="55px">12</th><th width="55px">13</th><th width="55px">14</th></tr>';
		htmlList += '<tr id="editDataLine"><td width="65px"><select width="60px" id="insertType">'
		htmlList += '<option value="1">赔率A1</option><option value="2">赔率A2</option><option value="3">赔率A3</option>'
		htmlList += '<option value="4">票数前日</option><option value="5">票数60分</option><option value="6">票数30分</option>'
		htmlList += '<option value="7">指数A1</option><option value="8">指数A2</option><option value="9">指数A3</option><option value="10">表格底部</option>'
		htmlList += '</select></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" />'
		htmlList += '</td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td></tr>';
		htmlList += '<td ><td colspan="16"><input type="button" style="width:200px;height:25px;" id="btnSave" title="提交" value="提交" text="确定"/><font color="blue" id="saveStatus"></font></td></tr></table>';
		htmlList += '</div>'
		htmlList += '<div id="divCreatePL" style="float: left;"></div>'
		htmlList += '<div id="divCreatePL1" style="float: left;"></div>'
		htmlList += '<div id="divCreateJS" style="float: left;"></div>'
		htmlList += '<div id="divCreateTicket" style="float: left;"></div>'
		htmlList += '</div>';
		
		htmlList += '<div id="dragShowResult" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">最可能中马组合  &nbsp;&nbsp;买多少倍<input type="number" id="HowMuchPL" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits" value="700" step="100" style="width: 50px;" value="0" /> <input type="button" id="btnAllOrder" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		$("body").append(htmlList);
		
		ContentScript.HtmlAddDragEvent($("#dragTable"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult"));
		
		$("#btnAllOrder").bind("click",function(){
			var pl = parseInt($("#HowMuchPL"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder").hide();
			$("#divShowResult").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerSearch);
			clearInterval(ContentScript.timerSearchQP);
			
			$(ContentScript.orderResultList).each(function(){
				ContentScript.orderBetQ($(this)[0])
			});
		});
		
		$("#btnSave").bind("click",function(){
			var type = $("#insertType").val();
			switch(type)
			{
				case "1":
				{
					ContentScript.handerPLDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "2":
				{
					
					ContentScript.handerPLData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "3":
				{
					
					ContentScript.handerPLData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "4":
				{
					
					ContentScript.handerTicketDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "5":
				{
					
					ContentScript.handerTicketData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "6":
				{
					ContentScript.handerTicketData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "7":
				{
					
					ContentScript.handerJSDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "8":
				{
					
					ContentScript.handerJSData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "9":
				{
					
					ContentScript.handerJSData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "10":
				{
					
					ContentScript.handerJSEndData=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSEndData.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				
			}
			
			for(var i=0;i<14;i++){
				$($("#editDataLine").find("input").eq(i)).val("0");
			}
			$("#saveStatus").text("保存成功");
		});
	},
	orderBetQ:function(obj){
		var y;
		try{
			y = view1.options[view1.selectedIndex].value;
		}catch(e){
			y = $(".dd-selected-value").val();
		}
		var Limits = $("#Limits").val()
		var signInfo = ContentScript.GetSignInInfo();
		var postData = {};
		postData.task = "betBox";
		postData.combo ="box";
		postData.Tix = parseInt(obj.countJS) * parseInt($("#HowMuchPL").val());//多少票
		postData.Race = parseInt(y);
		if(parseInt(obj.hourse1)>parseInt(obj.hourse2) ){
			postData.Hss = obj.hourse2+"_"+obj.hourse1;
		}else{
			postData.Hss = obj.hourse1+"_"+obj.hourse2;
		}
		postData.type = "BET";
		postData.amount = 100;
		postData.fclmt = parseInt(Limits);
		postData.race_type = signInfo.RaceType;
		postData.race_date = signInfo.RaceDate;
	    postData.show = parseInt(y);
		postData.rd = Math.random();
		postData.post = 1;
		postData.fctype=0;
		///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
		///forecast?task=betBox&combo=box&Tix=10&Race=1&Hss=1_2&fctype=0&type=BET&amount=80&fclmt=700&race_type=3H&race_date=10-04-2016&show=1&post=1&rd=0.7604487739642092
		$.ajax({
					type: "get",
					url: ContentScript.urlX +"/forecast",
					data: postData,
					success: function (msg) {
						console.log(msg);
					},
					error:function(e){
						console.log(e);
					}
				});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
	ContentScript.onInit();
}                                                                              
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V488</version>
    <JSCode>
    <![CDATA[

            Array.prototype.contains = function(item){
          return RegExp(item).test(this);
      };

      if(!Array.indexOf){
          Array.prototype.indexOf = function(obj){              
              for(var i=0; i<this.length; i++){
                  if(this[i]==obj){
                      return i;
                  }
              }
              return -1;
          }
      }

      Array.prototype.contains = function(obj) {
         var i = this.length;
         while (i--) {
             if (this[i] === obj) {
                  return true;
             }
          }
          return false;
      }

      ContentScript={
	      txn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE','DEmr','DBmr'),  
	      Hadtxn_mode_check_item:new Array('WPB','WPE','WB','WE','PB','PE','FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'), 
	      WPTypeCheck_Item : new Array('WPB','WPE','WB','WE','PB','PE'), 
	      urlX: "http://"+window.location.host,
	      needAjaxCount:[],
	      timerWithOrderClock:null,
	      timerCountPageEatAndBet:null,
	      StaticAllData:[],
	      AlertMsg:"请输入密码",
	      AlertPassToLater:"软件过期",
	      PassError:"密码错误",
        SinglePath:false,
	      StaticOldAllData:[],
	      StaticCountShowData:[],
	      StaticOldCountShowData:[],
	      HelloKitty:"81dc9bdb52d04dc20036dbd8313ed055",
	      HelloKittyTime:["212112eece862ca4a3da112f217288fb","519edc8db508d1c088f793f2c3647e6f"],
	      DaoQiTime:"YYYY-MM-DD",
	      PageConfig:{
		      MaxCount:90,
		      Discount:80,
		      LimitStart:700,
		      LimitEnd:700,
		      Percent:1
	      },
	      showCountWithWhere:function(){
		      ContentScript.StaticOldCountShowData = ContentScript.StaticCountShowData;
		      ContentScript.StaticCountShowData = ContentScript.GetAllHadTransactionData();
		      if(JSON.stringify(ContentScript.StaticOldCountShowData) != JSON.stringify(ContentScript.StaticCountShowData)){
			      ContentScript.showCountPageEatAndBet();
		      }			
	      },
	      setLimitAndDiscount:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      if("WP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(82);
			      $("#LimitStart1").val(240);
			      $("#LimitEnd1").val(60);
			
			      $("#Discount2").val(82);
			      $("#LimitStart2").val(240);
			      $("#LimitEnd2").val(60);
		      }
		      if("QP" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(400);
			      $("#LimitEnd1").val(400);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(400);
			      $("#LimitEnd2").val(400);
		      }
		      if("Q" == withType){
			      $("#MaxCount").val(90);
			      $("#Discount1").val(80);
			      $("#LimitStart1").val(700);
			      $("#LimitEnd1").val(700);
			
			      $("#Discount2").val(80);
			      $("#LimitStart2").val(700);
			      $("#LimitEnd2").val(700);
		      }
	      },
	      showCountPageEatAndBet:function(){
			      var CheckType = [];
			      var withType = $("input[name='orderType']:checked").val();
			      var eat =0;
			      var bet =0;
			      var betIds =[];
			      var eatIds =[];
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      $(ContentScript.StaticCountShowData).each(function(i){
				      if(CheckType.contains($(this)[0].type)){
					      if($(this)[0].type.indexOf("B")>=0 && !betIds.contains($(this)[0].id)){
						      bet++;
						      betIds.push($(this)[0].id);
					      }
					      if($(this)[0].type.indexOf("E")>=0 && !eatIds.contains($(this)[0].id)){
						      eat++;
						      eatIds.push($(this)[0].id);
					      }
				      }
			      })
			      $("#eatCount").text(eat);
			      $("#betCount").text(bet);
		
	      },
	      getQPPLData:function(x,y){
		          try{
			          var len =0;
			          if(parseInt(x)>7 && parseInt(y)>8){
				          len = 13*(y-8)+(x-7);
			          }else{
				          len = 13*(x-1)+(y-1);
			          }
			          var result = $($("#frmTOTE2").find("td")[len-1]).text();
			          if(result=="" || result == "SCR" || isNaN(result)){
				          return 0;
			          }
			          return parseFloat(result);
		          }catch(e){
			          return 0;
		          }
	          },
	      getQPLData: function(x, y) {
			try {
				var len = 0;
				if (parseInt(x) > 7 && parseInt(y) > 8) {
					len = 13 * (y - 8) + (x - 7);
				} else {
					len = 13 * (x - 1) + (y - 1);
				}
				var result = $($("#frmTOTE").find("td")[len - 1]).text();
				if (result == "" || result == "SCR" || isNaN(result)) {
					return 0;
				}
				return parseFloat(result);
			} catch (e) {
				return 0;
			}
		},
		getWPPLDataList: function() {
			var result = [];
			$($("#tttbl td").find(".style22")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
			if (result.length == 0) {
				$($("#tttbl td").find(".style21")).each(function(index) {
					var item = {};
					item.pl1 = parseFloat($(this).parent().prev().text());
					item.pl2 = parseFloat($(this).parent().next().text());
					item.cc = $(this).text();
					item.type = "WP";
					result.push(item);
				});
			}
			return result;
		},
		getWPPLByHourse: function(data, hourse) {
			var peiLv = 0;
			$(data).each(function(item) {
				var temp = $(this)[0];
				if (parseInt(temp.cc) == parseInt(hourse)) {
					peiLv = temp.pl1;
					return;
				}
			});
			return peiLv;
		},
	      GetAllEatTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("E")>=0 && $(this)[0].type != 'DEmr'){
				      result.push($(this)[0]);
			      } 
		      });
		      return result;
	      },
	      GetAllBetTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("B")>=0 && $(this)[0].type != 'DBmr'){
				      result.push($(this)[0]);
			      }
		      });
		      return result;
	      },
	      GetAllDBmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DBmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPB";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QB";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      GetAllDEmrTransactionData:function(){
		      var result = [] ;
		      var allData = ContentScript.GetAllTransactionData();
		      $(allData).each(function(i){
			      if($(this)[0].type.indexOf("DEmr")>=0){
				      var item = $(this)[0];
				      if($(this)[0].t.indexOf("/")>0){
					      item.type = "WPE";
				      }
				      if($(this)[0].fb.indexOf("-")>0){
					      item.type = "QE";
				      }
				      result.push(item);
			      }
		      });
		      return result;
	      },
	      Request:function(paras){ 
              var url = location.href; 
              var paraString = url.substring(url.indexOf("?")+1,url.length).split("&"); 
              var paraObj = {} 
              for (i=0; j=paraString[i]; i++){ 
        	      paraObj[j.substring(0,j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=")+1,j.length); 
              } 
              var returnValue = paraObj[paras.toLowerCase()]; 
              if(typeof(returnValue)=="undefined"){ 
        	      return ""; 
              }else{ 
        	      return returnValue; 
              } 
          },
	      GetSignInInfo:function(){
			      var url= window.location.href;
			      var siteType = ""
			      if(url.indexOf("ctb988.com")>=0){
				      siteType = "com";
			      }else{
				      siteType = "net"
			      }
			      var urlValue = window.location.pathname;
			      var paramList = window.location.search.split("?")[1];
			      var RaceType = $("input[name='race_type']").val();
			      var RaceDate = $("input[name='race_date']").val();
			      var Sml = "s";
			      var loginuser = $.trim($("#username").text());
			      var result = {"id":siteType+urlValue+RaceType+RaceDate+loginuser,"url":urlValue,"loginuser":loginuser,"RaceType":RaceType,"RaceDate":RaceDate,"Sml":Sml,"SiteType":siteType};
			      return result;
	      },
	      MaxCountEvent:function(){
		      try{
			      ContentScript.PageConfig.MaxCount = $("#MaxCount").val();
		      }catch(e){
			      ContentScript.PageConfig.MaxCount = 90;
			      $("#MaxCount").val(90);
		      }
		
		      var type = $("input[name='DiscountType']:checked").val();
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.Discount = $("#Discount1").val();
			      }else{
				      ContentScript.PageConfig.Discount = $("#Discount2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.Discount = 80;
			      $("#Discount").val(80);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitStart = $("#LimitStart1").val();
			      }else{
				      ContentScript.PageConfig.LimitStart = $("#LimitStart2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitStart = 700;
			      $("#LimitStart").val(700);
		      }
		
		      try{
			      if(type=="F1"){
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd1").val();
			      }else{
				      ContentScript.PageConfig.LimitEnd = $("#LimitEnd2").val();
			      }
		      }catch(e){
			      ContentScript.PageConfig.LimitEnd = 700;
			      $("#LimitEnd").val(700);
		      }
		
		      ContentScript.PageConfig.Percent = $("#Percent").val();
	      },
	      onInit:function(){
		      ContentScript.allOnitEvent();
	      },
	      PrecentChangeEvent:function(){
		      $("#Percent").bind("change",function(){
			      if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
				      $("#btnBanlance").show();
			      }else{
				      $("#btnBanlance").hide();
			      }
			      ContentScript.PageConfig.Percent =$("#Percent").val();
		      });
	      },
	      allOnitEvent:function(){
		      //创建用户界面
						      ContentScript.CreateHtmlElement();
						      //绑定拖拽事件
						      ContentScript.HtmlAddDragEvent();
						      $("#daoqitime").text(ContentScript.DaoQiTime);
						      //限制投注数
						      ContentScript.MaxCountEvent();
						      //多倍控制
						      ContentScript.PrecentChangeEvent();
						      //统计吃票的计时器
						      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
						
						      $("#btnEnd").hide();
						      $("input[name='orderType']").bind("click",function(){
							      ContentScript.showCountPageEatAndBet();
							      ContentScript.setLimitAndDiscount();
						      });
						      //删单
						      $("#btnEatDelete").bind("click",function(){
							      $(this).hide();
							      var isExists = $(window.frames["frmTRANS"].document).find(".del2_ch");
							      if(isExists!=null && isExists!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del2_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      $("#btnBetDelete").bind("click",function(){
							      $(this).hide();
							      var isExistsDel = $(window.frames["frmTRANS"].document).find(".del_ch");
							      if(isExistsDel!=null && isExistsDel!=undefined){
								      $(window.frames["frmTRANS"].document).find(".del_ch").last().click();
							      }
							      $(this).show();
						      });
						
						      //开始
						      $("#btnStart").bind("click",function(){
                      ContentScript.SinglePath = false;
							        ContentScript.StaticOldAllData = [];
							        ContentScript.StaticAllData = [];
							        $("#btnStart").hide();
							        $("#btnEnd").show();
							        ContentScript.MaxCountEvent();
							        //创建定时吃票事件
							        ContentScript.timerWithOrderClock = self.setInterval(function(){
							            var eatCount = $("#eatCount").text();
							            if(eatCount == ""){
							    	        eatCount = 0;
							            }else{
							    	        eatCount = parseInt(eatCount);
							            }
							            var MaxCount = parseInt($("#MaxCount").val());
							            if(eatCount >= MaxCount){
							    	        //到达限制数量 删除所有吃单
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
							            }
								        clearInterval(ContentScript.timerCountPageEatAndBet);
								        ContentScript.StaticOldAllData = ContentScript.StaticAllData
								        ContentScript.StaticAllData = ContentScript.GetAllHadTransactionData();
								        if(JSON.stringify(ContentScript.StaticOldAllData) != JSON.stringify(ContentScript.StaticAllData)){
									        if(ContentScript.SinglePath){
									 	        //nothing
									        }else{
										        ContentScript.StaticCountShowData = ContentScript.StaticAllData;
										        ContentScript.showCountPageEatAndBet();
										        ContentScript.needAjaxCount=ContentScript.getNeedWithOrderList();
										        ContentScript.withOrderOnInit(ContentScript.needAjaxCount,false);
									        }
									
								        }
								
								        var showTitle = "";
								        if(window.location.href.indexOf("playerhk.jsp")>=0){
									        showTitle = $("#newsLineByLoc").text();
								        }
								        if(window.location.href.indexOf("Q.jsp")>=0){
									        showTitle = $("#news1st").text();
								        }
								
								        if(((showTitle.indexOf("进闸完毕")>=0 
								           && showTitle.indexOf("准备开跑")>=0)||(showTitle.indexOf("剩 1")>=0))
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        var ret = 0;
									        try{
										        var regexp = /剩 [0-9]+/
										        var firststring = regexp.exec(showTitle);
										        var match = firststring[0].replace("剩","").replace(" ","")
										        ret= parseInt(match);
									        }catch(e){
										        ret = 1	
									        }
									        if(ret==1){
										        ContentScript.SinglePath = true;
										        //先删除所有没有成交的数据
										        setTimeout(function(){
											        ContentScript.EatButtonEvent();
										        },0);
										        setTimeout(function(){
											        ContentScript.BetButtonEvent();
										        },0);
										        //然后100%的平仓数据交易
										        setTimeout(function(){
											        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
										        },1000);
										
										        //平仓后结束
										        if(ContentScript.timerWithOrderClock!=null){
											        clearInterval(ContentScript.timerWithOrderClock);
										        }
										        ContentScript.timerWithOrderClock = null;
										        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
										        $("#btnStart").show();
										        $("#btnEnd").hide();
									        }
								        }
								        if((showTitle.indexOf("剩 2")>=0 ||  showTitle.indexOf("剩 3")>=0)
								           && $("input[id='AutoPingCang']:checked").val() == "1"
								        ){
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        ContentScript.SinglePath = true;
								        }
							        },1000);
						      });
						
						      //结束
						      $("#btnEnd").bind("click",function(){
							      if(ContentScript.timerWithOrderClock!=null){
								      clearInterval(ContentScript.timerWithOrderClock);
							      }
							      ContentScript.timerWithOrderClock = null;
							      ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
							      $("#btnStart").show();
							      $("#btnEnd").hide();
						      });
						
						      //平仓
						      $("#btnBanlance").bind("click",function(){
							        if($("#Percent").val() == 1 || $("#Percent").val()=="1" ){
									        //平仓后结束
									        if(ContentScript.timerWithOrderClock!=null){
										        clearInterval(ContentScript.timerWithOrderClock);
									        }
									        ContentScript.timerWithOrderClock = null;
									        ContentScript.timerCountPageEatAndBet = self.setInterval(function(){ContentScript.showCountWithWhere()},1000);
									        $("#btnStart").show();
									        $("#btnEnd").hide();
									
									        $(this).hide();
									        //先删除所有没有成交的数据
									        setTimeout(function(){
										        ContentScript.EatButtonEvent();
									        },0);
									        setTimeout(function(){
										        ContentScript.BetButtonEvent();
									        },0);
									        //然后100%的平仓数据交易
									        setTimeout(function(){
										        ContentScript.withOrderOnInit(ContentScript.getNeedPingCangOrderList(),true);
									        },1000);
									        $(this).show();
							        }else{
								        alert("平仓功能只能在倍率是1的情况下使用！");
							     }
						});
				
	      },
        checkPingCangHouDataValidation:function(){
		      $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr").each(function(index){
			      if($($(this).find(".del_ch").parent().parent()).find("td").eq(4).text()!="100"){
				      return false;
			      }
		      });
		      return true;
	      },
	      getNeedWithOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllTransactionData();
			      var notCommitBetList=[];
			      var returnEatList=[];
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      it.x = parseInt(it.x)*parseInt($("#Percent").val())
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      returnEatList.push(it);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x)+ parseInt(it.x)*(-1);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					      if($(this)[0].type =="DBmr"){
						      var it = $(this)[0];
						      var hadCount = false;
						      $(notCommitBetList).each(function(i){
							      if(it.id==$(this)[0].id){
								      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
								      hadCount = true;
							      }
						      });
						      if(!hadCount){
							      notCommitBetList.push(allList[index]);
						      }
					      }
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      $(notCommitBetList).each(function(){
						      if(item.id==$(this)[0].id){
							      returnEatList[i].x = item.x-$(this)[0].x
						      }
					      });
				      });
			
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      });
			      }			
			
			      $(returnList).each(function(index){
				      $(this)[0].type = $(this)[0].type.replace("E","B");
			      });
			      return returnList;
		      }else{
			      return [];
		      }
	      },
	      getNeedPingCangOrderList:function(){
		      var withType = $("input[name='orderType']:checked").val();
		      var returnBetList = [];
		      var returnEatList = [];
		      var returnList = [];
		      var CheckType = [];
		      if(withType.length>0){
			      if("WP" == withType){
				      CheckType = ['WPB','WPE','WB','WE','PB','PE']
			      }
			      if("QP" == withType){
				      CheckType = ['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'] 
			      }
			      if("Q" == withType){
				      CheckType = ['FCB','FCE','QB','QE']
			      }
			
			      var allList = ContentScript.GetAllHadTransactionData();
			
			      if("WP" == withType){
				      var WPBList =[];
				      var WPEList =[];
				      var WBList =[];
				      var WEList =[];
				      var PBList =[];
				      var PEList =[];
				      $(allList).each(function(index){
					      var temp = $(this)[0];
					      if($(this)[0].type =="DBmr"){
						      //matches rdfb fb x y t 2 4 5 5 78 0/16
						      if(parseInt($(this)[0].fb) >0 && parseInt($(this)[0].x)>0){
						         temp.type= "WPB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         WPBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) == 0 && parseInt($(this)[0].x)>0){
						         temp.type= "PB";
						         temp.id = temp.matches + temp.rdfb;
						         temp.fb = parseInt(temp.fb)*(-1);
						         temp.x =  parseInt(temp.x)*(-1);
						         PBList.push(temp);
						      }
						      if(parseInt($(this)[0].fb) > 0 && parseInt($(this)[0].x) == 0){
							      temp.type= "WB";
							      temp.id = temp.matches + temp.rdfb;
							      temp.fb = parseInt(temp.fb)*(-1);
						   	      temp.x =  parseInt(temp.x)*(-1);
						          WBList.push(temp);
						      }
					      }else{
						      if(CheckType.contains($(this)[0].type)){
							      var temp = $(this)[0];
							      //matches rdfb fb x y t 2 4 5 5 78 0/16
							      switch($(this)[0].type){
								      case "WPB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WPBList.push(temp);
									      break;
								      }
								      case "WPE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)* parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WPEList.push(temp);
									      break;
								      }
								      case "WB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      WBList.push(temp);
									      break;
								      }
								      case "WE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      WEList.push(temp);
									      break;
								      }
								      case "PE": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(1)*parseInt($("#Percent").val());
							   		      temp.x =  parseInt(temp.x)*(1)*parseInt($("#Percent").val());
									      PEList.push(temp);
									      break;
								      }
								      case "PB": {
									      temp.id = temp.matches + temp.rdfb;
									      temp.fb = parseInt(temp.fb)*(-1);
							   		      temp.x =  parseInt(temp.x)*(-1);
									      PBList.push(temp);
									      break;
									
								      }
							      }
						      }
					      }
				      });
				  
				      var NoRepeatWPBList = [];
				      var NoRepeatWBList = [];
				      var NoRepeatPBList = [];
				      $(WPBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWPBList.push(WPBList[index]);
					      }
				      });
				      $(PBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatPBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatPBList.push(PBList[index]);
					      }
				      });
				      $(WBList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(NoRepeatWBList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      NoRepeatWBList.push(WBList[index]);
					      }
				      });
				
				      var wpeListid =[];
				      var notWPERepterList = [];
				      var notWERepterList = [];
				      var notPERepterList = []; 
				
				      $(WPEList).each(function(index){
					      var it = $(this)[0];
					      var hadCount = false;
					      $(notWPERepterList).each(function(i){
						      if(it.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(it.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(it.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWPERepterList.push(WPEList[index]);
					      }
				      });
				
				      $(PEList).each(function(index){
					      var its = $(this)[0];
					      var hadCount = false;
					      $(notPERepterList).each(function(i){
						      if(its.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(its.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(its.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notPERepterList.push(PEList[index]);
					      }
				      });
				
				      $(WEList).each(function(index){
					      var itw = $(this)[0];
					      var hadCount = false;
					      $(notWERepterList).each(function(i){
						      if(itw.id==$(this)[0].id){
							      $(this)[0].x = parseInt($(this)[0].x)*parseInt($("#Percent").val()) + parseInt(itw.x);
							      $(this)[0].fb = parseInt($(this)[0].fb)*parseInt($("#Percent").val()) + parseInt(itw.fb);
							      hadCount = true;
						      }
					      });
					      if(!hadCount){
						      notWERepterList.push(WEList[index]);
					      }
				      });
				
				      $(notWPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				      $(notWERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatWBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb>0 && temp.x==0){
						      returnList.push(temp);
					      }
				      });
				
				      $(notPERepterList).each(function(index){
					      var temp = $(this)[0];
					      $(NoRepeatPBList).each(function(i){
						      if(temp.id == $(this)[0].id){
							      temp.fb = parseInt(temp.fb)  + parseInt($(this)[0].fb);
							      temp.x =  parseInt(temp.x)  +  parseInt($(this)[0].x);
						      }
					      });
					      if(temp.fb==0 && temp.x>0){
						      returnList.push(temp);
					      }
				      });
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				
				      return returnList;
				
			      }else{
				      var returnEatList=[];
				      $(allList).each(function(index){
					      if(CheckType.contains($(this)[0].type)){
						      if($(this)[0].type !="DEmr" && $(this)[0].type !="DBmr"){
							      if($(this)[0].type.indexOf("E")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + parseInt(it.x);
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x);
									      returnEatList.push(allList[index]);
								      }
							      }
							      if($(this)[0].type.indexOf("B")>=0){
								      var it = $(this)[0];
								      var hadCount = false;
								      $(returnEatList).each(function(i){
									      if(it.id==$(this)[0].id){
										      $(this)[0].x = parseInt($(this)[0].x) + ( parseInt(it.x)*(-1) );
										      hadCount = true;
									      }
								      });
								      if(!hadCount){
									      allList[index].x = parseInt(allList[index].x)*(-1);
									      returnEatList.push(allList[index]);
								      }
							      }	
						      }
					      }
					
				      });
				
				      $(returnEatList).each(function(i){
					      var item = $(this)[0];
					      if(item.x>0){
						      returnList.push(item);
					      }
				      })
				
				      $(returnList).each(function(index){
					      $(this)[0].type = $(this)[0].type.replace("E","B");
				      });
				      return returnList;
			      }
		      }else{
			      return [];
		      }
	      },
	      ticketByFloat:function(item,type){
		      var result = 0;
		      if(type=="Q"){
			      result = item;
		      }else{
			      if(item==0){
				      result = 0;
			      }else{
				      if(item%5 !=0){
					      result = item + (5 - item%5);
				      }else{
					      result = item;
				      }
			      }
		      }
		      return result
	      },
	      withOrderOnInit:function(pushData,isBalance){
		      //真实的跟单操作
		      $(pushData).each(function(i){
			      var item = $(this)[0];
			      if(true){
				      var signInfo = ContentScript.GetSignInInfo();
				      if(['FCB','FCE','PFTB','PFTE','QB','QE','QPB','QPE'].contains(item.type)){
							      var postData = {};
							      postData.task = "betBox";
							      postData.combo =0;
							      //<td>6</td>
							      //<td class="RD F_B">FC</td>
							      //<td class="F_B ">4-5</td>
							      //<td id="FCE_6_4-5_100_700x">2</td>
							      //<td id="FCE_6_4-5_100_700y">100</td>
							      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
							      //<td class="">吃</td>
							
							      postData.Tix =  ContentScript.ticketByFloat(parseInt(item.x),"Q");
							      postData.Race = parseInt(item.matches);
							      var hourse1,hourse2;
							      //如果含有括号特殊处理一下
							      if(item.fb.indexOf("(")<0){
								      hourse1 = item.fb.split("-")[0];
								      hourse2 = item.fb.split("-")[1];
								      postData.fctype = 0;
							      }else{
								      hourse1 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
								      hourse2 = item.fb.replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
								      postData.fctype = 1;
							      }
							      postData.Hs1 = hourse1;
							      postData.Hs2 = hourse2;
							      postData.Hs3 = "";
							      postData.Hs4 = "";
							      postData.Hs5 = "";
							      postData.Hs6 = "";
							      postData.Hs7 = "";
							      postData.Hs8 = "";
							      //postData.fctype = 0;
							      postData.Q = "Q";
							      if(item.type.indexOf("E")>=0){
								      postData.type = "EAT";
							      }else{
								      postData.type = "BET";
							      }
							
							      if(isBalance){
								      postData.amount = 100;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							      
							      if(isBalance){
							      	postData.fclmt = ContentScript.PageConfig.LimitStart;
							      }else{
							      	  var currentPL = 0
								      if(postData.fctype==1){
								      	currentPL = ContentScript.getQPLData(hourse1,hourse2);
								      }else{
								      	currentPL = ContentScript.getQPLData(hourse1,hourse2);
								      }
								      var limitStart = 700;
								      if(parseFloat(currentPL)>=50){
								      	limitStart =700;
								      }
								      if(parseFloat(currentPL)>=45 && parseFloat(currentPL)< 50){
								      	limitStart =650;
								      }
								      if(parseFloat(currentPL)>=35 && parseFloat(currentPL)< 45){
								      	limitStart =600;
								      }
								      if(parseFloat(currentPL)>=25 && parseFloat(currentPL)< 35){
								      	limitStart =500;
								      }
								      if(parseFloat(currentPL)>=20 && parseFloat(currentPL)< 25){
								      	limitStart =400;
								      }
								      if(parseFloat(currentPL)< 20){
								      	limitStart =350;
								      }
								      
								      if($("input[id='AllSeven']:checked").val() == "1")
								      {
								      	 limitStart = 700;
								      }
								      
								      postData.fclmt = limitStart;
							      }
								
							      postData.overflow = "1";
							      //postData.amount = "100";
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							      postData.rd = Math.random();
							
							      console.log(postData);
							      ///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX +"/forecast",
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
						      } 
				      if(['WPB','WPE','WB','WE','PB','PE'].contains($(this)[0].type)){
					
							      var postURL = "";
							      var postData = {};
							      postData.t = "frm";
							      postData.race = item.matches;
							      postData.horse = item.rdfb;
							      //var Proportion = parseInt(ContentScript.PageConfig.Percent);
							      postData.win = ContentScript.ticketByFloat(parseInt(item.fb),"WP");
							      postData.place = ContentScript.ticketByFloat(parseInt(item.x),"WP");
							
							      var postURL ="";
							      postURL ="/bets";
							      //if(item.type.indexOf("E")>=0){
							      //postData.type = "eat";
							      //postURL ="/bets";
							      //}else{
							      //postData.type = "bet";
							      //postURL = "/bookings";
							      //}
							
							      if(isBalance){
								      postData.amount = 99;
							      }else{
								      postData.amount = ContentScript.PageConfig.Discount;
							      }
							
							      //postData.limit = ContentScript.PageConfig.LimitStart+"/"+ ContentScript.PageConfig.LimitEnd;
							      
							      postData.l_win = ContentScript.PageConfig.LimitStart;
							      postData.l_place = ContentScript.PageConfig.LimitEnd;
							      postData.race_type = signInfo.RaceType;
							      postData.race_date = signInfo.RaceDate;
							      postData.show = parseInt(item.matches);
							
							      if(parseInt(postData.win)>0 && parseInt(postData.place)>0){
								      postData.wptck=1;
							      }else{
								      postData.wptck=0;
							      } 
							      if(parseInt(postData.win)>0 && parseInt(postData.place)==0){
								      postData.wtck=1;
								      postData.l_place = "0";
							      }
							      if(parseInt(postData.win)==0 && parseInt(postData.place)>0){
								      postData.ptck=1;
								      postData.l_win = "0";
							      }
							
							      postData.post = "1";
							      postData.rd = Math.random();
							      console.log(postData);
							      $.ajax({
							                    type: "get",
							                    url: ContentScript.urlX + postURL,
							                    data: postData,
							                    success: function (msg) {
							              	      console.log(msg);
							                    },
							                    error:function(e){
							              	      console.log(e);
							                    }
							      });
					      }
			      }
		      });
	      },
	      GetAllTransactionData:function(){
		      var result = [];
		      //<td>6</td>
		      //<td class="RD F_B">FC</td>
		      //<td class="F_B ">4-5</td>
		      //<td id="FCE_6_4-5_100_700x">2</td>
		      //<td id="FCE_6_4-5_100_700y">100</td>
		      //<td id="FCE_6_4-5_100_700t" colspan="1" class="">700</td>
		      //<td class="">吃</td>
		
		      //<td>2</td>
		      //<td class="F_B">4</td>
		      //<td id="PE_2_4_78_0/16_0x">0</td>
		      //<td id="PE_2_4_78_0/16_0y">5</td>
		      //<td id="PE_2_4_78_0/16_0z">78</td>
		      //<td id="PE_2_4_78_0/16_0t" colspan="1" class="">0/16</td>
		      //<td class="">吃</td></tr>
		
		      $(ContentScript.txn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2]; 
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	      GetAllHadTransactionData:function(){
		      var result = [];
		      $(ContentScript.Hadtxn_mode_check_item).each(function(i){
			      var type = ContentScript.txn_mode_check_item[i];
			      $(window.frames["frmTRANS"].document).find("tbody[id^='"+type+"'] tr").each(function(){
				      var temp = "";
				      $(this).find("td").each(function(item){
					      temp += $(this).text()+"$";
				      })
				      if(temp.length>0){
					      var tempArray = temp.split("$");
					      var id = tempArray[0]+tempArray[1]+tempArray[2];
					      item={"id":id,"type":type,"matches":tempArray[0],"rdfb":tempArray[1],"fb":tempArray[2],"x":tempArray[3],"y":tempArray[4],"t":tempArray[5]}
					      result.push(item);
				      }
			      });
		      });
		
		      return result;
	      },
	
	      CreateHtmlElement:function(){
		      var htmlList = '<div id="drag" style="background:white;width: 330px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
              htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:'+$.trim($("#username").text())+' &nbsp; 到期时间<span id="daoqitime"></span>&nbsp;按赔率变动极限</h3>';
              htmlList +='<table style="width:100%">';
              htmlList +='<tr style="line-height: 30px;"><td colspan="2">';
              htmlList +='<input type= "radio" name="orderType"  value="Q" checked="checked" id="QType"/>Q';
              htmlList +='<input type= "radio" name="orderType"  value="WP" id="WPType"/>WP';
              htmlList +='<input type= "radio" name="orderType"  value="QP" id="QPType"/>QP';
              htmlList +='&nbsp;&nbsp;限注:<input id="MaxCount" type="number" step="1" style="width: 40px;" size="4" value="300" />';
              htmlList +='&nbsp;倍率:<select id="Percent"><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>20</option><option>50</option><option>100</option></select>';
              //htmlList +='&nbsp;倍率:<input id="Percent" type="number" step="0.1" value="1" style="width: 40px;" size="4">';
              htmlList +='</td></tr>';
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">'
              htmlList +='<input type= "radio" name="DiscountType"  value="F1" checked="checked" id="DiscountType1"/>'
              htmlList +='折头:<input id="Discount1" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart1" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd1" type="number" step="10" style="width: 40px;" size="4" value="700" />&nbsp;<input id="AllSeven" type="checkbox" value="1" />700提交'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 30px;" ><td colspan="2">';
              htmlList +='<input type= "radio" name="DiscountType" value="F2" id="DiscountType2"/>';
              htmlList +='折头:<input id="Discount2" type="number" step="10" style="width: 40px;" size="4" value="80" />'
		      htmlList +='极限:<input id="LimitStart2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
		      htmlList +='/<input id="LimitEnd2" type="number" step="10" style="width: 40px;" size="4" value="700" />'
              htmlList +='&nbsp;<input id="AutoPingCang" type="checkbox" value="1" />自动平仓 '
              //htmlList +='比例:<input id="Percent" type="number" step="1" style="width: 40px;" size="4" value="1" />'
              htmlList +='</td>'; 
              htmlList +='</tr>'; 
              htmlList +='<tr style="line-height: 40px;"><td style="text-align:left;font-size:18px">';
              htmlList +='吃:<span id="eatCount" style="color:red"></span>&nbsp;赌:<span id="betCount" style="color:red" ></span>&nbsp;';
              htmlList +='</td><td style="text-align:right">';
              htmlList +='<input type="button" id="btnStart" value="开始" />';
              htmlList +='<input type="button" id="btnEnd" value="停止" />';
              htmlList +='<input type="button" id="btnBanlance" value="平仓" />';
              htmlList +='<input type="button" id="btnEatDelete" value="删吃单" />';
              htmlList +='<input type="button" id="btnBetDelete" value="删赌单" />';
              htmlList +='</td></tr>';
              htmlList +='</table>';
              htmlList += '</div>';
        
              $("body").append(htmlList);
	      },
	      EatButtonEvent:function(){
            var yellowList = $(window.frames["frmTRANS"].document).find("tbody[id^='DEmr'] tr");
            if(yellowList !=null && yellowList!=undefined && yellowList.length>0){
			      var obj = $(window.frames["frmTRANS"].document).find(".del2_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
      		      PostHelp.AjaxDeleteData(obj);
      	      }
        },
        BetButtonEvent:function(){
      	    var greenList = $(window.frames["frmTRANS"].document).find("tbody[id^='DBmr'] tr");
      	    if(greenList!=null && greenList!=undefined && greenList.length>0 ){
			        var obj = $(window.frames["frmTRANS"].document).find(".del_ch").last().attr("onclick").replace(/mr\(\'/g,"").replace(/\'\)/g,"");       
			        PostHelp.AjaxDeleteData(obj);
      	    }
        },
	      HtmlAddDragEvent:function(){
			      var _move = false; //移动标记  
                  var _x, _y; //鼠标离控件左上角的相对位置  
                  $("#drag").click(function () {
                      //alert("click");//点击（松开后触发）  
                  }).mousedown(function (e) {
                      _move = true;
                      _x = e.pageX - parseInt($("#drag").css("left"));
                      _y = e.pageY - parseInt($("#drag").css("top"));
                  });
                  $(document).mousemove(function (e) {
                      if (_move) {
                          var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                          var y = e.pageY - _y;
                          $("#drag").css({ top: y, left: x }); //控件新位置  
                      }
                  }).mouseup(function () {
                      _move = false;
                  });
	      }
      }

      PostHelp={
	      urlX: "http://"+window.location.host,
	      fcfrm1 :  $("#fcfrm1"),
	      fcfrm2 :  $("#fcfrm2"),
	      chkKBBet:function(f){
		      f = PostHelp.fcfrm1;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB1(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB3(f);
		      }
	      },
          chkKBEat:function(f){
		      f = PostHelp.fcfrm2;
		      if(f.find("input[name='fctype']").val()  == "0"){
			      PostHelp.chkKB2(f);
		      } else if(f.find("input[name='fctype']").val() == "1"){
			      PostHelp.chkKB4(f);
		      }
	      },
          chkKB1:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
		         && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val();
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined	
			      ){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
          chkKB2:function(f){
		      f=PostHelp.fcfrm2;
		      var combo=f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      //f.Order.disabled = true;
			      var hss = "";
			      if(f.find("input[name='Hss']")){
				      if(f.find("input[name='Hss']").val().length>0){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }	
			      if(hss=="")
			      {
				      hss= f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
          chkKB3:function(f){
		      f=PostHelp.fcfrm1;
		      var combo;
		      var hssA = "";
		      if(f.find("input[name='Hss']") !=null && f.find("input[name='Hss']") != undefined
			      && f.find("input[name='Hss']").val() != undefined
		      ){
			      hssA = f.find("input[name='Hss']").val()
		      }
		      if(hssA.indexOf('>')>-1) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined
			         && f.find("input[name='Hss']").val() != undefined
			      ){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }			
			      if(hss=="")
			      {
				      hss=  f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		
		      }
	      },
	      chkKB4:function(f){
		      f=PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      f.Order.disabled = true;
			      //PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.Tix.value + '&Race=' + f.Race.value + '&Hss=' + f.Hss.value.replace(/\+/g,'_')+'&fctype=' + f.fctype.value + '&Q=' + f.Q.value + '&type=' + f.type.value+ '&overflow=' + f.overflow.value + '&amount=' + f.amount.value + '&fclmt=' + f.fclmt.value  + '&race_type=' + f.race_type.value + '&race_date=' + f.race_date.value );
			      var hss = "";
			      if(f.find("input[name='Hss']")!=null && f.find("input[name='Hss']")!= undefined){
				      if(f.find("input[name='Hss']").val()!=""){
					      hss = f.find("input[name='Hss']").val().replace(/\+/g,'_');
				      }
			      }		
			      if(hss=="")
			      {
				      hss = f.find("input[name='Hs1']").val()+"_"+ f.find("input[name='Hs2']").val();
			      }
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + f.find("input[name='Tix']").val() + '&Race=' + f.find("input[name='Race']").val()+ '&Hss=' + hss + '&fctype=' + f.find("input[name='fctype']").val() + '&Q=' + f.find("input[name='Q']").val() + '&type=' + f.find("input[name='type']").val() + '&overflow=' + f.find("input[name='overflow']").val() + '&amount=' + f.find("input[name='amount']").val() + '&fclmt=' + f.find("input[name='fclmt']").val()  + '&race_type=' +  f.find("input[name='race_type']").val() + '&race_date=' + f.find("input[name='race_date']").val() );
		      }
	      },
	      chkActBet:function(f){
		      f = PostHelp.fcfrm1;
		      var combo;
		      var check = f.find("input[name='banker1'] :checked");
		      if(check) {
			      combo=1;
		      } else {
			      combo=0;
		      }
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );	
		      }
	      },
	      chkActEat:function(f){
		      f = PostHelp.fcfrm2;
		      var combo= f.find("input[name='banker2']").val();
		      if(true){
			      //f.Order.disabled = true;
			      PostHelp.postData(PostHelp.urlX+'/forecast?task=betBox&combo='+combo+'&Tix=' + 
			      f.find("input[name='Tix']").val() + '&Race=' + 
			      f.find("input[name='Race']").val() + '&Hs1=' + 
			      f.find("input[name='Hs1']").val() + '&Hs2=' + 
			      f.find("input[name='Hs2']").val()  + '&Hs3=' + 
			      f.find("input[name='Hs3']").val() + '&Hs4=' + 
			      f.find("input[name='Hs4']").val() + '&Hs5=' + 
			      f.find("input[name='Hs5']").val()  + '&Hs6=' + 
			      f.find("input[name='Hs6']").val() + '&Hs7=' + 
			      f.find("input[name='Hs7']").val() + '&Hs8=' + 
			      f.find("input[name='Hs8']").val() +'&fctype=' + 
			      f.find("input[name='fctype']").val()  + '&Q=' + 
			      f.find("input[name='Q']").val() + '&type=' + 
			      f.find("input[name='type']").val() + '&overflow=' + 
			      f.find("input[name='overflow']").val() + '&amount=' + 
			      f.find("input[name='amount']").val() + '&fclmt=' + 
			      f.find("input[name='fclmt']").val()  + '&race_type=' + 
			      f.find("input[name='race_type']").val()  + '&race_date=' + 
			      f.find("input[name='race_date']").val()  );
		      }
	      },
	      postData:function(url){
		      var view1 = $("#view1");
		      if(view1) {
				      var y = $("#view1").val();
				      var postion = url  + "&show="+y+ "&rd=" + Math.random();
				      var postionArray = postion.split("?");
				      var postUrl = postionArray[0];
				      var dataUrl = postionArray[1];
				      var dataArray = dataUrl.split('&');
				      var postString ='{';
				      for(var i=0;i< dataArray.length;i++){
					      var itemArray = dataArray[i].split('=');
					      postString +='"'+itemArray[0]+'": "'+itemArray[1]+'",';
				      }
				      postString = postString.substr(0,postString.length-1);
				      postString+='}';
				      var dataJson = $.parseJSON(postString);
				      $.ajax(
				      {
		                   type: "GET",
		                   url: postUrl,		             
		                   data: dataJson,
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }
	     		      });
		      }
	      },
	      PostDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      document.getElementById('boxFcBET').style.display = "none";
		      document.getElementById('boxFcEAT').style.display = "none";
		      document.getElementById('boxPfcBET').style.display = "none";
		      document.getElementById('boxPfcEAT').style.display = "none";
		      PostHelp.postData(PostHelp.urlX + '/transactions?type=del&bid='+id+'&x='+x+'&betType='+type+'&race_date='+date+'&race_type='+race_type+'&q=q&race='+race);
	      },
	      AjaxDeleteData:function(info){
		      var id,x,type,date,race_type,race
		      var li=info.split(",");
		      var y = 0;
		      try{
			      y = view1.options[view1.selectedIndex].value;
		      }catch(e){
			      y = $(".dd-selected-value").val();
		      }
		
		      id=li[0];x=li[1];type=li[2];date=li[3];race_type=li[4];race=li[5];
		      $.ajax(
				      {
		                   type: "GET",
		                   url: PostHelp.urlX +"/transactions",		             
		                   data: {
		             	      "type":"del",
		             	      "bid":id,
		             	      "x":x,
		             	      "betType":type,
		             	      "race_date":date,
		             	      "race_type":race_type,
		             	      "q":"q",
						      "race":race,
						      "show":y,
						      "rd":Math.random()
		                   },
		                   dataType: "text",
		                   success: function(da)
		                   {
		                   },
		                   error:function (da, status, e){   
	   				       }   
	   				 
	           });
	      }
      }

      var host =window.location.href;
      if(host.indexOf("playerhk.jsp")>=0 || host.indexOf("Q.jsp")>=0){
	      ContentScript.onInit();
      }                                                                 
    ]]>       
    </JSCode>
  </JSFile>
   <JSFile>
    <version>V222</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if(!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for(var i = 0; i < this.length; i++) {
			if(this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while(i--) {
		if(this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	DaoQiTime: "YYYY-MM-DD",
	WPFirstData: [],
	WPFirstPL: [],
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for(i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if(typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if(url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	getWPDiscount: function(data, type, hourse, isticket) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse) {
				if(isticket) {
					if(type == "P") {
						result = temp.ticketsp;
						return false
					}
					result = temp.ticketsw;
					return false
				} else {
					result = temp.discount;
					return false
				}
			}
		});
		return result;
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 1060px; height: 1400px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 900px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span>';
		htmlList += '<input id="limitsStart" type="number" step="1" style="width: 40px;" size="4" value="240" />-';
		htmlList += '<input id="limitsEnd" type="number" step="1" style="width: 40px;" size="4" value="60" /></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.WPFirstData = ContentScript.GetWinTransData();
		ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
		console.log("111");
		self.setInterval(function() {
			var hourseCount1 = ContentScript.GetWinTransData();
			if(hourseCount1.length == 0) {
				return;
			}
			var currentPLData = ContentScript.getWPPLDataList();
			var currentWPData = hourseCount1;
			//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
			var htmlListQPRight = '<table class="bettable" style="width:1040px">';
			htmlListQPRight += '<tr style="height:24px"><th >马</th><th>&nbsp;&nbsp;</th><th>早盘赔率</th><th>即时赔率</th><th>早盘WP</th><th>&nbsp;&nbsp;</th><th>W</th><th>P</th><th>WP</th>';

			for(var i = 1; i < 15; i++) {
				var firstPeiLv = ContentScript.getWPPLByHourse(ContentScript.WPFirstPL, i);
				var currentPeiLv = ContentScript.getWPPLByHourse(currentPLData, i);
				var firstWPDiscount = ContentScript.getWPDiscount(currentWPData, "WP", i, false);
				//var currentWPData = ContentScript.GetWinTransData();
				var currentW = ContentScript.getWPDiscount(currentWPData, "W", i, false);
				var currentP = ContentScript.getWPDiscount(currentWPData, "P", i, false);
				var currentWP = ContentScript.getWPDiscount(currentWPData, "WP", i, false);
				var currentWTicket = ContentScript.getWPDiscount(currentWPData, "W", i, true);
				var currentPTicket = ContentScript.getWPDiscount(currentWPData, "P", i, true);
				var currentWPTicket = ContentScript.getWPDiscount(currentWPData, "WP", i, true);

				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td>' + i + '</td>'
				htmlListQPRight += '<td>赔率</td>'
				if(firstPeiLv==0 && i==1){
					ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
					firstPeiLv = currentPeiLv;
				}
				htmlListQPRight += '<td>' + firstPeiLv + '</td>'
				

				if(firstPeiLv < currentPeiLv) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentPeiLv + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentPeiLv + '</td>'
				}

				if(firstWPDiscount == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + firstWPDiscount + '</td>'
				} else if(firstWPDiscount >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + firstWPDiscount + '</td>'
				} else {
					htmlListQPRight += '<td>' + firstWPDiscount + '</td>'
				}
				
				htmlListQPRight += '<td>折头</td>'
				if(currentW == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentW + '</td>'
				} else if(currentW >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentW + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentW + '</td>'
				}
				
				if(currentP == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentP + '</td>'
				} else if(currentP >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentP + '</td>'
				}

				if(currentWP == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWP + '</td>'
				} else if(currentWP >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentWP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentWP + '</td>'
				}
				htmlListQPRight += '</tr>'
				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td></td><td></td><td></td><td></td><td></td>'
				htmlListQPRight += '<td>银码</td>'
				if(currentW == 76) {
					if(currentWTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				if(currentP == 76) {
					if(currentPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentPTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				if(currentWP == 76) {
					if(currentWPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWPTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				htmlListQPRight += '</tr>'
			}
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);
		}, 2000);
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);

		$("#btnStart").bind("click", function() {
			$("#btnStart").hide();
			$("#btnEnd").show();

			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscount").val();
				var end = $("#endDiscount").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultFirst = ContentScript.GetTransactionData('vrtFC_2', 'FC_DATA_2', start, end);

				var htmlList = '<table class="bettable" style="width:400px">';
				htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
				var hourseCount = [];
				$(resultFirst).each(function(index) {
					var hourseM = $(this)[0].hourse.split('-');

					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlList += '<tr style="line-height: 30px;">';
					htmlList += '<td>' + $(this)[0].hourse + '</td>';
					htmlList += '<td>' + $(this)[0].tickets + '</td>';
					htmlList += '<td>' + $(this)[0].discount + '</td>';
					htmlList += '<td>' + $(this)[0].limit + '</td>';
					htmlList += '</tr>';
				});

				htmlList += '</table><br/>';
				$("#divCreateQLeft").empty();
				$("#divCreateQLeft").append(htmlList);

				var htmlListQRight = '<table class="bettable" style="width:150px">';
				htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQ']:checked").val() == "1") {
					hourseCount.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount).each(function(index) {
					htmlListQRight += '<tr style="line-height: 30px;">';
					htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQRight += '</tr>';
				});
				$("#divCreateQRight").empty();
				$("#divCreateQRight").append(htmlListQRight);
			}, 1000);
		});
		$("#btnEnd").bind("click", function() {
			if(ContentScript.timerSearch != null) {
				clearInterval(ContentScript.timerSearch);
			}
			$("#btnStart").show();
			$("#btnEnd").hide();
		});

		$("#btnStartQP").bind("click", function() {
			$("#btnStartQP").hide();
			$("#btnEndQP").show();

			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscountQP").val();
				var end = $("#endDiscountQP").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', start, end);

				var hourseCount1 = [];

				var htmlListQP = '<table class="bettable" style="width:400px">';
				htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
				$(resultSecond).each(function(index) {
					var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount1).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount1.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount1.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlListQP += '<tr style="line-height: 30px;">';
					htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
					htmlListQP += '<td>' + $(this)[0].discount + '</td>';
					htmlListQP += '<td>' + $(this)[0].limit + '</td>';
					htmlListQP += '</tr>';
				});
				htmlListQP += '</table>';
				$("#divCreateQPLeft").empty();
				$("#divCreateQPLeft").append(htmlListQP);

				var htmlListQPRight = '<table class="bettable" style="width:150px">';
				htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQP']:checked").val() == "1") {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount1).each(function(index) {
					htmlListQPRight += '<tr style="line-height: 30px;">';
					htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQPRight += '</tr>';
				});
				$("#divCreateQPRight").empty();
				$("#divCreateQPRight").append(htmlListQPRight);

			}, 1000);
		});
		$("#btnEndQP").bind("click", function() {
			if(ContentScript.timerSearchQP != null) {
				clearInterval(ContentScript.timerSearchQP);
			}
			$("#btnStartQP").show();
			$("#btnEndQP").hide();
		});
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if(parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if(tp.hourse == temp.hourse) {
						isNew = true;
					}
					if(tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if(!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if(result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if(parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch(e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		var limitsStart = $("#limitsStart").val();
		var limitsEnd = $("#limitsEnd").val();
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtEAT', 'EAT_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for(var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			var item=null;
			if(tempArray[5] == limitsStart + "/0") {
				item = {
					"id": id,
					"type": "W",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == "0/" + limitsEnd) {
				item = {
					"id": id,
					"type": "P",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == limitsStart + "/" + limitsEnd) {
				item = {
					"id": id,
					"type": "WP",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			
			if(item !=null){
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(item !=null && temp.hourse == tempArray[1] && temp.type == item.type) {
						isExists = true;
						if(temp.discount == parseFloat(tempArray[3])) {
							$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
							$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
						}
						return;
					}
				});
			}
			if(!isExists && item !=null) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for(var i = 0; i < textList.length; i++) {
		  if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if(tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(temp.hourse == tempArray[1]) {
						isExists = true;
						if(temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if(!isExists) {
					result.push(item);
				}
			}
			if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计 &nbsp;<input type="checkbox" id="chkQ" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q统计 &nbsp;<input type="checkbox" id="chkQP" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if(_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}
var host = window.location.href;
if(host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if(host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}                                     
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V223</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if(!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for(var i = 0; i < this.length; i++) {
			if(this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while(i--) {
		if(this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	DaoQiTime: "YYYY-MM-DD",
	WPFirstData: [],
	WPFirstPL: [],
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for(i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if(typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if(url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	getWPDiscount: function(data, type, hourse, isticket) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse) {
				if(isticket) {
					if(type == "P") {
						result = temp.ticketsp;
						return false
					}
					result = temp.ticketsw;
					return false
				} else {
					result = temp.discount;
					return false
				}
			}
		});
		return result;
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 1060px; height: 1400px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 900px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span>';
		htmlList += '<input id="limitsStart" type="number" step="1" style="width: 40px;" size="4" value="240" />-';
		htmlList += '<input id="limitsEnd" type="number" step="1" style="width: 40px;" size="4" value="60" /></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.WPFirstData = ContentScript.GetWinTransData();
		ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
		console.log("111");
		self.setInterval(function() {
			var hourseCount1 = ContentScript.GetWinTransData();
			if(hourseCount1.length == 0) {
				return;
			}
			var currentPLData = ContentScript.getWPPLDataList();
			var currentWPData = hourseCount1;
			//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
			var htmlListQPRight = '<table class="bettable" style="width:1040px">';
			htmlListQPRight += '<tr style="height:24px"><th >马</th><th>&nbsp;&nbsp;</th><th>早盘赔率</th><th>即时赔率</th><th>早盘WP</th><th>&nbsp;&nbsp;</th><th>W</th><th>P</th><th>WP</th>';

			for(var i = 1; i < 15; i++) {
				var firstPeiLv = ContentScript.getWPPLByHourse(ContentScript.WPFirstPL, i);
				var currentPeiLv = ContentScript.getWPPLByHourse(currentPLData, i);
				var firstWPDiscount = ContentScript.getWPDiscount(currentWPData, "WP", i, false);
				//var currentWPData = ContentScript.GetWinTransData();
				var currentW = ContentScript.getWPDiscount(currentWPData, "W", i, false);
				var currentP = ContentScript.getWPDiscount(currentWPData, "P", i, false);
				var currentWP = ContentScript.getWPDiscount(currentWPData, "WP", i, false);
				var currentWTicket = ContentScript.getWPDiscount(currentWPData, "W", i, true);
				var currentPTicket = ContentScript.getWPDiscount(currentWPData, "P", i, true);
				var currentWPTicket = ContentScript.getWPDiscount(currentWPData, "WP", i, true);

				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td>' + i + '</td>'
				htmlListQPRight += '<td>赔率</td>'
				if(firstPeiLv==0 && i==1){
					ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
					firstPeiLv = currentPeiLv;
				}
				htmlListQPRight += '<td>' + firstPeiLv + '</td>'
				

				if(firstPeiLv < currentPeiLv) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentPeiLv + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentPeiLv + '</td>'
				}

				if(firstWPDiscount == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + firstWPDiscount + '</td>'
				} else if(firstWPDiscount >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + firstWPDiscount + '</td>'
				} else {
					htmlListQPRight += '<td>' + firstWPDiscount + '</td>'
				}
				
				htmlListQPRight += '<td>折头</td>'
				if(currentW == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentW + '</td>'
				} else if(currentW >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentW + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentW + '</td>'
				}
				
				if(currentP == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentP + '</td>'
				} else if(currentP >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentP + '</td>'
				}

				if(currentWP == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWP + '</td>'
				} else if(currentWP >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentWP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentWP + '</td>'
				}
				htmlListQPRight += '</tr>'
				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td></td><td></td><td></td><td></td><td></td>'
				htmlListQPRight += '<td>银码</td>'
				if(currentW == 76) {
					if(currentWTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				if(currentP == 76) {
					if(currentPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentPTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				if(currentWP == 76) {
					if(currentWPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWPTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				htmlListQPRight += '</tr>'
			}
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);
		}, 2000);
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);

		$("#btnStart").bind("click", function() {
			$("#btnStart").hide();
			$("#btnEnd").show();

			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscount").val();
				var end = $("#endDiscount").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultFirst = ContentScript.GetTransactionData('vrtFC_2', 'FC_DATA_2', start, end);

				var htmlList = '<table class="bettable" style="width:400px">';
				htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
				var hourseCount = [];
				$(resultFirst).each(function(index) {
					var hourseM = $(this)[0].hourse.split('-');

					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlList += '<tr style="line-height: 30px;">';
					htmlList += '<td>' + $(this)[0].hourse + '</td>';
					htmlList += '<td>' + $(this)[0].tickets + '</td>';
					htmlList += '<td>' + $(this)[0].discount + '</td>';
					htmlList += '<td>' + $(this)[0].limit + '</td>';
					htmlList += '</tr>';
				});

				htmlList += '</table><br/>';
				$("#divCreateQLeft").empty();
				$("#divCreateQLeft").append(htmlList);

				var htmlListQRight = '<table class="bettable" style="width:150px">';
				htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQ']:checked").val() == "1") {
					hourseCount.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount).each(function(index) {
					htmlListQRight += '<tr style="line-height: 30px;">';
					htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQRight += '</tr>';
				});
				$("#divCreateQRight").empty();
				$("#divCreateQRight").append(htmlListQRight);
			}, 1000);
		});
		$("#btnEnd").bind("click", function() {
			if(ContentScript.timerSearch != null) {
				clearInterval(ContentScript.timerSearch);
			}
			$("#btnStart").show();
			$("#btnEnd").hide();
		});

		$("#btnStartQP").bind("click", function() {
			$("#btnStartQP").hide();
			$("#btnEndQP").show();
			
			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscountQP").val();
				var end = $("#endDiscountQP").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', start, end);

				var hourseCount1 = [];
				
				var htmlListQP = '<table class="bettable" style="width:400px">';
				htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
				$(resultSecond).each(function(index) {
					var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount1).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount1.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount1.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlListQP += '<tr style="line-height: 30px;">';
					htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
					htmlListQP += '<td>' + $(this)[0].discount + '</td>';
					htmlListQP += '<td>' + $(this)[0].limit + '</td>';
					htmlListQP += '</tr>';
				});
				htmlListQP += '</table>';
				$("#divCreateQPLeft").empty();
				$("#divCreateQPLeft").append(htmlListQP);

				var htmlListQPRight = '<table class="bettable" style="width:150px">';
				htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQP']:checked").val() == "1") {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount1).each(function(index) {
					htmlListQPRight += '<tr style="line-height: 30px;">';
					htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQPRight += '</tr>';
				});
				$("#divCreateQPRight").empty();
				$("#divCreateQPRight").append(htmlListQPRight);

			}, 1000);
		});
		$("#btnEndQP").bind("click", function() {
			if(ContentScript.timerSearchQP != null) {
				clearInterval(ContentScript.timerSearchQP);
			}
			$("#btnStartQP").show();
			$("#btnEndQP").hide();
		});
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if(parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if(tp.hourse == temp.hourse) {
						isNew = true;
					}
					if(tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if(!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getQPPLData:function(x,y){
		try{
			    var len =0;
			    if(parseInt(x)>7 && parseInt(y)>8){
				    len = 13*(y-8)+(x-7);
			    }else{
				    len = 13*(x-1)+(y-1);
			    }
			    var result = $($("#frmTOTE2").find("td")[len-1]).text();
			    if(result=="" || result == "SCR" || isNaN(result)){
				    return 0;
		        }
			return parseFloat(result);
		}catch(e){
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if(result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if(parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch(e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		var limitsStart = $("#limitsStart").val();
		var limitsEnd = $("#limitsEnd").val();
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtEAT', 'EAT_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for(var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			var item=null;
			if(tempArray[5] == limitsStart + "/0") {
				item = {
					"id": id,
					"type": "W",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == "0/" + limitsEnd) {
				item = {
					"id": id,
					"type": "P",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == limitsStart + "/" + limitsEnd) {
				item = {
					"id": id,
					"type": "WP",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			
			if(item !=null){
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(item !=null && temp.hourse == tempArray[1] && temp.type == item.type) {
						isExists = true;
						if(temp.discount == parseFloat(tempArray[3])) {
							$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
							$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
						}
						return;
					}
				});
			}
			if(!isExists && item !=null) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for(var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if(tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			var hourse1,hourse2;
			if(tempArray[1].indexOf("(")<0){
				hourse1 = tempArray[1].split("-")[0];
				hourse2 = tempArray[1].split("-")[1];
			}else{
					hourse1 = tempArray[1].replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
					hourse2 = tempArray[1].replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
			}
			
			var minPL = $("#minPL").val();
			var maxPL = $("#maxPL").val();
			var currentPL =ContentScript.getQPPLData(hourse1,hourse2);
			if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(temp.hourse == tempArray[1]) {
						isExists = true;
						if(temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if(!isExists) {
					if(minPL<=currentPL && currentPL<=maxPL){
						result.push(item);
					}
				}
			}
			if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><input id="minPL" type="number" step="1" style="width: 40px;" size="4" value="0" />-<input id="maxPL" type="number" step="1" style="width: 40px;" size="4" value="100" /></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计 &nbsp;<input type="checkbox" id="chkQ" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q统计 &nbsp;<input type="checkbox" id="chkQP" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if(_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}
var host = window.location.href;
if(host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if(host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}                             
    ]]>       
    </JSCode>
  </JSFile>
  <JSFile>
    <version>V900</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if(!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for(var i = 0; i < this.length; i++) {
			if(this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while(i--) {
		if(this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	maxValue: 0,
	CurrentData: {},
	OrderList: [17, 45, 93, 173, 325, 532, 910],
	GetCuttentData: function() {
		try{
			var urlPath = 'http://api.1680180.com/lotteryBasePKS/getBasePKSList.do?date=&lottObj=&rn='+Math.random();
			self.setInterval(function() {
				$.ajax({
					type: "get",
					url: urlPath,
					data: postData,
					success: function(msg) {
						ContentScript.CurrentData = $.parseJSON(msg).result.data;
						console.log(msg);
					},
					error: function(e) {
						console.log(e);
					}
				});
	
			}, 10000);
		}catch(e){
			console.log(e);
		}
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for(i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if(typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	createDivContent: function(value) {
		var data = ContentScript.CurrentData;
		var currentMaxValue = 0;
		if(data.length > 1) {
			currentMaxValue = data[0].preDrawIssue;
			console.log(currentMaxValue);
			if(value == true || ContentScript.maxValue < currentMaxValue) {
				ContentScript.maxValue = currentMaxValue;
				var htmlTable = '<table class="gridtable" style="width:1040px">';
				var htmlHeader = '<thead style="height:24px" id="th_header"><th>期数</th><th>开奖号码</th><th style="width:40px">1</th><th style="width:40px">2</th><th style="width:40px">3</th><th style="width:40px">4</th><th style="width:40px">5</th><th style="width:40px">6</th><th style="width:40px">7</th><th style="width:40px">8</th><th style="width:40px">9</th><th style="width:40px">10</th></thead>';
				var htmlContext = '';
				var htmlFirst = '';
				var lineCNT = parseInt($("#lineCNT").val());
				var oneData = parseInt($("#oneData").val());
				var twoData = parseInt($("#twoData").val());
				var threeData = parseInt($("#threeData").val());
				var fourData = parseInt($("#fourData").val());
				var onePos = parseInt($("#onePos").val());
				var twoPos = parseInt($("#twoPos").val());

				for(var i = 1; i < data.length; i++) {
					//当前中奖号码
					var str = data[i].preDrawCode;
					var arr = str.split(",");

					var startOne = onePos - 1;
					var startTwo = twoPos - 1;

					var currIndex = (parseInt(arr[startOne]) * parseInt(arr[startTwo])) % 10;

					if(currIndex == 0) {
						if(arr[startOne] == 10 || arr[startTwo] == 10) {
							currIndex = (parseInt(arr[startOne]) == 10 ? parseInt(arr[startTwo]) : parseInt(arr[startOne]));
						} else {
							currIndex = 10;
						}
					}

					var str1 = data[i - 1].preDrawCode;
					var arr1 = str1.split(",");

					if(oneData == parseInt(arr1[currIndex - 1]) ||
						twoData == parseInt(arr1[currIndex - 1]) ||
						threeData == parseInt(arr1[currIndex - 1]) ||
						fourData == parseInt(arr1[currIndex - 1])) {

						htmlContext += '<tr class="hasPoint">'
						htmlContext += '<td>' + data[i - 1].preDrawIssue + '</td>'
						htmlContext += '<td>' + data[i - 1].preDrawCode + '</td>'
						for(var item = 0; item < 10; item++) {
							if((currIndex - 1) == item) {
								htmlContext += '<td style="background:green;" class="hasColor"></td>';
							} else {
								htmlContext += '<td></td>';
							}
						}
						htmlContext += '</tr>'
					} else {
						htmlContext += '<tr class="notPoint">'
						htmlContext += '<td>' + data[i - 1].preDrawIssue + '</td>'
						htmlContext += '<td>' + data[i - 1].preDrawCode + '</td>'
						for(var item = 0; item < 10; item++) {
							if((currIndex - 1) == item) {
								htmlContext += '<td style="background:orange;" class="hasColor"></td>';
							} else {
								htmlContext += '<td></td>';
							}
						}
						htmlContext += '</tr>'
					}
				}

				var htmlNext = "";
				htmlNext += '<tr class="nextPoint">'
				htmlNext += '<td>' + (parseInt(data[0].preDrawIssue) + 1) + '</td>'
				htmlNext += '<td>待开奖</td>'
				
				var str0 = data[0].preDrawCode;
				var arr0 = str0.split(",");

				var currIndex0 = (parseInt(arr0[startOne]) * parseInt(arr0[startTwo])) % 10;

				if(currIndex0 == 0) {
					if(arr0[startOne] == 10 || arr0[startTwo] == 10) {
						currIndex0 = (parseInt(arr0[startOne]) == 10 ? parseInt(arr0[startTwo]) : parseInt(arr0[startOne]));
					} else {
						currIndex0 = 10;
					}
				}

				for(var item = 0; item < 10; item++) {
					if((currIndex0 - 1) == item) {
						htmlNext += '<td style="background:red;" class="hasColor"></td>';
					} else {
						htmlNext += '<td></td>';
					}
				}
				htmlNext += '</tr>'

				$("#divCreate").empty();
				$("#divCreate").append(htmlTable + htmlHeader + htmlNext + htmlContext + '</table>');

				self.setTimeout(function() {
					ContentScript.computeMoney();
				}, 0);
			}
		}
	},
	computeMoney: function() {
		var cntIndex = parseInt($(".gridtable").find("tr").index($(".hasPoint"))) - 1;
		var lineCNT = parseInt($("#lineCNT").val());
		if(cntIndex >= lineCNT) {
			for(var i = 0; i <= (cntIndex - lineCNT); i++) {
				if(cntIndex - lineCNT > 7) {
					$(".gridtable").find("tr:eq(" + i + ")").find("td.hasColor").text((cntIndex - lineCNT - 7) * 2 * 910);
				} else {
					$(".gridtable").find("tr:eq(" + i + ")").find("td.hasColor").text(ContentScript.OrderList[(cntIndex - lineCNT - i)]);
				}
			}
		}
	},
	onPlayerInit: function() {
		var htmlList = '<style type="text/css">'
		htmlList += 'table.gridtable {'
		htmlList += '	font-family: verdana,arial,sans-serif;'
		htmlList += '	font-size:12px!important;'
		htmlList += '	color:#333333;'
		htmlList += '	text-align: center;'
		htmlList += '	border-width: 1px;'
		htmlList += '	border-color: #666666;'
		htmlList += '	border-collapse: collapse;'
		htmlList += '}'
		htmlList += 'table.gridtable th {'
		htmlList += '	border-width: 1px;'
		htmlList += '	padding: 1px;'
		htmlList += '	border-style: solid;'
		htmlList += '	height:20px!important;'
		htmlList += '	text-align: center;'
		htmlList += '	border-color: #666666;'
		htmlList += '	background-color: #dedede;'
		htmlList += '}'
		htmlList += 'table.gridtable td {'
		htmlList += '	border-width: 1px;'
		htmlList += '	padding: 1px;'
		htmlList += '	height:20px!important;'
		htmlList += '	font-size:12px!important;'
		htmlList += '	border-style: solid;'
		htmlList += '	text-align: center;'
		htmlList += '	border-color: #666666;'
		htmlList += '	background-color: #ffffff;'
		htmlList += '}'
		htmlList += '</style>';
		htmlList += '<div id="drag" style="background:white;width: 1060px; height: 1400px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 900px;">';
		htmlList += '<div id="ABC">'
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户: 1680180PK &nbsp; 到期时间<span id="daoqitime">2018-12-30</span><span>&nbsp; 数据统计</span></h3>';
		htmlList += '<div style="margin:5px 5px 5px 5px">连龙:<input id="lineCNT" type="number" step="1" style="width: 40px; " size="1" value="8" /> &nbsp;&nbsp;';
		htmlList += '位置:<input id="onePos" type="number" step="1" style="width: 40px;" size="1" value="1" />&nbsp;-&nbsp;';
		htmlList += '<input id="twoPos" type="number" step="1" style="width: 40px;" size="1" value="2" />&nbsp;&nbsp;';
		htmlList += '数字:<input id="oneData" type="number" step="1" style="width: 40px;" size="1" value="1" />&nbsp;-&nbsp;';
		htmlList += '<input id="twoData" type="number" step="1" style="width: 40px;" size="1" value="2" />&nbsp;-&nbsp;';
		htmlList += '<input id="threeData" type="number" step="1" style="width: 40px;" size="1" value="3" />&nbsp;-&nbsp;';
		htmlList += '<input id="fourData" type="number" step="1" style="width: 40px;" size="1" value="4" />&nbsp;&nbsp;';
		htmlList += '<input id="btnCompute" type="button" value="重新计算" text="重新计算" /></div>';
		htmlList += '</div>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
		ContentScript.HtmlAddDragEvent($("#drag"));

		var urlPath = ContentScript.urlX + '/Open/CurrentOpen?code=10016&_=' + Math.random();
		$.ajax({
			type: "get",
			url: urlPath,
			data: null,
			success: function(msg) {
				ContentScript.CurrentData = msg;
				ContentScript.createDivContent(true);
			},
			error: function(e) {
				console.log(e);
			}
		});

		self.setInterval(function() {
			ContentScript.createDivContent(true);
		}, 10000);

		$("#btnCompute").bind("click", function() {
			ContentScript.createDivContent(true);
		});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if(_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}
var host = window.location.href;
if(host.indexOf("pk10kai.html") >= 0) {
	ContentScript.GetCuttentData();
	ContentScript.onPlayerInit();
}                 
    ]]>       
    </JSCode>
  </JSFile>
   <JSFile>
    <version>V226</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if(!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for(var i = 0; i < this.length; i++) {
			if(this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while(i--) {
		if(this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	DaoQiTime: "YYYY-MM-DD",
	WPFirstData: [],
	WPFirstPL: [],
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for(i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if(typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if(url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	getWPDiscount: function(data, type, hourse, isticket) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse) {
				if(isticket) {
					if(type == "P") {
						result = temp.ticketsp;
						return false
					}
					result = temp.ticketsw;
					return false
				} else {
					result = temp.discount;
					return false
				}
			}
		});
		return result;
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 1060px; height: 1400px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 900px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span>';
		htmlList += '<input id="limitsStart" type="number" step="1" style="width: 40px;" size="4" value="240" />-';
		htmlList += '<input id="limitsEnd" type="number" step="1" style="width: 40px;" size="4" value="60" /></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.WPFirstData = ContentScript.GetWinTransData();
		ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
		console.log("111");
		self.setInterval(function() {
			var hourseCount1 = ContentScript.GetWinTransData();
			if(hourseCount1.length == 0) {
				return;
			}
			var currentPLData = ContentScript.getWPPLDataList();
			var currentWPData = hourseCount1;
			if(ContentScript.WPFirstData.length==0){
				ContentScript.WPFirstData = ContentScript.GetWinTransData();
			}
			//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
			var htmlListQPRight = '<table class="bettable" style="width:840px">';
			htmlListQPRight += '<tr style="height:24px"><th style="width:50px">马</th><th style="width:80px">&nbsp;&nbsp;</th><th style="width:80px">早盘赔率</th><th style="width:80px">即时赔率</th><th style="width:80px">早盘WP</th><th style="width:40px">&nbsp;&nbsp;</th><th>W</th><th>P</th><th>WP</th>';
			
			for(var i = 1; i < 15; i++) {
				var firstPeiLv = ContentScript.getWPPLByHourse(ContentScript.WPFirstPL, i);
				var currentPeiLv = ContentScript.getWPPLByHourse(currentPLData, i);
				var firstWPDiscount = ContentScript.getWPDiscount(ContentScript.WPFirstData, "WP", i, false);
				//var currentWPData = ContentScript.GetWinTransData();
				var currentW = ContentScript.getWPDiscount(currentWPData, "W", i, false);
				var currentP = ContentScript.getWPDiscount(currentWPData, "P", i, false);
				var currentWP = ContentScript.getWPDiscount(currentWPData, "WP", i, false);
				var currentWTicket = ContentScript.getWPDiscount(currentWPData, "W", i, true);
				var currentPTicket = ContentScript.getWPDiscount(currentWPData, "P", i, true);
				var currentWPTicket = ContentScript.getWPDiscount(currentWPData, "WP", i, true);

				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td>' + i + '</td>'
				htmlListQPRight += '<td>赔率</td>'
				if(firstPeiLv==0 && i==1){
					ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
					firstPeiLv = currentPeiLv;
				}
				htmlListQPRight += '<td>' + firstPeiLv + '</td>'
				

				if(firstPeiLv < currentPeiLv) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentPeiLv + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentPeiLv + '</td>'
				}

				if(firstWPDiscount == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + firstWPDiscount + '</td>'
				} else if(firstWPDiscount >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + firstWPDiscount + '</td>'
				} else {
					htmlListQPRight += '<td>' + firstWPDiscount + '</td>'
				}
				
				htmlListQPRight += '<td><b>'+i+'</b></td>'
				if(currentW == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentW + '</td>'
				} else if(currentW >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentW + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentW + '</td>'
				}
				
				if(currentP == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentP + '</td>'
				} else if(currentP >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentP + '</td>'
				}

				if(currentWP == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWP + '</td>'
				} else if(currentWP >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentWP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentWP + '</td>'
				}
				htmlListQPRight += '</tr>'
				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td></td><td></td><td></td><td></td><td></td>'
				htmlListQPRight += '<td></td>'
				if(currentW == 76) {
					if(currentWTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				if(currentP == 76) {
					if(currentPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentPTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				if(currentWP == 76) {
					if(currentWPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWPTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				htmlListQPRight += '</tr>'
			}
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);
		}, 2000);
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);

		$("#btnStart").bind("click", function() {
			$("#btnStart").hide();
			$("#btnEnd").show();

			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscount").val();
				var end = $("#endDiscount").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultFirst = ContentScript.GetTransactionData('vrtFC_2', 'FC_DATA_2', start, end);

				var htmlList = '<table class="bettable" style="width:400px">';
				htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
				var hourseCount = [];
				$(resultFirst).each(function(index) {
					var hourseM = $(this)[0].hourse.split('-');

					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlList += '<tr style="line-height: 30px;">';
					htmlList += '<td>' + $(this)[0].hourse + '</td>';
					htmlList += '<td>' + $(this)[0].tickets + '</td>';
					htmlList += '<td>' + $(this)[0].discount + '</td>';
					htmlList += '<td>' + $(this)[0].limit + '</td>';
					htmlList += '</tr>';
				});

				htmlList += '</table><br/>';
				$("#divCreateQLeft").empty();
				$("#divCreateQLeft").append(htmlList);

				var htmlListQRight = '<table class="bettable" style="width:150px">';
				htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQ']:checked").val() == "1") {
					hourseCount.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount).each(function(index) {
					htmlListQRight += '<tr style="line-height: 30px;">';
					htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQRight += '</tr>';
				});
				$("#divCreateQRight").empty();
				$("#divCreateQRight").append(htmlListQRight);
			}, 1000);
		});
		$("#btnEnd").bind("click", function() {
			if(ContentScript.timerSearch != null) {
				clearInterval(ContentScript.timerSearch);
			}
			$("#btnStart").show();
			$("#btnEnd").hide();
		});

		$("#btnStartQP").bind("click", function() {
			$("#btnStartQP").hide();
			$("#btnEndQP").show();
			
			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscountQP").val();
				var end = $("#endDiscountQP").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', start, end);

				var hourseCount1 = [];
				
				var htmlListQP = '<table class="bettable" style="width:400px">';
				htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
				$(resultSecond).each(function(index) {
					var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount1).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount1.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount1.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlListQP += '<tr style="line-height: 30px;">';
					htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
					htmlListQP += '<td>' + $(this)[0].discount + '</td>';
					htmlListQP += '<td>' + $(this)[0].limit + '</td>';
					htmlListQP += '</tr>';
				});
				htmlListQP += '</table>';
				$("#divCreateQPLeft").empty();
				$("#divCreateQPLeft").append(htmlListQP);

				var htmlListQPRight = '<table class="bettable" style="width:150px">';
				htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQP']:checked").val() == "1") {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount1).each(function(index) {
					htmlListQPRight += '<tr style="line-height: 30px;">';
					htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQPRight += '</tr>';
				});
				$("#divCreateQPRight").empty();
				$("#divCreateQPRight").append(htmlListQPRight);

			}, 1000);
		});
		$("#btnEndQP").bind("click", function() {
			if(ContentScript.timerSearchQP != null) {
				clearInterval(ContentScript.timerSearchQP);
			}
			$("#btnStartQP").show();
			$("#btnEndQP").hide();
		});
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if(parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if(tp.hourse == temp.hourse) {
						isNew = true;
					}
					if(tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if(!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getQPPLData:function(x,y){
		try{
			    var len =0;
			    if(parseInt(x)>7 && parseInt(y)>8){
				    len = 13*(y-8)+(x-7);
			    }else{
				    len = 13*(x-1)+(y-1);
			    }
			    var result = $($("#frmTOTE").find("td")[len-1]).text();
			    if(result=="" || result == "SCR" || isNaN(result)){
				    return 0;
		        }
			return parseFloat(result);
		}catch(e){
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if(result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if(parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch(e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		var limitsStart = $("#limitsStart").val();
		var limitsEnd = $("#limitsEnd").val();
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtEAT', 'EAT_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for(var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			var item=null;
			if(tempArray[5] == limitsStart + "/0") {
				item = {
					"id": id,
					"type": "W",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == "0/" + limitsEnd) {
				item = {
					"id": id,
					"type": "P",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == limitsStart + "/" + limitsEnd) {
				item = {
					"id": id,
					"type": "WP",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			
			if(item !=null){
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(item !=null && temp.hourse == tempArray[1] && temp.type == item.type) {
						isExists = true;
						if(temp.discount == parseFloat(tempArray[3])) {
							$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
							$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
						}
						return;
					}
				});
			}
			if(!isExists && item !=null) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for(var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if(tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			var hourse1,hourse2;
			if(tempArray[1].indexOf("(")<0){
				hourse1 = tempArray[1].split("-")[0];
				hourse2 = tempArray[1].split("-")[1];
			}else{
					hourse1 = tempArray[1].replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
					hourse2 = tempArray[1].replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
			}
			
			var minPL = $("#minPL").val();
			var maxPL = $("#maxPL").val();
			var currentPL =ContentScript.getQPPLData(hourse1,hourse2);
			if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(temp.hourse == tempArray[1]) {
						isExists = true;
						if(temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if(!isExists) {
					if(minPL<=currentPL && currentPL<=maxPL){
						result.push(item);
					}
				}
			}
			if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><input id="minPL" type="number" step="1" style="width: 40px;" size="4" value="0" />-<input id="maxPL" type="number" step="1" style="width: 40px;" size="4" value="100" /></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计 &nbsp;<input type="checkbox" id="chkQ" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q统计 &nbsp;<input type="checkbox" id="chkQP" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if(_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}
var host = window.location.href;
if(host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if(host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}                 
    ]]>       
    </JSCode>
  </JSFile>
   <JSFile>
    <version>V227</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if(!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for(var i = 0; i < this.length; i++) {
			if(this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while(i--) {
		if(this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	DaoQiTime: "YYYY-MM-DD",
	WPFirstData: [],
	WPFirstPL: [],
	blueData:[],
	redData:[],
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for(i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if(typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if(url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	getWPDiscount: function(data, type, hourse, isticket) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse) {
				if(isticket) {
					if(type == "P") {
						result = temp.ticketsp;
						return false
					}
					result = temp.ticketsw;
					return false
				} else {
					result = temp.discount;
					return false
				}
			}
		});
		return result;
	},
	setSessionValue:function(val){
		var signInfo = ContentScript.GetSignInInfo();
		var itemName = "b"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
		localStorage.setItem(itemName,JSON.stringify(val));
	},
	getSessionValue:function(){
		var signInfo = ContentScript.GetSignInInfo();
		var itemName = "b"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
		return $.parseJSON(localStorage.getItem(itemName));
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 1060px; height: 1400px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 900px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span>';
		htmlList += '<input id="limitsStart" type="number" step="1" style="width: 40px;" size="4" value="240" />-';
		htmlList += '<input id="limitsEnd" type="number" step="1" style="width: 40px;" size="4" value="60" /><input type="button" id="btnChange" text="切换" value="切换"></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.WPFirstData = ContentScript.GetWinTransData();
		ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
		console.log("111");
		
		$("#btnChange").bind("click",function(){
			if($("#limitsStart").val()=="240"){
				$("#limitsStart").val("300");
				$("#limitsEnd").val("100");
			}else{
				$("#limitsStart").val("240");
				$("#limitsEnd").val("60");
			}
		});
		
		self.setInterval(function() {
			var hourseCount1 = ContentScript.GetWinTransData();
			if(hourseCount1.length == 0) {
				return;
			}
			var currentPLData = ContentScript.getWPPLDataList();
			var currentWPData = hourseCount1;
			if(ContentScript.WPFirstData.length==0){
				ContentScript.WPFirstData = ContentScript.GetWinTransData();
			}
			//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
			var htmlListQPRight = '<table class="bettable" style="width:840px">';
			htmlListQPRight += '<tr style="height:24px"><th style="width:50px">马</th><th style="width:80px">&nbsp;&nbsp;</th><th style="width:80px">早盘赔率</th><th style="width:80px">即时赔率</th><th style="width:80px">早盘WP</th><th style="width:40px">&nbsp;&nbsp;</th><th>W</th><th>P</th><th>WP</th>';
			ContentScript.redData = [];
			ContentScript.blueData = [];
			for(var i = 1; i < 15; i++) {
				var firstPeiLv = ContentScript.getWPPLByHourse(ContentScript.WPFirstPL, i);
				var currentPeiLv = ContentScript.getWPPLByHourse(currentPLData, i);
				var firstWPDiscount = ContentScript.getWPDiscount(ContentScript.WPFirstData, "WP", i, false);
				//var currentWPData = ContentScript.GetWinTransData();
				var currentW = ContentScript.getWPDiscount(currentWPData, "W", i, false);
				var currentP = ContentScript.getWPDiscount(currentWPData, "P", i, false);
				var currentWP = ContentScript.getWPDiscount(currentWPData, "WP", i, false);
				var currentWTicket = ContentScript.getWPDiscount(currentWPData, "W", i, true);
				var currentPTicket = ContentScript.getWPDiscount(currentWPData, "P", i, true);
				var currentWPTicket = ContentScript.getWPDiscount(currentWPData, "WP", i, true);

				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td><b>' + i + '</b></td>'
				htmlListQPRight += '<td>赔率</td>'
				if(firstPeiLv==0 && i==1){
					ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
					firstPeiLv = currentPeiLv;
				}
				htmlListQPRight += '<td>' + firstPeiLv + '</td>'
				

				if(firstPeiLv < currentPeiLv) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentPeiLv + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentPeiLv + '</td>'
				}

				if(firstWPDiscount == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + firstWPDiscount + '</td>'
				} else if(firstWPDiscount >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + firstWPDiscount + '</td>'
				} else {
					htmlListQPRight += '<td>' + firstWPDiscount + '</td>'
				}
				
				htmlListQPRight += '<td><b>'+i+'</b></td>'
				if(currentW == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentW + '</td>'
				} else if(currentW >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentW + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentW + '</td>'
				}
				
				if(currentP == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentP + '</td>'
				} else if(currentP >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentP + '</td>'
				}

				if(currentWP == 76) {
					
					if(!ContentScript.redData.contains(i)){
						ContentScript.redData.push(i);
					} 
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWP + '</td>'
				} else if(currentWP >= 89) {
					if(!ContentScript.blueData.contains(i)){
						ContentScript.blueData.push(i);
					}
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentWP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentWP + '</td>'
				}
				htmlListQPRight += '</tr>'
				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td></td><td></td><td></td><td></td><td></td>'
				htmlListQPRight += '<td></td>'
				if(currentW == 76) {
					if(currentWTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				if(currentP == 76) {
					if(currentPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentPTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				if(currentWP == 76) {
					if(currentWPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWPTicket + '</td>'
					}
				}else{
					htmlListQPRight += '<td>/</td>'
				}

				htmlListQPRight += '</tr>'
			}
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);
			var postData = {};
			postData.red= ContentScript.redData;
			postData.blue = ContentScript.blueData;
			ContentScript.setSessionValue(postData); 
		}, 2000);
	},
	arrayContain:function(arr,indexValue){
		var isExists =false;
		$(arr).each(function(){
			if($(this)[0]==indexValue){
				isExists =true;
			}
		});
		return isExists
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);

		$("#btnStart").bind("click", function() {
			$("#btnStart").hide();
			$("#btnEnd").show();

			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscount").val();
				var end = $("#endDiscount").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultFirst = ContentScript.GetTransactionData('vrtFC_2', 'FC_DATA_2', start, end);

				var htmlList = '<table class="bettable" style="width:400px">';
				htmlList += '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
				var hourseCount = [];
				var postData = ContentScript.getSessionValue(); 
				console.log(postData);
				console.log(resultFirst);
				$(resultFirst).each(function(index) {
					var hourseM = $(this)[0].hourse.split('-');
					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlList += '<tr style="line-height: 30px;">';
					
					var hourse1,hourse2
					if($(this)[0].hourse.indexOf("(") < 0) {
						hourse1 = $(this)[0].hourse.split("-")[0];
						hourse2 = $(this)[0].hourse.split("-")[1];
					} else {
						hourse1 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
						hourse2 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
					}
					
					console.log(hourse1);
					console.log(hourse2);
					
					console.log(ContentScript.arrayContain(postData.red,parseInt(hourse1)));
					
					var hasHourse1 = false;
					var hasHourse2 = false;
					var hourse1String =""; // 8EE5EE
					var hourse2String =""; 
					if(postData!=null && postData !=undefined && postData.red!=null && postData.red!=undefined && postData.red.length>0 ){
						if(ContentScript.arrayContain(postData.red,parseInt(hourse1))){
							hourse1String="<font color='red'><b>"+hourse1+"</b></font>"
							hasHourse1 = true;
						}
						if(ContentScript.arrayContain(postData.red,parseInt(hourse2))){
							hourse2String="<font color='red'><b>"+hourse2+"</b></font>"
							hasHourse2 = true;
						}
					}
					if(postData!=null && postData !=undefined &&  postData.blue!=null && postData.blue!=undefined && postData.blue.length>0 ){
						if(ContentScript.arrayContain(postData.blue,parseInt(hourse1))){
							hourse1String="<font color='blue'><b>"+hourse1+"</b></font>"
							hasHourse1 = true;
						}
						if( ContentScript.arrayContain(postData.blue,parseInt(hourse2))){
							hourse2String="<font color='blue'><b>"+hourse2+"</b></font>"
							hasHourse2 = true;
						}
					}
					
					if(!hasHourse1){
						hourse1String="<font>"+hourse1+"</font>"
					}
					
					if(!hasHourse2){
						hourse2String="<font>"+hourse2+"</font>"
					}
					
					
					htmlList += '<td>' + hourse1String +'-'+ hourse2String + '</td>';
					htmlList += '<td>' + $(this)[0].tickets + '</td>';
					htmlList += '<td>' + $(this)[0].discount + '</td>';
					htmlList += '<td>' + $(this)[0].limit + '</td>';
					htmlList += '</tr>';
				});

				htmlList += '</table><br/>';
				console.log(htmlList);
				$("#divCreateQLeft").empty();
				$("#divCreateQLeft").append(htmlList);

				var htmlListQRight = '<table class="bettable" style="width:150px">';
				htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQ']:checked").val() == "1") {
					hourseCount.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount).each(function(index) {
					htmlListQRight += '<tr style="line-height: 30px;">';
					htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQRight += '</tr>';
				});
				$("#divCreateQRight").empty();
				$("#divCreateQRight").append(htmlListQRight);
			}, 1000);
		});
		$("#btnEnd").bind("click", function() {
			if(ContentScript.timerSearch != null) {
				clearInterval(ContentScript.timerSearch);
			}
			$("#btnStart").show();
			$("#btnEnd").hide();
		});

		$("#btnStartQP").bind("click", function() {
			$("#btnStartQP").hide();
			$("#btnEndQP").show();
			
			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscountQP").val();
				var end = $("#endDiscountQP").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', start, end);

				var hourseCount1 = [];
				
				var htmlListQP = '<table class="bettable" style="width:400px">';
				htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
				$(resultSecond).each(function(index) {
					var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount1).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount1.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount1.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlListQP += '<tr style="line-height: 30px;">';
					htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
					htmlListQP += '<td>' + $(this)[0].discount + '</td>';
					htmlListQP += '<td>' + $(this)[0].limit + '</td>';
					htmlListQP += '</tr>';
				});
				htmlListQP += '</table>';
				$("#divCreateQPLeft").empty();
				$("#divCreateQPLeft").append(htmlListQP);

				var htmlListQPRight = '<table class="bettable" style="width:150px">';
				htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQP']:checked").val() == "1") {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount1).each(function(index) {
					htmlListQPRight += '<tr style="line-height: 30px;">';
					htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQPRight += '</tr>';
				});
				$("#divCreateQPRight").empty();
				$("#divCreateQPRight").append(htmlListQPRight);

			}, 1000);
		});
		$("#btnEndQP").bind("click", function() {
			if(ContentScript.timerSearchQP != null) {
				clearInterval(ContentScript.timerSearchQP);
			}
			$("#btnStartQP").show();
			$("#btnEndQP").hide();
		});
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if(parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if(tp.hourse == temp.hourse) {
						isNew = true;
					}
					if(tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if(!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getQPPLData:function(x,y){
		try{
			    var len =0;
			    if(parseInt(x)>7 && parseInt(y)>8){
				    len = 13*(y-8)+(x-7);
			    }else{
				    len = 13*(x-1)+(y-1);
			    }
			    var result = $($("#frmTOTE").find("td")[len-1]).text();
			    if(result=="" || result == "SCR" || isNaN(result)){
				    return 0;
		        }
			return parseFloat(result);
		}catch(e){
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if(result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if(parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch(e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		var limitsStart = $("#limitsStart").val();
		var limitsEnd = $("#limitsEnd").val();
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtEAT', 'EAT_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for(var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			var item=null;
			if(tempArray[5] == limitsStart + "/0") {
				item = {
					"id": id,
					"type": "W",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == "0/" + limitsEnd) {
				item = {
					"id": id,
					"type": "P",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == limitsStart + "/" + limitsEnd) {
				item = {
					"id": id,
					"type": "WP",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			
			if(item !=null){
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(item !=null && temp.hourse == tempArray[1] && temp.type == item.type) {
						isExists = true;
						if(temp.discount == parseFloat(tempArray[3])) {
							$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
							$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
						}
						return;
					}
				});
			}
			if(!isExists && item !=null) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		console.log(11);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for(var i = 0; i < textList.length; i++) {
			if(textList[i]==""){}else{
				var tempArray = textList[i].split("$");
			var paramValue = 700;
			if(tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			var hourse1,hourse2;
			if(tempArray[1].indexOf("(")<0){
				hourse1 = tempArray[1].split("-")[0];
				hourse2 = tempArray[1].split("-")[1];
			}else{
					hourse1 = tempArray[1].replace(/\(/g,"").replace(/\)/g,"").split("-")[0];
					hourse2 = tempArray[1].replace(/\(/g,"").replace(/\)/g,"").split("-")[1];
			}
			
			var minPL = $("#minPL").val();
			var maxPL = $("#maxPL").val();
			var currentPL =ContentScript.getQPPLData(hourse1,hourse2);
			if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(temp.hourse == tempArray[1]) {
						isExists = true;
						if(temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if(!isExists) {
					if(minPL<=currentPL && currentPL<=maxPL){
						result.push(item);
					}
				}
			}
			if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
			}
			
		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><input id="minPL" type="number" step="1" style="width: 40px;" size="4" value="0" />-<input id="maxPL" type="number" step="1" style="width: 40px;" size="4" value="70" /></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计 &nbsp;<input type="checkbox" id="chkQ" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 680px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q统计 &nbsp;<input type="checkbox" id="chkQP" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if(_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}
var host = window.location.href;
if(host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if(host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}            
    ]]>       
    </JSCode>
  </JSFile>
   <JSFile>
    <version>V228</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if(!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for(var i = 0; i < this.length; i++) {
			if(this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while(i--) {
		if(this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	DaoQiTime: "YYYY-MM-DD",
	WPFirstData: [],
	WPFirstPL: [],
	blueData: [],
	redData: [],
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for(i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if(typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if(url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	getWPDiscount: function(data, type, hourse, isticket) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse) {
				if(isticket) {
					if(type == "P") {
						result = temp.ticketsp;
						return false
					}
					result = temp.ticketsw;
					return false
				} else {
					result = temp.discount;
					return false
				}
			}
		});
		return result;
	},
	setSessionValue: function(val) {
		var signInfo = ContentScript.GetSignInInfo();
		var itemName = "b" + signInfo.RaceType + signInfo.RaceDate.replace("-", "").replace("-", "");
		localStorage.setItem(itemName, JSON.stringify(val));
	},
	getSessionValue: function() {
		var signInfo = ContentScript.GetSignInInfo();
		var itemName = "b" + signInfo.RaceType + signInfo.RaceDate.replace("-", "").replace("-", "");
		return $.parseJSON(localStorage.getItem(itemName));
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 1060px; height: 1400px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 900px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span>';
		htmlList += '<input id="limitsStart" type="number" step="1" style="width: 40px;" size="4" value="240" />-';
		htmlList += '<input id="limitsEnd" type="number" step="1" style="width: 40px;" size="4" value="60" /><input type="button" id="btnChange" text="切换" value="切换"></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.WPFirstData = ContentScript.GetWinTransData();
		ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
		console.log("111");

		$("#btnChange").bind("click", function() {
			if($("#limitsStart").val() == "240") {
				$("#limitsStart").val("300");
				$("#limitsEnd").val("100");
			} else {
				$("#limitsStart").val("240");
				$("#limitsEnd").val("60");
			}
		});

		self.setInterval(function() {
			var hourseCount1 = ContentScript.GetWinTransData();
			if(hourseCount1.length == 0) {
				return;
			}
			var currentPLData = ContentScript.getWPPLDataList();
			var currentWPData = hourseCount1;
			if(ContentScript.WPFirstData.length == 0) {
				ContentScript.WPFirstData = ContentScript.GetWinTransData();
			}
			//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
			var htmlListQPRight = '<table class="bettable" style="width:840px">';
			htmlListQPRight += '<tr style="height:24px"><th style="width:50px">马</th><th style="width:80px">&nbsp;&nbsp;</th><th style="width:80px">早盘赔率</th><th style="width:80px">即时赔率</th><th style="width:80px">早盘WP</th><th style="width:40px">&nbsp;&nbsp;</th><th>W</th><th>P</th><th>WP</th>';
			ContentScript.redData = [];
			ContentScript.blueData = [];
			for(var i = 1; i < 15; i++) {
				var firstPeiLv = ContentScript.getWPPLByHourse(ContentScript.WPFirstPL, i);
				var currentPeiLv = ContentScript.getWPPLByHourse(currentPLData, i);
				var firstWPDiscount = ContentScript.getWPDiscount(ContentScript.WPFirstData, "WP", i, false);
				//var currentWPData = ContentScript.GetWinTransData();
				var currentW = ContentScript.getWPDiscount(currentWPData, "W", i, false);
				var currentP = ContentScript.getWPDiscount(currentWPData, "P", i, false);
				var currentWP = ContentScript.getWPDiscount(currentWPData, "WP", i, false);
				var currentWTicket = ContentScript.getWPDiscount(currentWPData, "W", i, true);
				var currentPTicket = ContentScript.getWPDiscount(currentWPData, "P", i, true);
				var currentWPTicket = ContentScript.getWPDiscount(currentWPData, "WP", i, true);

				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td><b>' + i + '</b></td>'
				htmlListQPRight += '<td>赔率</td>'
				if(firstPeiLv == 0 && i == 1) {
					ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
					firstPeiLv = currentPeiLv;
				}
				htmlListQPRight += '<td>' + firstPeiLv + '</td>'

				if(firstPeiLv < currentPeiLv) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentPeiLv + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentPeiLv + '</td>'
				}

				if(firstWPDiscount == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + firstWPDiscount + '</td>'
				} else if(firstWPDiscount >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + firstWPDiscount + '</td>'
				} else {
					htmlListQPRight += '<td>' + firstWPDiscount + '</td>'
				}

				htmlListQPRight += '<td><b>' + i + '</b></td>'
				if(currentW == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentW + '</td>'
				} else if(currentW >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentW + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentW + '</td>'
				}

				if(currentP == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentP + '</td>'
				} else if(currentP >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentP + '</td>'
				}

				if(currentWP == 76) {

					if(!ContentScript.redData.contains(i)) {
						ContentScript.redData.push(i);
					}
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWP + '</td>'
				} else if(currentWP >= 89) {
					if(!ContentScript.blueData.contains(i)) {
						ContentScript.blueData.push(i);
					}
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentWP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentWP + '</td>'
				}
				htmlListQPRight += '</tr>'
				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td></td><td></td><td></td><td></td><td></td>'
				htmlListQPRight += '<td></td>'
				if(currentW == 76) {
					if(currentWTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				if(currentP == 76) {
					if(currentPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentPTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				if(currentWP == 76) {
					if(currentWPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWPTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				htmlListQPRight += '</tr>'
			}
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);
			var postData = {};
			postData.red = ContentScript.redData;
			postData.blue = ContentScript.blueData;
			ContentScript.setSessionValue(postData);
		}, 2000);
	},
	arrayContain: function(arr, indexValue) {
		var isExists = false;
		$(arr).each(function() {
			if($(this)[0] == indexValue) {
				isExists = true;
			}
		});
		return isExists
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);

		$("#btnStart").bind("click", function() {
			$("#btnStart").hide();
			$("#btnEnd").show();

			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscount").val();
				var end = $("#endDiscount").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultFirst = ContentScript.GetTransactionData('vrtFC_2', 'FC_DATA_2', start, end);
				var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', 70, 100);
				//getQPPLData
				var htmlList = '<table class="bettable" style="width:400px">';
				htmlList += '<tr><th width="20%">马</th><th>赔率</th><th width="34%">票数$</th><th width="12%">%</th><th>位置Q%</th><th width="18%">限额</th></tr>';
				var hourseCount = [];
				var postData = ContentScript.getSessionValue();
				console.log(postData);
				console.log(resultFirst);
				$(resultFirst).each(function(index) {
					var hourseM = $(this)[0].hourse.split('-');
					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlList += '<tr style="line-height: 30px;">';

					var hourse1, hourse2
					if($(this)[0].hourse.indexOf("(") < 0) {
						hourse1 = $(this)[0].hourse.split("-")[0];
						hourse2 = $(this)[0].hourse.split("-")[1];
					} else {
						hourse1 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
						hourse2 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
					}

					console.log(hourse1);
					console.log(hourse2);

					//console.log(ContentScript.arrayContain(postData.red, parseInt(hourse1)));

					var hasHourse1 = false;
					var hasHourse2 = false;
					var hourse1String = ""; // 8EE5EE
					var hourse2String = "";
					if(postData != null && postData != undefined && postData.red != null && postData.red != undefined && postData.red.length > 0) {
						if(ContentScript.arrayContain(postData.red, parseInt(hourse1))) {
							hourse1String = "<font color='red'><b>" + hourse1 + "</b></font>"
							hasHourse1 = true;
						}
						if(ContentScript.arrayContain(postData.red, parseInt(hourse2))) {
							hourse2String = "<font color='red'><b>" + hourse2 + "</b></font>"
							hasHourse2 = true;
						}
					}
					if(postData != null && postData != undefined && postData.blue != null && postData.blue != undefined && postData.blue.length > 0) {
						if(ContentScript.arrayContain(postData.blue, parseInt(hourse1))) {
							hourse1String = "<font color='blue'><b>" + hourse1 + "</b></font>"
							hasHourse1 = true;
						}
						if(ContentScript.arrayContain(postData.blue, parseInt(hourse2))) {
							hourse2String = "<font color='blue'><b>" + hourse2 + "</b></font>"
							hasHourse2 = true;
						}
					}

					if(!hasHourse1) {
						hourse1String = "<font>" + hourse1 + "</font>"
					}

					if(!hasHourse2) {
						hourse2String = "<font>" + hourse2 + "</font>"
					}

					var wzQP="";
					if(resultSecond!=null && resultSecond!=undefined){
						try{
							$(resultSecond).each(function(index){
								var item = $(this)[0];
								if(wzQP=="" && item.hourse==("("+hourse1+"-"+hourse2+")")){
									wzQP = item.discount;
								}
							});
						}catch(ex){
							wzQP ="";
						}
					}

					htmlList += '<td>' + hourse1String + '-' + hourse2String + '</td>';
					htmlList += '<td>' + ContentScript.getQPPLData(hourse1, hourse2) + '</td>';
					htmlList += '<td>' + $(this)[0].tickets + '</td>';
					htmlList += '<td>' + $(this)[0].discount + '</td>';
					try{
						if(parseInt(wzQP)>=89){
							htmlList += '<td style="background-color:#8EE5EE;">' + wzQP + '</td>';
						}else{
							htmlList += '<td>' + wzQP + '</td>';
						}
					}catch(ex){
						htmlList += '<td>' + wzQP + '</td>';
					}
					htmlList += '<td>' + $(this)[0].limit + '</td>';
					htmlList += '</tr>';
				});

				htmlList += '</table><br/>';
				console.log(htmlList);
				$("#divCreateQLeft").empty();
				$("#divCreateQLeft").append(htmlList);

				var htmlListQRight = '<table class="bettable" style="width:150px">';
				htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQ']:checked").val() == "1") {
					hourseCount.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount).each(function(index) {
					htmlListQRight += '<tr style="line-height: 30px;">';
					htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQRight += '</tr>';
				});
				$("#divCreateQRight").empty();
				$("#divCreateQRight").append(htmlListQRight);
			}, 1000);
		});
		$("#btnEnd").bind("click", function() {
			if(ContentScript.timerSearch != null) {
				clearInterval(ContentScript.timerSearch);
			}
			$("#btnStart").show();
			$("#btnEnd").hide();
		});

		$("#btnStartQP").bind("click", function() {
			$("#btnStartQP").hide();
			$("#btnEndQP").show();

			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscountQP").val();
				var end = $("#endDiscountQP").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', start, end);

				var hourseCount1 = [];

				var htmlListQP = '<table class="bettable" style="width:400px">';
				htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
				$(resultSecond).each(function(index) {
					var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount1).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount1.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount1.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlListQP += '<tr style="line-height: 30px;">';
					htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
					htmlListQP += '<td>' + $(this)[0].discount + '</td>';
					htmlListQP += '<td>' + $(this)[0].limit + '</td>';
					htmlListQP += '</tr>';
				});
				htmlListQP += '</table>';
				$("#divCreateQPLeft").empty();
				$("#divCreateQPLeft").append(htmlListQP);

				var htmlListQPRight = '<table class="bettable" style="width:150px">';
				htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQP']:checked").val() == "1") {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount1).each(function(index) {
					htmlListQPRight += '<tr style="line-height: 30px;">';
					htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQPRight += '</tr>';
				});
				$("#divCreateQPRight").empty();
				$("#divCreateQPRight").append(htmlListQPRight);

			}, 1000);
		});
		$("#btnEndQP").bind("click", function() {
			if(ContentScript.timerSearchQP != null) {
				clearInterval(ContentScript.timerSearchQP);
			}
			$("#btnStartQP").show();
			$("#btnEndQP").hide();
		});
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if(parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if(tp.hourse == temp.hourse) {
						isNew = true;
					}
					if(tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if(!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if(parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if(result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch(e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if(result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if(parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch(e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		var limitsStart = $("#limitsStart").val();
		var limitsEnd = $("#limitsEnd").val();
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtEAT', 'EAT_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for(var i = 0; i < textList.length; i++) {
			if(textList[i] == "") {
				continue;
			}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			var item = null;
			if(tempArray[5] == limitsStart + "/0") {
				item = {
					"id": id,
					"type": "W",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == "0/" + limitsEnd) {
				item = {
					"id": id,
					"type": "P",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == limitsStart + "/" + limitsEnd) {
				item = {
					"id": id,
					"type": "WP",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}

			if(item != null) {
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(item != null && temp.hourse == tempArray[1] && temp.type == item.type) {
						isExists = true;
						if(temp.discount == parseFloat(tempArray[3])) {
							$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
							$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
						}
						return;
					}
				});
			}
			if(!isExists && item != null) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		console.log(11);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for(var i = 0; i < textList.length; i++) {
			if(textList[i] == "") {} else {
				var tempArray = textList[i].split("$");
				var paramValue = 700;
				if(tempArray[1].indexOf("(") >= 0) {
					paramValue = 400;
				}
				var id = tempArray[0] + tempArray[1] + tempArray[2];
				var hourse1, hourse2;
				if(tempArray[1].indexOf("(") < 0) {
					hourse1 = tempArray[1].split("-")[0];
					hourse2 = tempArray[1].split("-")[1];
				} else {
					hourse1 = tempArray[1].replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
					hourse2 = tempArray[1].replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
				}

				var minPL = $("#minPL").val();
				var maxPL = $("#maxPL").val();
				var currentPL = ContentScript.getQPPLData(hourse1, hourse2);
				if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
					var isExists = false;
					item = {
						"id": id,
						"type": "WQ",
						"matches": tempArray[0],
						"hourse": tempArray[1],
						"tickets": tempArray[2],
						"discount": parseFloat(tempArray[3]),
						"limit": tempArray[4]
					}
					$(result).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == tempArray[1]) {
							isExists = true;
							if(temp.discount > parseFloat(tempArray[3])) {
								$(this)[0].tickets = tempArray[2];
								$(this)[0].discount = parseFloat(tempArray[3]);
								$(this)[0].limit = tempArray[4];
							}
							return;
						}
					});
					if(!isExists) {
						if(minPL <= currentPL && currentPL <= maxPL) {
							result.push(item);
						}
					}
				}
				if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
					fliterHourse.push(tempArray[1]);
				}
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><input id="minPL" type="number" step="1" style="width: 40px;" size="4" value="0" />-<input id="maxPL" type="number" step="1" style="width: 40px;" size="4" value="70" /></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计 &nbsp;<input type="checkbox" id="chkQ" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 680px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q统计 &nbsp;<input type="checkbox" id="chkQP" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if(_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}
var host = window.location.href;
if(host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if(host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}        
    ]]>       
    </JSCode>
  </JSFile>
   <JSFile>
    <version>V229</version>
    <JSCode>
	<![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if(!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for(var i = 0; i < this.length; i++) {
			if(this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while(i--) {
		if(this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	DaoQiTime: "YYYY-MM-DD",
	WPFirstData: [],
	WPFirstPL: [],
	blueData: [],
	redData: [],
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for(i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if(typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if(url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	getWPDiscount: function(data, type, hourse, isticket) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse) {
				if(isticket) {
					if(type == "P") {
						result = temp.ticketsp;
						return false
					}
					result = temp.ticketsw;
					return false
				} else {
					result = temp.discount;
					return false
				}
			}
		});
		return result;
	},
	getWPTicketCount: function(data, type, hourse,discount,limit) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse
				&& temp.discount == discount 
				&& temp.limit == (limit+"/0") ) {
				result += temp.ticketsw;
			}
		});
		console.log("type "+type+"hourse "+ hourse+"discount "+ discount+"limit "+ limit+"result "+ result);
		return result;
	},
	setSessionValue: function(val) {
		var signInfo = ContentScript.GetSignInInfo();
		var itemName = "b" + signInfo.RaceType + signInfo.RaceDate.replace("-", "").replace("-", "");
		localStorage.setItem(itemName, JSON.stringify(val));
	},
	getSessionValue: function() {
		var signInfo = ContentScript.GetSignInInfo();
		var itemName = "b" + signInfo.RaceType + signInfo.RaceDate.replace("-", "").replace("-", "");
		return $.parseJSON(localStorage.getItem(itemName));
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 1060px; height: 1400px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 900px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span>';
		htmlList += '<input id="limitsStart" type="number" step="1" style="width: 40px;" size="4" value="300" />-';
		htmlList += '<input id="limitsEnd" type="number" step="1" style="width: 40px;" size="4" value="100" /><input type="button" id="btnChange" text="切换" value="切换"></h3>';
		htmlList += '<div id="divCreate"></div>'
        htmlList += '</div>';
        htmlList += '<div id="dragW" style="background:white;width: 660px; height: 680px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
        htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">W统计 &nbsp;<input id="DiscountW" type="number" step="1" style="width: 40px;" size="4" value="90" />\
                     <input id="Limit" type="number" step="10" style="width: 40px;" size="4" value="300" /></h3>';
		htmlList += '<div id="divCreateW"></div>' 
        htmlList += '</div>';
        
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragW"));
		ContentScript.WPFirstData = ContentScript.GetWinTransData();
		ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
		console.log("111");

		$("#btnChange").bind("click", function() {
			if($("#limitsStart").val() == "240") {
				$("#limitsStart").val("300");
				$("#limitsEnd").val("100");
			} else {
				$("#limitsStart").val("240");
				$("#limitsEnd").val("60");
			}
		});

		self.setInterval(function() {
			var hourseCount1 = ContentScript.GetWinTransData();
			if(hourseCount1.length == 0) {
				return;
			}
			var currentPLData = ContentScript.getWPPLDataList();
			var currentWPData = hourseCount1;
			if(ContentScript.WPFirstData.length == 0) {
				ContentScript.WPFirstData = ContentScript.GetWinTransData();
			}
			//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
			var htmlListQPRight = '<table class="bettable" style="width:840px">';
			htmlListQPRight += '<tr style="height:24px"><th style="width:50px">马</th><th style="width:80px">&nbsp;&nbsp;</th><th style="width:80px">早盘赔率</th><th style="width:80px">即时赔率</th><th style="width:80px">早盘WP</th><th style="width:40px">&nbsp;&nbsp;</th><th>W</th><th>P</th><th>WP</th>';
			ContentScript.redData = [];
			ContentScript.blueData = [];
			for(var i = 1; i < 15; i++) {
				var firstPeiLv = ContentScript.getWPPLByHourse(ContentScript.WPFirstPL, i);
				var currentPeiLv = ContentScript.getWPPLByHourse(currentPLData, i);
				var firstWPDiscount = ContentScript.getWPDiscount(ContentScript.WPFirstData, "WP", i, false);
				//var currentWPData = ContentScript.GetWinTransData();
				var currentW = ContentScript.getWPDiscount(currentWPData, "W", i, false);
				var currentP = ContentScript.getWPDiscount(currentWPData, "P", i, false);
				var currentWP = ContentScript.getWPDiscount(currentWPData, "WP", i, false);
				var currentWTicket = ContentScript.getWPDiscount(currentWPData, "W", i, true);
				var currentPTicket = ContentScript.getWPDiscount(currentWPData, "P", i, true);
				var currentWPTicket = ContentScript.getWPDiscount(currentWPData, "WP", i, true);

				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td><b>' + i + '</b></td>'
				htmlListQPRight += '<td>赔率</td>'
				if(firstPeiLv == 0 && i == 1) {
					ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
					firstPeiLv = currentPeiLv;
				}
				htmlListQPRight += '<td>' + firstPeiLv + '</td>'

				if(firstPeiLv < currentPeiLv) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentPeiLv + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentPeiLv + '</td>'
				}

				if(firstWPDiscount == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + firstWPDiscount + '</td>'
				} else if(firstWPDiscount >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + firstWPDiscount + '</td>'
				} else {
					htmlListQPRight += '<td>' + firstWPDiscount + '</td>'
				}

				htmlListQPRight += '<td><b>' + i + '</b></td>'
				if(currentW == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentW + '</td>'
				} else if(currentW >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentW + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentW + '</td>'
				}

				if(currentP == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentP + '</td>'
				} else if(currentP >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentP + '</td>'
				}

				if(currentWP == 76) {

					if(!ContentScript.redData.contains(i)) {
						ContentScript.redData.push(i);
					}
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWP + '</td>'
				} else if(currentWP >= 89) {
					if(!ContentScript.blueData.contains(i)) {
						ContentScript.blueData.push(i);
					}
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentWP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentWP + '</td>'
				}
				htmlListQPRight += '</tr>'
				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td></td><td></td><td></td><td></td><td></td>'
				htmlListQPRight += '<td></td>'
				if(currentW == 76) {
					if(currentWTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				if(currentP == 76) {
					if(currentPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentPTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				if(currentWP == 76) {
					if(currentWPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWPTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				htmlListQPRight += '</tr>'
			}
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);
			var postData = {};
			postData.red = ContentScript.redData;
			postData.blue = ContentScript.blueData;
			ContentScript.setSessionValue(postData);
		}, 2000);

		self.setInterval(function() {
			var DiscountW = $("#DiscountW").val();
			var Limit = $("#Limit").val();
			
			var hourseCount = ContentScript.GetWinTransData();
			if(hourseCount.length == 0) {
				return;
			}

			var htmlListW = '<table class="bettable" style="width:400px">';
			htmlListW += '<tr style="height:24px"><th style="width:200px">马</th><th style="width:180px">票数</th></tr>';
			var ticketList=[];
			for(var i = 1; i < 15; i++) {
				var ticket = ContentScript.getWPTicketCount(hourseCount, "W", i,DiscountW,Limit);
				ticketList.push({"hourse":i,"ticket":ticket})
			}

			console.log(hourseCount);
			console.log(ticketList);

			ticketList.sort( function(a, b){   
				return parseInt(a["ticket" ]) < parseInt(b["ticket" ]) ? 1 : parseInt(a[ "ticket"]) == parseInt(b[ "ticket" ]) ? 0 : -1;   
			});

			$(ticketList).each(function(item){
				var temp = $(this)[0];
				htmlListW += '<tr style="height:24px">'
				htmlListW += '<td style="height:24px">'+temp.hourse+'</td>';
				htmlListW += '<td style="height:24px">'+temp.ticket+'</td></tr>';
			});
			htmlListW+="</table>";
			$("#divCreateW").empty();
			$("#divCreateW").append(htmlListW);
		},2000);
	},
	arrayContain: function(arr, indexValue) {
		var isExists = false;
		$(arr).each(function() {
			if($(this)[0] == indexValue) {
				isExists = true;
			}
		});
		return isExists
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);

		$("#btnStart").bind("click", function() {
			$("#btnStart").hide();
			$("#btnEnd").show();

			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscount").val();
				var end = $("#endDiscount").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultFirst = ContentScript.GetTransactionData('vrtFC_2', 'FC_DATA_2', start, end);
				var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', 70, 100);
				//getQPPLData
				var htmlList = '<table class="bettable" style="width:400px">';
				htmlList += '<tr><th width="20%">马</th><th>赔率</th><th width="34%">票数$</th><th width="12%">%</th><th>位置Q%</th><th width="18%">限额</th></tr>';
				var hourseCount = [];
				var postData = ContentScript.getSessionValue();
				console.log(postData);
				console.log(resultFirst);
				$(resultFirst).each(function(index) {
					var hourseM = $(this)[0].hourse.split('-');
					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlList += '<tr style="line-height: 30px;">';

					var hourse1, hourse2
					if($(this)[0].hourse.indexOf("(") < 0) {
						hourse1 = $(this)[0].hourse.split("-")[0];
						hourse2 = $(this)[0].hourse.split("-")[1];
					} else {
						hourse1 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
						hourse2 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
					}

					console.log(hourse1);
					console.log(hourse2);

					//console.log(ContentScript.arrayContain(postData.red, parseInt(hourse1)));

					var hasHourse1 = false;
					var hasHourse2 = false;
					var hourse1String = ""; // 8EE5EE
					var hourse2String = "";
					if(postData != null && postData != undefined && postData.red != null && postData.red != undefined && postData.red.length > 0) {
						if(ContentScript.arrayContain(postData.red, parseInt(hourse1))) {
							hourse1String = "<font color='red'><b>" + hourse1 + "</b></font>"
							hasHourse1 = true;
						}
						if(ContentScript.arrayContain(postData.red, parseInt(hourse2))) {
							hourse2String = "<font color='red'><b>" + hourse2 + "</b></font>"
							hasHourse2 = true;
						}
					}
					if(postData != null && postData != undefined && postData.blue != null && postData.blue != undefined && postData.blue.length > 0) {
						if(ContentScript.arrayContain(postData.blue, parseInt(hourse1))) {
							hourse1String = "<font color='blue'><b>" + hourse1 + "</b></font>"
							hasHourse1 = true;
						}
						if(ContentScript.arrayContain(postData.blue, parseInt(hourse2))) {
							hourse2String = "<font color='blue'><b>" + hourse2 + "</b></font>"
							hasHourse2 = true;
						}
					}

					if(!hasHourse1) {
						hourse1String = "<font>" + hourse1 + "</font>"
					}

					if(!hasHourse2) {
						hourse2String = "<font>" + hourse2 + "</font>"
					}

					var wzQP="";
					if(resultSecond!=null && resultSecond!=undefined){
						try{
							$(resultSecond).each(function(index){
								var item = $(this)[0];
								if(wzQP=="" && item.hourse==("("+hourse1+"-"+hourse2+")")){
									wzQP = item.discount;
								}
							});
						}catch(ex){
							wzQP ="";
						}
					}

					htmlList += '<td>' + hourse1String + '-' + hourse2String + '</td>';
					htmlList += '<td>' + ContentScript.getQPPLData(hourse1, hourse2) + '</td>';
					htmlList += '<td>' + $(this)[0].tickets + '</td>';
					htmlList += '<td>' + $(this)[0].discount + '</td>';
					try{
						if(parseInt(wzQP)>=89){
							htmlList += '<td style="background-color:#8EE5EE;">' + wzQP + '</td>';
						}else{
							htmlList += '<td>' + wzQP + '</td>';
						}
					}catch(ex){
						htmlList += '<td>' + wzQP + '</td>';
					}
					htmlList += '<td>' + $(this)[0].limit + '</td>';
					htmlList += '</tr>';
				});

				htmlList += '</table><br/>';
				console.log(htmlList);
				$("#divCreateQLeft").empty();
				$("#divCreateQLeft").append(htmlList);

				var htmlListQRight = '<table class="bettable" style="width:150px">';
				htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQ']:checked").val() == "1") {
					hourseCount.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount).each(function(index) {
					htmlListQRight += '<tr style="line-height: 30px;">';
					htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQRight += '</tr>';
				});
				$("#divCreateQRight").empty();
				$("#divCreateQRight").append(htmlListQRight);
			}, 1000);
		});
		$("#btnEnd").bind("click", function() {
			if(ContentScript.timerSearch != null) {
				clearInterval(ContentScript.timerSearch);
			}
			$("#btnStart").show();
			$("#btnEnd").hide();
		});

		$("#btnStartQP").bind("click", function() {
			$("#btnStartQP").hide();
			$("#btnEndQP").show();

			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscountQP").val();
				var end = $("#endDiscountQP").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', start, end);

				var hourseCount1 = [];

				var htmlListQP = '<table class="bettable" style="width:400px">';
				htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
				$(resultSecond).each(function(index) {
					var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount1).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount1.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount1.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlListQP += '<tr style="line-height: 30px;">';
					htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
					htmlListQP += '<td>' + $(this)[0].discount + '</td>';
					htmlListQP += '<td>' + $(this)[0].limit + '</td>';
					htmlListQP += '</tr>';
				});
				htmlListQP += '</table>';
				$("#divCreateQPLeft").empty();
				$("#divCreateQPLeft").append(htmlListQP);

				var htmlListQPRight = '<table class="bettable" style="width:150px">';
				htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQP']:checked").val() == "1") {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount1).each(function(index) {
					htmlListQPRight += '<tr style="line-height: 30px;">';
					htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQPRight += '</tr>';
				});
				$("#divCreateQPRight").empty();
				$("#divCreateQPRight").append(htmlListQPRight);

			}, 1000);
		});
		$("#btnEndQP").bind("click", function() {
			if(ContentScript.timerSearchQP != null) {
				clearInterval(ContentScript.timerSearchQP);
			}
			$("#btnStartQP").show();
			$("#btnEndQP").hide();
		});
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if(parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if(tp.hourse == temp.hourse) {
						isNew = true;
					}
					if(tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if(!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if(parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if(result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch(e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if(result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if(parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch(e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		var limitsStart = $("#limitsStart").val();
		var limitsEnd = $("#limitsEnd").val();
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtEAT', 'EAT_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for(var i = 0; i < textList.length; i++) {
			if(textList[i] == "") {
				continue;
			}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			var item = null;
			if(tempArray[5] == limitsStart + "/0") {
				item = {
					"id": id,
					"type": "W",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == "0/" + limitsEnd) {
				item = {
					"id": id,
					"type": "P",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == limitsStart + "/" + limitsEnd) {
				item = {
					"id": id,
					"type": "WP",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}

			if(item != null) {
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(item != null && temp.hourse == tempArray[1] && temp.type == item.type) {
						isExists = true;
						if(temp.discount == parseFloat(tempArray[3])) {
							$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
							$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
						}
						return;
					}
				});
			}
			if(!isExists && item != null) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		console.log(11);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for(var i = 0; i < textList.length; i++) {
			if(textList[i] == "") {} else {
				var tempArray = textList[i].split("$");
				var paramValue = 700;
				if(tempArray[1].indexOf("(") >= 0) {
					paramValue = 400;
				}
				var id = tempArray[0] + tempArray[1] + tempArray[2];
				var hourse1, hourse2;
				if(tempArray[1].indexOf("(") < 0) {
					hourse1 = tempArray[1].split("-")[0];
					hourse2 = tempArray[1].split("-")[1];
				} else {
					hourse1 = tempArray[1].replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
					hourse2 = tempArray[1].replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
				}

				var minPL = $("#minPL").val();
				var maxPL = $("#maxPL").val();
				var currentPL = ContentScript.getQPPLData(hourse1, hourse2);
				if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
					var isExists = false;
					item = {
						"id": id,
						"type": "WQ",
						"matches": tempArray[0],
						"hourse": tempArray[1],
						"tickets": tempArray[2],
						"discount": parseFloat(tempArray[3]),
						"limit": tempArray[4]
					}
					$(result).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == tempArray[1]) {
							isExists = true;
							if(temp.discount > parseFloat(tempArray[3])) {
								$(this)[0].tickets = tempArray[2];
								$(this)[0].discount = parseFloat(tempArray[3]);
								$(this)[0].limit = tempArray[4];
							}
							return;
						}
					});
					if(!isExists) {
						if(minPL <= currentPL && currentPL <= maxPL) {
							result.push(item);
						}
					}
				}
				if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
					fliterHourse.push(tempArray[1]);
				}
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><input id="minPL" type="number" step="1" style="width: 40px;" size="4" value="0" />-<input id="maxPL" type="number" step="1" style="width: 40px;" size="4" value="70" /></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计 &nbsp;<input type="checkbox" id="chkQ" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 680px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q统计 &nbsp;<input type="checkbox" id="chkQP" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if(_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}
var host = window.location.href;
if(host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if(host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}
   ]]> 
	</JSCode>
  </JSFile>
  <JSFile>
	<version>V230</version>
    <JSCode>
      <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if(!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for(var i = 0; i < this.length; i++) {
			if(this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while(i--) {
		if(this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	DaoQiTime: "YYYY-MM-DD",
	WPFirstData: [],
	WPFirstPL: [],
	blueData: [],
    redData: [],
    WData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    WPData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for(i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if(typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if(url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	getWPDiscount: function(data, type, hourse, isticket) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse) {
				if(isticket) {
					if(type == "P") {
						result = temp.ticketsp;
						return false
					}
					result = temp.ticketsw;
					return false
				} else {
					result = temp.discount;
					return false
				}
			}
		});
		return result;
	},
	setSessionValue: function(val) {
		var signInfo = ContentScript.GetSignInInfo();
		var itemName = "b" + signInfo.RaceType + signInfo.RaceDate.replace("-", "").replace("-", "");
		localStorage.setItem(itemName, JSON.stringify(val));
	},
	getSessionValue: function() {
		var signInfo = ContentScript.GetSignInInfo();
		var itemName = "b" + signInfo.RaceType + signInfo.RaceDate.replace("-", "").replace("-", "");
		return $.parseJSON(localStorage.getItem(itemName));
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 1060px; height: 1400px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 900px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span>';
		htmlList += '<input id="limitsStart" type="number" step="1" style="width: 40px;" size="4" value="240" />-';
		htmlList += '<input id="limitsEnd" type="number" step="1" style="width: 40px;" size="4" value="60" /><input type="button" id="btnChange" text="切换" value="切换"></h3>';
		htmlList += '<div id="divCreate"></div>'
		htmlList += '</div>';
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.WPFirstData = ContentScript.GetWinTransData();
		ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
		console.log("111");

		$("#btnChange").bind("click", function() {
			if($("#limitsStart").val() == "240") {
				$("#limitsStart").val("300");
				$("#limitsEnd").val("100");
			} else {
				$("#limitsStart").val("240");
				$("#limitsEnd").val("60");
			}
		});

		self.setInterval(function() {
			var hourseCount1 = ContentScript.GetWinTransData();
			if(hourseCount1.length == 0) {
				return;
			}
			var currentPLData = ContentScript.getWPPLDataList();
			var currentWPData = hourseCount1;
			if(ContentScript.WPFirstData.length == 0) {
				ContentScript.WPFirstData = ContentScript.GetWinTransData();
			}
			//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
			var htmlListQPRight = '<table class="bettable" style="width:840px">';
			htmlListQPRight += '<tr style="height:24px"><th style="width:50px">马</th><th style="width:80px">&nbsp;&nbsp;</th><th style="width:80px">早盘赔率</th><th style="width:80px">即时赔率</th><th style="width:80px">早盘WP</th><th style="width:40px">&nbsp;&nbsp;</th><th>W</th><th>P</th><th>WP</th>';
			ContentScript.redData = [];
			ContentScript.blueData = [];
			for(var i = 1; i < 15; i++) {
				var firstPeiLv = ContentScript.getWPPLByHourse(ContentScript.WPFirstPL, i);
				var currentPeiLv = ContentScript.getWPPLByHourse(currentPLData, i);
				var firstWPDiscount = ContentScript.getWPDiscount(ContentScript.WPFirstData, "WP", i, false);
				//var currentWPData = ContentScript.GetWinTransData();
				var currentW = ContentScript.getWPDiscount(currentWPData, "W", i, false);
				var currentP = ContentScript.getWPDiscount(currentWPData, "P", i, false);
				var currentWP = ContentScript.getWPDiscount(currentWPData, "WP", i, false);
				var currentWTicket = ContentScript.getWPDiscount(currentWPData, "W", i, true);
				var currentPTicket = ContentScript.getWPDiscount(currentWPData, "P", i, true);
				var currentWPTicket = ContentScript.getWPDiscount(currentWPData, "WP", i, true);
                ContentScript.WData[i] = currentW;
                ContentScript.WPData[i] = currentWP;
				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td><b>' + i + '</b></td>'
				htmlListQPRight += '<td>赔率</td>'
				if(firstPeiLv == 0 && i == 1) {
					ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
					firstPeiLv = currentPeiLv;
				}
				htmlListQPRight += '<td>' + firstPeiLv + '</td>'

				if(firstPeiLv < currentPeiLv) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentPeiLv + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentPeiLv + '</td>'
				}

				if(firstWPDiscount == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + firstWPDiscount + '</td>'
				} else if(firstWPDiscount >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + firstWPDiscount + '</td>'
				} else {
					htmlListQPRight += '<td>' + firstWPDiscount + '</td>'
				}

				htmlListQPRight += '<td><b>' + i + '</b></td>'
				if(currentW == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentW + '</td>'
				} else if(currentW >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentW + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentW + '</td>'
				}

				if(currentP == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentP + '</td>'
				} else if(currentP >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentP + '</td>'
				}

				if(currentWP == 76) {

					if(!ContentScript.redData.contains(i)) {
						ContentScript.redData.push(i);
					}
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWP + '</td>'
				} else if(currentWP >= 89) {
					if(!ContentScript.blueData.contains(i)) {
						ContentScript.blueData.push(i);
					}
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentWP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentWP + '</td>'
				}
				htmlListQPRight += '</tr>'
				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td></td><td></td><td></td><td></td><td></td>'
				htmlListQPRight += '<td></td>'
				if(currentW == 76) {
					if(currentWTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				if(currentP == 76) {
					if(currentPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentPTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				if(currentWP == 76) {
					if(currentWPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWPTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				htmlListQPRight += '</tr>'
			}
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);
			var postData = {};
			postData.red = ContentScript.redData;
            postData.blue = ContentScript.blueData;
            postData.wp = ContentScript.WPData;
            postData.w = ContentScript.WData;
			ContentScript.setSessionValue(postData);
		}, 2000);
	},
	arrayContain: function(arr, indexValue) {
		var isExists = false;
		$(arr).each(function() {
			if($(this)[0] == indexValue) {
				isExists = true;
			}
		});
		return isExists
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		$("#daoqitime").text(ContentScript.DaoQiTime);

		$("#btnStart").bind("click", function() {
			$("#btnStart").hide();
			$("#btnEnd").show();

			ContentScript.timerSearch = self.setInterval(function() {
                var selQ =  $("#selQ").val();
                var selQStart =  $("#selQStart").val();

				var start = $("#startDiscount").val();
				var end = $("#endDiscount").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultFirst = ContentScript.GetTransactionData('vrtFC_2', 'FC_DATA_2', start, end);
				var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', 70, 100);
				//getQPPLData
				var htmlList = '<table class="bettable" style="width:400px">';
				htmlList += '<tr><th width="20%">马</th><th>赔率</th><th width="34%">票数$</th><th width="12%">%</th><th>位置Q%</th><th width="18%">限额</th></tr>';
				var hourseCount = [];
				var postData = ContentScript.getSessionValue();
				console.log(postData);
				console.log(resultFirst);
				$(resultFirst).each(function(index) {
					var hourseM = $(this)[0].hourse.split('-');
					var isExists1 = false;
					var isExists2 = false;
                    var hourse1, hourse2
					if($(this)[0].hourse.indexOf("(") < 0) {
						hourse1 = $(this)[0].hourse.split("-")[0];
						hourse2 = $(this)[0].hourse.split("-")[1];
					} else {
						hourse1 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
						hourse2 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
					}
                    if(selQ=="W"&&(postData.w[hourse1]<selQStart||postData.w[hourse2]<selQStart)){
                        return;
                    }
                    if(selQ=="WP"&&(postData.wp[hourse1]<selQStart||postData.wp[hourse2]<selQStart)){
                        return;
                    }
					console.log(hourse1);
                    console.log(hourse2);
                    
					$(hourseCount).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlList += '<tr style="line-height: 30px;">';

					

					//console.log(ContentScript.arrayContain(postData.red, parseInt(hourse1)));

					var hasHourse1 = false;
					var hasHourse2 = false;
					var hourse1String = ""; // 8EE5EE
					var hourse2String = "";
					if(postData != null && postData != undefined && postData.red != null && postData.red != undefined && postData.red.length > 0) {
						if(ContentScript.arrayContain(postData.red, parseInt(hourse1))) {
							hourse1String = "<font color='red'><b>" + hourse1 + "</b></font>"
							hasHourse1 = true;
						}
						if(ContentScript.arrayContain(postData.red, parseInt(hourse2))) {
							hourse2String = "<font color='red'><b>" + hourse2 + "</b></font>"
							hasHourse2 = true;
						}
					}
					if(postData != null && postData != undefined && postData.blue != null && postData.blue != undefined && postData.blue.length > 0) {
						if(ContentScript.arrayContain(postData.blue, parseInt(hourse1))) {
							hourse1String = "<font color='blue'><b>" + hourse1 + "</b></font>"
							hasHourse1 = true;
						}
						if(ContentScript.arrayContain(postData.blue, parseInt(hourse2))) {
							hourse2String = "<font color='blue'><b>" + hourse2 + "</b></font>"
							hasHourse2 = true;
						}
					}

					if(!hasHourse1) {
						hourse1String = "<font>" + hourse1 + "</font>"
					}

					if(!hasHourse2) {
						hourse2String = "<font>" + hourse2 + "</font>"
					}

					var wzQP="";
					if(resultSecond!=null && resultSecond!=undefined){
						try{
							$(resultSecond).each(function(index){
								var item = $(this)[0];
								if(wzQP=="" && item.hourse==("("+hourse1+"-"+hourse2+")")){
									wzQP = item.discount;
								}
							});
						}catch(ex){
							wzQP ="";
						}
					}

					htmlList += '<td>' + hourse1String + '-' + hourse2String + '</td>';
					htmlList += '<td>' + ContentScript.getQPPLData(hourse1, hourse2) + '</td>';
					htmlList += '<td>' + $(this)[0].tickets + '</td>';
					htmlList += '<td>' + $(this)[0].discount + '</td>';
					try{
						if(parseInt(wzQP)>=89){
							htmlList += '<td style="background-color:#8EE5EE;">' + wzQP + '</td>';
						}else{
							htmlList += '<td>' + wzQP + '</td>';
						}
					}catch(ex){
						htmlList += '<td>' + wzQP + '</td>';
					}
					htmlList += '<td>' + $(this)[0].limit + '</td>';
					htmlList += '</tr>';
				});

				htmlList += '</table><br/>';
				console.log(htmlList);
				$("#divCreateQLeft").empty();
				$("#divCreateQLeft").append(htmlList);

				var htmlListQRight = '<table class="bettable" style="width:150px">';
				htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQ']:checked").val() == "1") {
					hourseCount.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount).each(function(index) {
					htmlListQRight += '<tr style="line-height: 30px;">';
					htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQRight += '</tr>';
				});
				$("#divCreateQRight").empty();
				$("#divCreateQRight").append(htmlListQRight);
			}, 1000);
		});
		$("#btnEnd").bind("click", function() {
			if(ContentScript.timerSearch != null) {
				clearInterval(ContentScript.timerSearch);
			}
			$("#btnStart").show();
			$("#btnEnd").hide();
		});
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if(parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if(tp.hourse == temp.hourse) {
						isNew = true;
					}
					if(tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if(!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if(parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if(result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch(e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if(result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if(parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch(e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		var limitsStart = $("#limitsStart").val();
		var limitsEnd = $("#limitsEnd").val();
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtEAT', 'EAT_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for(var i = 0; i < textList.length; i++) {
			if(textList[i] == "") {
				continue;
			}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			var item = null;
			if(tempArray[5] == limitsStart + "/0") {
				item = {
					"id": id,
					"type": "W",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == "0/" + limitsEnd) {
				item = {
					"id": id,
					"type": "P",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == limitsStart + "/" + limitsEnd) {
				item = {
					"id": id,
					"type": "WP",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}

			if(item != null) {
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(item != null && temp.hourse == tempArray[1] && temp.type == item.type) {
						isExists = true;
						if(temp.discount == parseFloat(tempArray[3])) {
							$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
							$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
						}
						return;
					}
				});
			}
			if(!isExists && item != null) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		console.log(11);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for(var i = 0; i < textList.length; i++) {
			if(textList[i] == "") {} else {
				var tempArray = textList[i].split("$");
				var paramValue = 700;
				if(tempArray[1].indexOf("(") >= 0) {
					paramValue = 400;
				}
				var id = tempArray[0] + tempArray[1] + tempArray[2];
				var hourse1, hourse2;
				if(tempArray[1].indexOf("(") < 0) {
					hourse1 = tempArray[1].split("-")[0];
					hourse2 = tempArray[1].split("-")[1];
				} else {
					hourse1 = tempArray[1].replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
					hourse2 = tempArray[1].replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
				}

				var minPL = $("#minPL").val();
				var maxPL = $("#maxPL").val();
				var currentPL = ContentScript.getQPPLData(hourse1, hourse2);
				if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
					var isExists = false;
					item = {
						"id": id,
						"type": "WQ",
						"matches": tempArray[0],
						"hourse": tempArray[1],
						"tickets": tempArray[2],
						"discount": parseFloat(tempArray[3]),
						"limit": tempArray[4]
					}
					$(result).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == tempArray[1]) {
							isExists = true;
							if(temp.discount > parseFloat(tempArray[3])) {
								$(this)[0].tickets = tempArray[2];
								$(this)[0].discount = parseFloat(tempArray[3]);
								$(this)[0].limit = tempArray[4];
							}
							return;
						}
					});
					if(!isExists) {
						if(minPL <= currentPL && currentPL <= maxPL) {
							result.push(item);
						}
					}
				}
				if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
					fliterHourse.push(tempArray[1]);
				}
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><input id="minPL" type="number" step="1" style="width: 40px;" size="4" value="0" />-<input id="maxPL" type="number" step="1" style="width: 40px;" size="4" value="70" /></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div></div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
        htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计 &nbsp;<input type="checkbox" id="chkQ" value="1" />按马次排序';
        htmlList += '&nbsp;<select id="selQ"><option>W</option><option>WP</option><select>&nbsp;<input id="selQStart" type="number" step="1" style="width: 40px;" size="4" value="85" />起</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if(_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}
var host = window.location.href;
if(host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if(host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}
	   ]]> 
	</JSCode>
  </JSFile>
  <JSFile>
    <version>V766</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if (!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while (i--) {
		if (this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	handerTicketList:['日','60分','30分'],
	handerJSList:['日','60分','30分'],
	handerPLHeadList:['日','60分','15分'],
	handerPLFooterList:['10%','25%'],
	orderResultList:[],
	urlX: "http://"+window.location.host,
	handerPLDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerPLData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	has30PL:false,
	has15PL:false,
	has7PL:false,
	has5PL:false,
	has1PL:false,
	has0PL:false,
	current30PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current15PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current7PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current5PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	current1PL:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	currentPLData:[],
	handerTicketDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerTicketData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSDataOneDay:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData60Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	handerJSData30Min:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	handerJSEndData:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	resultPL3Yellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPL1MinYellow:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultPLCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	resultJSCount:[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	
	tempJSHtml:"",
	tempTicketHtml:"",
	tempPLHtml:"",
	ChangePervChangCi:0,
	monitorTicketTimeList: [1200,900,600,420,300,180,120,60,0,-10,-20,-30,-40,-50,-60,-70,-80,-90,-100,-110,-120],
	monitorPLTimeList: [900,420,300,60],
	monitorJSTimeList:     [1200,900,600,420,300,180,120,60,0,-10,-20,-30,-40,-50,-60,-70,-80,-90,-100,-110,-120],
	monitorTicketData: [],
	monitorQPLTimeData: [],
	monitorPLTimeData: [],
	monitorJSTimeData: [],
	monitorJSQTimeData: [],
	monitorJSQPTimeData: [],
	ccEndTime: null,
	PervChangCi:0,
	getCurrentPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ( ContentScript.ccEndTime == null || (ContentScript.ccEndTime !=null && ContentScript.PervChangCi != ContentScript.getChangChi()))) {
			ContentScript.ccEndTime = new Date();
			ContentScript.PervChangCi = ContentScript.getChangChi();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null && ContentScript.PervChangCi == ContentScript.getChangChi()) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			//,0,-30,-50,-70,-90
			if(resultValue<=0 && resultValue>-360){
                if (resultValue >-10  && resultValue<=0) {
					return 0;
                }
                if (resultValue >-20  && resultValue<=-10) {
					return -10;
				}
				if (resultValue >-30  && resultValue<=-20) {
					return -20;
				}
				if (resultValue >-40  && resultValue<=-30) {
					return -30;
                }
                if (resultValue >-50  && resultValue<=-40) {
					return -40;
				}
				if (resultValue >-60  && resultValue<=-50) {
					return -50;
                }
                if (resultValue >-70  && resultValue<=-60) {
					return -60;
				}
				if (resultValue >-80  && resultValue<=-70) {
					return -70;
                }
                if (resultValue >-90  && resultValue<=-80) {
					return -80;
                }
                if (resultValue >-100  && resultValue<=-90) {
					return -90;
                }
                if (resultValue >-110  && resultValue<=-100) {
					return -100;
                }
                if (resultValue >-120  && resultValue<=-110) {
					return -110;
				}
				if (resultValue<=-120) {
					return -120;
				}
			}
			return -360;
		}
		var TIMER = parseFloat(currentTime);
		
		if (TIMER > 15 && TIMER<=20) {
			return 1200;
		}
		
		if (TIMER > 10 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 7 && TIMER<=10) {
			return 600;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 3 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER > 2 && TIMER<=3) {
			return 180;
		}
		
		if (TIMER > 1 && TIMER<=2) {
			return 120;
		}
		
		if (TIMER<=1) {
			return 60;
		}
		
		return parseFloat(currentTime) * 60;
	},
	getCurrentPLPMTime: function() {
		var currentTime = $("#txtTIMER").text();
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime == null) {
			ContentScript.ccEndTime = new Date();
		}
		if (parseFloat(currentTime) == 0 && ContentScript.ccEndTime != null) {
			var startDateTime = new Date();
			var diffTime = (ContentScript.ccEndTime.getTime() - startDateTime.getTime());
			var resultValue = parseInt(diffTime / 1000);
			
			if(resultValue<=0 && resultValue>-360){
				return 0;
			}
			return 0;
		}
		var TIMER = parseFloat(currentTime);
		if (TIMER > 7 && TIMER<=15) {
			return 900;
		}
		
		if (TIMER > 5 && TIMER<=7) {
			return 420;
		}
		
		if (TIMER > 1 && TIMER<=5) {
			return 300;
		}
		
		if (TIMER<=1) {
			return 60;
		}

		return parseFloat(currentTime) * 60;
	},
	getChangChi: function() {
		var returnVal;
		if (host.indexOf("Q.jsp") >= 0) {
			returnVal = parseInt($("#view1").val());
		} else {
			returnVal = parseInt($(".dd-selected-value").val());
		}
		return returnVal;
	},
	DaoQiTime: "YYYY-MM-DD",
	maxAndMinValueListWin: [],
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE2").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getQPLData: function(x, y) {
		try {
			var len = 0;
			if (parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if (result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch (e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if (result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for (i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if (typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if (url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	onPlayerInit: function() {

		ContentScript.CreateHtmlElementPage();

		ContentScript.timerSearchQP  = self.setInterval(function() {
			var currentPMTime = ContentScript.getCurrentPMTime();
			var currentPLTime = ContentScript.getCurrentPLPMTime();
			if(isNaN(currentPMTime)|| isNaN(currentPLTime)){
				return;
			}
			//是否是需要监控的时间
			var isTicketTime = ContentScript.monitorTicketTimeList.contains(currentPMTime)
			var isPeiLvTime = ContentScript.monitorPLTimeList.contains(currentPLTime);
			var cchi = ContentScript.getChangChi();
			var isExistTicket = false;
			var isExistPL = false;

			if(isTicketTime==false){
				isExistTicket=true;
			}else{
				if (isTicketTime &&  !isNaN(currentPMTime)) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistTicket = true;
							return;
						}
					});
				}
			}

			if(isPeiLvTime==false){
				isExistPL=true;
			}else{
				if (isPeiLvTime && !isNaN(currentPLTime)) {
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPLTime) {
							isExistPL = true;
							return;
						}
					});
				}
			}
			


			if (!isExistPL) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPLTime;
				item.Data = ContentScript.getWPPLDataList();
				ContentScript.monitorPLTimeData.push(item);
				
				if(currentPLTime>=1790 && currentPLTime<=1800 && ContentScript.has30PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current30PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has30PL =true;
				}
				if(currentPLTime>=890 && currentPLTime<=900 && ContentScript.has15PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current15PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has15PL =true;
				}
				if(currentPLTime>=410 && currentPLTime<=420 && ContentScript.has7PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current7PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has7PL =true;
				}
				if(currentPLTime>=290 && currentPLTime<=300 && ContentScript.has5PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current5PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has5PL =true;
				}
				if(currentPLTime>=50 && currentPLTime<=60 && ContentScript.has1PL==false){
					for (var i = 1; i <= 14; i++) {
						ContentScript.current1PL[i-1]= ContentScript.getWPPLByHourse(item.Data, i);
					}
					ContentScript.has1PL =true;
				}
				
			}
			if(currentPLTime<=0){
					for (var i = 1; i <= 14; i++) {
						ContentScript.currentPL[i-1]= ContentScript.getWPPLByHourse(ContentScript.getWPPLDataList(), i);
					}
					ContentScript.has0PL = true;
			}
			
			

			var hourseCount1 = ContentScript.GetWinTransData();
			if (hourseCount1.length == 0) {
				return;
			}
            console.log(222);
            
			hourseCount1.sort(function(a, b) {
				return parseInt(a["ticketsw"]) < parseInt(b["ticketsw"]) ? 1 : parseInt(a["ticketsw"]) == parseInt(b["ticketsw"]) ? 0 : -1;
			});
			if (!isExistTicket) {
				var item = {};
				item.changchi = cchi;
				item.currentPMTime = currentPMTime;
				item.Data = hourseCount1;
				ContentScript.monitorTicketData.push(item);
			}
			$(hourseCount1).each(function(index) {
				var temp = $(this)[0];
				var minValue = 0;
				var maxValue = 0;
				var isExistsItem = false;
				$(ContentScript.maxAndMinValueListWin).each(function(index) {
					if (temp.hourse == $(this)[0].hourse) {
						isExistsItem = true;
						if ($(this)[0].Max < temp.ticketsw) {
							$(this)[0].Max = temp.ticketsw;
						}
						if ($(this)[0].Min > temp.ticketsw) {
							$(this)[0].Min = temp.ticketsw;
						}
						minValue = $(this)[0].Min;
						maxValue = $(this)[0].Max;
					}
				});
				if (!isExistsItem) {
					ContentScript.maxAndMinValueListWin.push({
						"hourse": $(this)[0].hourse,
						"Min": $(this)[0].ticketsw,
						"Max": $(this)[0].ticketsw
					})
				}
			});
			
			
				var htmlTicket = '<table id="HKTicket" class="gridtable" style="width:900px">';
				htmlTicket += '<tr><th width="65px">HK票数</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">日</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketDataOneDay[i-1] + '</td>';
				}
				htmlTicket += '<td>日</td></tr>';
				
				htmlTicket +=  '<tr class="count"><td width="65px">60</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData60Min[i-1] + '</td>';
				}
				htmlTicket += '<td>60</td></tr>';
				
				htmlTicket += '<tr class="count"><td width="65px">30</td>';
				for (var i = 1; i <= 14; i++){
					htmlTicket += '<td>' + ContentScript.handerTicketData30Min[i-1] + '</td>';
				}
				htmlTicket += '<td>30</td></tr>';
				
				ContentScript.monitorTicketData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
				
				var tempTicket="";
				if (!isExistTicket) {
					$(ContentScript.monitorTicketData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempTicket += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempTicket += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempTicket += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempTicket += '<td width="50px">' + ContentScript.getTicketByHourse(temp.Data, i) + '</td>';
							}
							tempTicket += '<td></td></tr>';
						}
					});
					ContentScript.tempTicketHtml = tempTicket;
				}

				$("#divCreateTicket").empty();
				$("#divCreateTicket").append(htmlTicket+ContentScript.tempTicketHtml);
			

			
				var htmlPeiLv = '<table id="HKPL" class="gridtable" style="width:900px">';
				htmlPeiLv += '<tr><th width="65px">HK赔率</th><th width="50px">1</th><th width="50px">2</th><th width="50px">3</th><th width="50px">4</th><th width="50px">5</th><th width="50px">6</th><th width="50px">7</th><th width="50px">8</th><th width="50px">9</th><th width="50px">10</th><th width="50px">11</th><th width="50px">12</th><th width="50px">13</th><th width="50px">14</th><th></th></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">A1</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLDataOneDay[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A1</td></tr>';
				
				htmlPeiLv +=  '<tr class="count"><td width="65px">A2</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData60Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A2</td></tr>';
				
				htmlPeiLv += '<tr class="count"><td width="65px">A3</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv += '<td>' + ContentScript.handerPLData30Min[i-1] + '</td>';
				}
				htmlPeiLv += '<td>A3</td></tr>';
				
				ContentScript.monitorPLTimeData.sort(function(a, b) {
					return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
				});
                var tempPL = "";
                if (!isExistPL) {
                	var FirstTemp=[];
	                var HadChangeTime = true;
	                var LastData =ContentScript.monitorPLTimeData[ContentScript.monitorPLTimeData.length-1];
	                if(LastData!=undefined && LastData!=null){
	                	if(LastData.currentPMTime<=420){
		                	FirstTemp = LastData.Data;
		                }else{
		                	if(ContentScript.monitorPLTimeData[0].currentPMTime>420){
		                		HadChangeTime = false;
		                	}else{
		                		$(ContentScript.monitorPLTimeData).each(function(item){
		                			var temp = $(this)[0];
		                			if(temp.currentPMTime==420){
		                				FirstTemp = temp.Data;
		                				return;
		                			}
		                		});
		                	}
		                }
	                }
	                
					$(ContentScript.monitorPLTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempPL += '<tr class="count"><td width="50px">30分前</th>';
								}else{
									tempPL += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempPL += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							for (var i = 1; i <= 14; i++) {
								tempPL += '<td width="50px">' + ContentScript.getWPPLByHourse(temp.Data, i) + '</td>';
							}
							tempPL += '<td></td></tr>';
						}
					});
					ContentScript.tempPLHtml = tempPL;
				}
				
				var htmlPeiLv2="";
				htmlPeiLv2 += '<tr id="line10"><td width="65px">10%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2+='<td></td></tr>';
				
				htmlPeiLv2 += '<tr id="line25"><td width="65px">25%</td>';
				for (var i = 1; i <= 14; i++){
					htmlPeiLv2 += '<td> </td>';
				}
				htmlPeiLv2 +='<td></td></tr>';
				
				$("#divCreatePL").empty();
				$("#divCreatePL").append(htmlPeiLv+ContentScript.tempPLHtml+htmlPeiLv2);
			    
			    //var basePL = ContentScript.handerPLDataOneDay;
			    
			    var htmlPeiLv3='<table class="gridtable" style="width:900px">';
			    var hasOneDay =false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLDataOneDay[i-1]>0 && hasOneDay==false){
			    		hasOneDay = true;
			    	}
			    }
			    var has30 = false;
			    for (var i = 1; i <= 14; i++){
			    	if(ContentScript.handerPLData30Min[i-1]>0 && has30==false){
			    		has30 = true;
			    	}
			    }
			    
			    if(hasOneDay){
			    	if(has30){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">30</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.handerPLData30Min[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else {
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has15PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">15</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current15PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has7PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">7</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current7PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has5PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">5</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current5PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has1PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">1</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.current1PL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    	if(ContentScript.has0PL){
				    	htmlPeiLv3 += '<tr id="line10"><td width="65px">0</td>';
						for (var i = 1; i <= 14; i++){
							var currFloat = parseFloat((ContentScript.handerPLDataOneDay[i-1] - ContentScript.currentPL[i-1])/ContentScript.handerPLDataOneDay[i-1]).toFixed(2);
							var strFloat ="";
							if(currFloat>0){
								strFloat = '<font color="red">'+ currFloat +'</font>';
							}else{
								if(currFloat<=-0.3){
									strFloat = '<font color="blue">'+ currFloat +'</font>';
								}else
								{
									strFloat = currFloat;
								}
							}
							htmlPeiLv3 += '<td width="50px">'+ strFloat +'</td>';
						}
						
						htmlPeiLv3 +='<td></td></tr>';
						htmlPeiLv3 += '<tr id="line10"><td width="65px">0赔率</td>';
						for (var i = 1; i <= 14; i++){
							var currPL = ContentScript.currentPL[i-1];
							htmlPeiLv3 += '<td width="50px">'+ currPL +'</td>';
						}
						htmlPeiLv3+='<td></td></tr>';
				    }
			    }
				
			htmlPeiLv3+='</table>';
			$("#divCreatePL1").empty();
			$("#divCreatePL1").append(htmlPeiLv3);
			
			ContentScript.createPLColor();
			ContentScript.createTicketColor();
			ContentScript.createResultHtml();
		}, 1000);
	},
	getTicketByHourse: function(data, hourse) {
		var ticketsw = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				ticketsw = temp.ticketsw;
				return;
			}
		});
		return ticketsw;
	},
	createPLColor:function(){
		var notNeed123 = ($("#notNeed123").val()=="2");
		var data = $("#HKPL").find(".count td");
		var change10 =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var change25=  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		if(notNeed123){
			var has15Data = false;
			var plFirst = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			$(data).each(function(index){
				
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(line<=2){
					return;
				}
				
				if(item==0 && $(this).text()=="15"){
					has15Data = true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
					plFirst =pl;
				}
				
				if(has15Data && line>2 && item>=1 && item<=14 && $(data[line*16]).text()=="1"){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				
				
				if(line==3 && $(data[line*16]).text()=="15" && item>=1 && item<=14){
					var nextLine = parseFloat($(data[index+16]).text());
					var nextLine2 = parseFloat($(data[index+32]).text());
					if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
						$(this).css("background-color","orange");
						$(data[index+16]).css("background-color","orange");
						$(data[index+32]).css("background-color","orange");
						ContentScript.resultPL3Yellow[item-1]=1;
					}
				}
				
				if(line==6 && item>=1 && item<=14){
					if(plFirst[item-1]>=val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="5"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			});
		}else{
			var plFirst = ContentScript.handerPLDataOneDay;
			var has5Data=false;
			$(data).each(function(index){
				var item = index%16;
				var line = parseInt(index/16);
				var val = parseFloat($(this).text())
				
				if(item==0 && $(this).text()=="5"){
					has5Data =true;
					for(var i=1;i<=14;i++){
						pl[i-1] = parseFloat($(data[index+i]).text());	
					}
				}
				
				if(has5Data && line>0 && item>=1 && item<=14){
					if(pl[item-1]!=0 && pl[item-1]*0.9>=val && pl[item-1]*0.75<val &&val>0){
						change10[item-1]=1;
					}
					if(pl[item-1]!=0 && pl[item-1]*0.75>=val &&val>0){
						change25[item-1]=1;
					}
				}
				if(line<=2 && item>=1 && item<=14){
					if(line==0){
						var nextLine = parseFloat($(data[index+16]).text());
						var nextLine2 = parseFloat($(data[index+32]).text());
						if(plFirst[item-1]>=nextLine && plFirst[item-1]>=nextLine2 && nextLine>0 && nextLine2>0 &&nextLine>=nextLine2){
							$(this).css("background-color","orange");
							$(data[index+16]).css("background-color","orange");
							$(data[index+32]).css("background-color","orange");
							ContentScript.resultPL3Yellow[item-1]=1;
						}
					}
				}
				
				if(line>2 && item>=1 && item<=14){
					if(plFirst[item-1]>val && val>0){
						$(this).css("background-color","orange");
						if($(data[line*16]).text()=="5"){
							ContentScript.resultPL1MinYellow[item-1]=1;
						}
					}
				}
				index++;
			} );
		}
		
		$("#line10").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change10[index-1]>0){
						$(this).css("background-color","orange");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		$("#line25").find("td").each(function(index){
				if(index>=1 && index<=14){
					if(change25[index-1]>0){
						ContentScript.resultPLCount[index-1] = 1;
						$(this).css("background-color","red");
					}else{
						$(this).css("background-color","");
					}
				}
				index++;
		});
			
		for(var item=0;item<14;item++){
			//if(ContentScript.resultPL3Yellow[item]>0 && ContentScript.resultPL1MinYellow[item]>0){
			if(ContentScript.resultPL3Yellow[item]>0){
				ContentScript.resultPLCount[item]=1;
			}
		}
		
	},
	createTicketColor:function(){
		var data = $("#HKTicket").find(".count td");
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		
		var lineMax = ContentScript.getLineMaxValue(data);
		$(data).each(function(index){
			var line = parseInt(index/16);
			var item = index%16;
			var val = parseFloat($(this).text())
			if(item>=1 && item<=14){
				if(lineMax[line]<=val && val>0){
					$(this).css("background-color","orange");
				}
			}
			index++;
		});
	},
	getLineMaxValue:function(obj){
		var retVal = [];
		var line = parseInt(obj.length/16);
		for(var i=0;i<line;i++){
			var lineMax=0;
			for(var j=0;j<16;j++){
			  if(j>=1 && j<=14){
			  	  var temp = parseFloat($(obj[i*16+j]).text());
				  if(temp>lineMax){
				  	lineMax= temp;
				  }
			  }
			}
			retVal.push(lineMax);
		}
		return retVal;
	},
	createResultHtml:function(){
		var htmlJS = '<table class="gridtable" style="width:500px">';
		htmlJS += '<tr><th>马</th><th>数量</th><th>购买</th></tr>';
		var JSLimits = parseInt($("#JSLimits").val());
		var HowMuchPL= parseInt($("#HowMuchPL").val());
		var masterList=[];
		for(var item=0;item<14;item++){
			if(ContentScript.resultPLCount[item]>0 && ContentScript.resultJSCount[item]>=JSLimits){
				masterList.push(item+1);	
			}
		}
		var resultList =[];
		var jsList=[];
		var countMa =0;
		if(masterList.length>0){
			for(var i=0;i<masterList.length;i++){
				for(var j=0;j<14;j++){
					if(ContentScript.resultJSCount[j]>0){
						jsList.push(ContentScript.resultJSCount[j]);
						if(masterList[i]!=j+1){
							var item ={"id":Math.random(),"hourse1":masterList[i],"hourse2":j+1,"countJS":ContentScript.resultJSCount[j]}
							resultList.push(item);	
							countMa+=ContentScript.resultJSCount[j];
						}
					}
				}
			}
			
			resultList.sort(function(a, b) {
				return parseInt(a["countJS"]) < parseInt(b["countJS"]) ? 1 : parseInt(a["countJS"]) == parseInt(b["countJS"]) ? 0 : -1;
			});
			
			 
			$(resultList).each(function(index){
				htmlJS += '<tr><td>'+ $(this)[0].hourse1 + '-' + $(this)[0].hourse2 +'</td><td>'+ $(this)[0].countJS +'</td><td><input type="button" value="购买" class="orderOne"/><input type="hidden" class="hiddenOrderData" value="'+ $(this)[0].id +'"/></td></tr>';
			});
			
			ContentScript.orderResultList = resultList;
			
			htmlJS += '<tr><td>总计</td><td>'+ countMa +'</td><td>'+ parseInt(countMa)*parseInt(HowMuchPL) +'</td></tr>';
			
			$("#divShowResult").empty();
		    $("#divShowResult").append(htmlJS +'</table>');	
		    
		    $(".orderOne").bind("click",function(){
				$(this).hide();
				//下单即不再计算马
				clearInterval(ContentScript.timerSearch);
			    clearInterval(ContentScript.timerSearchQP);
				
				var data = $(this).parent().find(".hiddenOrderData").val();
				$(ContentScript.orderResultList).each(function(){
					if(data==$(this)[0].id){
						ContentScript.orderBetQ($(this)[0]);
					}
				});
			})
		}
	},
	createJSColor:function(){
		var data = $("#HKJS").find(".count td");
		//统计每个马的总数
		var countLine = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var countLineSort = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var min5Line =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var dengData =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var lineMax = ContentScript.getLineMaxValue(data);
		var has5Data=false;
		var has1Data=false;
		$(data).each(function(index){
			var item = index%16;
			var line = parseInt(index/16);
			if(item>=1 && item<=14){
				var val = parseFloat($(this).text())
				countLine[item-1] += val ;
				countLineSort[item-1] += val ;
				// 如果有5分钟的基数的时候
				if(has5Data){
					if(min5Line[item-1]+2 <= val){
						dengData[item-1]= val;
					}
				}
				// 如果有1分钟的基数的时候
				if(has1Data){
					if(ContentScript.resultJSCount[item-1] < val){
						ContentScript.resultJSCount[item-1]= val;
					}
				}
				
				//最大显示黄色
				if(lineMax[line]<=val && val >0){
					$(this).css("background-color","orange");
				}
			}
			if(item==0 && $(this).text()=="5"){
				has5Data =true;
				for(var i=1;i<=14;i++){
					min5Line[i-1] = parseFloat($(data[index+i]).text());	
				}
			}
			
			if(item==0 && $(this).text()=="5"){
				has1Data =true;
				for(var i=1;i<=14;i++){
					ContentScript.resultJSCount[i-1]= parseFloat($(data[index+i]).text());	
				}
			}
			
			index++;
		});
		countLineSort.sort(function(a,b){return a>b?1:-1});;
		//显示统计 并且排名前3的显示黄色背景
	    $("#countJS").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(countLine[index-1] >0 && countLineSort[11]<=countLine[index-1]){
	    			$(this).text(countLine[index-1]).css("background-color","orange")
	    		}else{
	    			$(this).text(countLine[index-1]).css("background-color","")
	    		}
	    	}
	    	index++;
	    });
		//显示灯  以5分钟为基数 超过两个的显示绿色 background-color:#00FF00;
		$("#deng").find("td").each(function(index){
	    	if(index>=1 && index<=14){
	    		if(dengData[index-1]>0){
	    			$(this).css("background-color","#00FF00")
	    		}
	    	}
	    	index++;
	  });
	},
	allOnitEvent: function() {
		ContentScript.timerSearch = self.setInterval(function() {
			var resultFirst;
			var signInfo = ContentScript.GetSignInInfo();
			var itemName = "a"+signInfo.RaceType+signInfo.RaceDate.replace("-","").replace("-","");
			if (host.indexOf("Q.jsp") >= 0) {
				resultFirst = ContentScript.GetTransactionDataByArea('vrtFC_1', 'FC_DATA_1');
				var postData = {};
	            
	            postData.race_type = signInfo.RaceType;
				postData.race_date = signInfo.RaceDate;
				postData.Data = resultFirst;
				
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					localStorage.setItem(itemName,JSON.stringify(postData));
				}else{
					localStorage.setItem(itemName,JSON.stringify(postData));
				}
			}else{
				if(localStorage.getItem(itemName)==null || localStorage.getItem(itemName) ==undefined){
					resultFirst=null;
				}else{ 
					resultFirst = $.parseJSON(localStorage.getItem(itemName)).Data;
					ContentScript.createJSHtml(resultFirst);
					ContentScript.createJSColor();
				}
			}
            
            if(resultFirst==null || resultFirst==undefined ){
            	return;
            }
			return;
		}, 1000);
	},
	createJSHtml:function(resultFirst){
			var hourseCount = [];
			resultFirst.sort(function(a, b) {
				return parseInt(a["tickets"]) < parseInt(b["tickets"]) ? 1 : parseInt(a["tickets"]) == parseInt(b["tickets"]) ? 0 : -1;
			});
			
			$(resultFirst).each(function(index) {
				if($(this)[0].hourse ==null || $(this)[0].hourse == undefined || $(this)[0].hourse.indexOf("-")<0){
					return;
				}
				var hourseM = $(this)[0].hourse.split('-');

				var isExists1 = false;
				var isExists2 = false;

				$(hourseCount).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == hourseM[0]) {
						isExists1 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
					if (temp.hourse == hourseM[1]) {
						isExists2 = true;
						$(this)[0].count = $(this)[0].count + 1;
					}
				});
				if (!isExists1) {
					hourseCount.push({
						"hourse": hourseM[0],
						"count": 1
					});
				}
				if (!isExists2) {
					hourseCount.push({
						"hourse": hourseM[1],
						"count": 1
					});
				}
			});

			hourseCount.sort(function(a, b) {
				return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
			});

			var currentPMTime = ContentScript.getCurrentPMTime();
			//是否是需要监控的时间
			var isExistsJSTime = ContentScript.monitorJSTimeList.contains(currentPMTime)
			var cchi = ContentScript.getChangChi();
			var isExistJS = false;
			
			if(isExistsJSTime==false){
				isExistJS =true;
			}else{
				if (isExistsJSTime) {
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi && temp.currentPMTime == currentPMTime) {
							isExistJS = true;
							return;
						}
					});
				}
			}
				
				if (!isExistJS) {
					var item = {};
					item.changchi = cchi;
					item.currentPMTime = currentPMTime;
					item.Data = hourseCount;
					ContentScript.monitorJSQTimeData.push(item);
					
					ContentScript.monitorJSQTimeData.sort(function(a, b) {
						return parseInt(a["currentPMTime"]) < parseInt(b["currentPMTime"]) ? 1 : parseInt(a["currentPMTime"]) == parseInt(b["currentPMTime"]) ? 0 : -1;
					});
					
					var tempHtml = "";
					$(ContentScript.monitorJSQTimeData).each(function(item) {
						var temp = $(this)[0];
						if (temp.changchi == cchi) {
							if (temp.currentPMTime >= 60) {
								if(temp.currentPMTime==2400){
									tempHtml += '<tr class="count"><td width="50px">30分前</td>';
								}else{
									tempHtml += '<tr class="count"><td width="50px">' + (temp.currentPMTime / 60) + '</td>';
								}
							} else {
								tempHtml += '<tr class="count"><td width="50px">' + temp.currentPMTime + '</td>';
							}
							
							for (var i = 1; i <= 14; i++) {
								var tempCount = ContentScript.getJSCountByHourse(temp.Data, i)
								tempHtml += '<td width="50px">' + tempCount + '</td>';
							}
							tempHtml += '<td></td></tr>';
						}
					});
					ContentScript.tempJSHtml=tempHtml;
				}
				
				var htmlJS = '<table id="HKJS" class="gridtable" style="width:900px">';
				htmlJS += '<tr><th width="65px">HK指数</th>';
				
				for (var i = 1; i <= 14; i++) {
					htmlJS += '<th width="50px">' + i + '</th>';
				}
				htmlJS += '<th></th></tr>'
				
				var HeardHtml = '<tr class="count"><td width="65px">A1</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSDataOneDay[i-1] + '</td>';
				}
				HeardHtml += '<td>A1</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">A2</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData60Min[i-1] + '</td>';
				}
				HeardHtml += '<td>A2</td></tr>';
				
				HeardHtml += '<tr class="count"><td width="65px">A3</td>';
				for (var i = 1; i <= 14; i++){
					HeardHtml += '<td>' + ContentScript.handerJSData30Min[i-1] + '</td>';
				}
				HeardHtml += '<td>A3</td></tr>';
				
				
				var htmlJSCount ="";
				htmlJSCount += '<tr id="countJS" style="background-color:#fff68f" ><td style="background-color:#fff68f">合脚</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSCount += '<td style="background-color:#fff68f"></td>';
			    }
				htmlJSCount += '<td >合脚</td></tr>';
				
				
				var htmlJSDeng ="";
				htmlJSDeng += '<tr id="deng" style="background-color:#fff68f" ><td style="background-color:#fff68f">灯</th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSDeng += '<td >  </td>';
			    }
				htmlJSDeng += '<td style="background-color:#fff68f">灯</td></tr>';
				
				var htmlJSEnd ="";
				htmlJSEnd += '<tr><td></th>';
			    for (var i = 1; i <= 14; i++){
			    	htmlJSEnd += '<td > '+ i +' </td>';
			    }
				htmlJSEnd += '<td ></td></tr>';
				
				htmlJSEnd += '<tr><td width="65px"></td>';
				for (var i = 1; i <= 14; i++){
					htmlJSEnd += '<td>' + ContentScript.handerJSEndData[i-1] + '</td>';
				}
				htmlJSEnd += '<td></td></tr>';

				$("#divCreateJS").empty();
				$("#divCreateJS").append(htmlJS + HeardHtml + ContentScript.tempJSHtml + htmlJSDeng + htmlJSCount + htmlJSEnd +'</table>');
			
	},
	getJSCountByHourse: function(data, hourse) {
		var jsCount = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if (parseInt(temp.hourse) == parseInt(hourse)) {
				jsCount = temp.count;
				return;
			}
		});
		return jsCount;
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if (tp.hourse == temp.hourse) {
						isNew = true;
					}
					if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if (!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch (e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtBET', 'BET_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var isExists = false;
            var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			item = {
				"id": id,
				"type": "W",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"ticketsw": parseInt(tempArray[2]),
				"ticketsp": "-",
				"discount": parseFloat(tempArray[4]),
				"limit": tempArray[4]
			}
			//&& parseInt(tempArray[3]) > 0 
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1] 
				    && parseInt(tempArray[2]) > 0 && tempArray[3]=="0") {
					isExists = true;
					//if (temp.discount > parseFloat(tempArray[3])) {
						$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
						//$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
					//}
					return;
				}
			});
			if (!isExists && parseInt(tempArray[2]) > 0  && tempArray[3]=="0") {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var paramValue = 700;
			if (tempArray[1].indexOf("(") >= 0) {
				paramValue = 400;
			}
			var id = tempArray[0] + tempArray[1] + tempArray[2];
			if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
				var isExists = false;
				item = {
					"id": id,
					"type": "WQ",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"tickets": tempArray[2],
					"discount": parseFloat(tempArray[3]),
					"limit": tempArray[4]
				}
				$(result).each(function(index) {
					var temp = $(this)[0];
					if (temp.hourse == tempArray[1]) {
						isExists = true;
						if (temp.discount > parseFloat(tempArray[3])) {
							$(this)[0].tickets = tempArray[2];
							$(this)[0].discount = parseFloat(tempArray[3]);
							$(this)[0].limit = tempArray[4];
						}
						return;
					}
				});
				if (!isExists) {
					result.push(item);
				}
			}
			if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
				fliterHourse.push(tempArray[1]);
			}
		}
		return result;
	},
	GetTransactionDataByArea: function(fc, data) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for (var i = 0; i < textList.length; i++) {
			if(textList[i]==""){continue;}
			var tempArray = textList[i].split("$");
			var id = tempArray[0] + tempArray[1] + tempArray[2];

			var isExists = false;
			item = {
				"id": id,
				"type": "W",
				"matches": tempArray[0],
				"hourse": tempArray[1],
				"tickets": parseFloat(tempArray[2]),
				"discount": parseFloat(tempArray[3]),
				"limit": tempArray[4]
			}
			$(result).each(function(index) {
				var temp = $(this)[0];
				if (temp.hourse == tempArray[1]) {
					isExists = true;
					$(this)[0].tickets = parseInt($(this)[0].tickets) + parseInt(tempArray[2]);
					return;
				}
			});
			if (!isExists) {
				result.push(item);
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q下注统计</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragJSQ" style="background:white;width: 860px; height: 480px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q脚数统计  &nbsp;&nbsp;&nbsp;&nbsp;<select id="jsRedColor"><option>2</option><option>3</option><option selected="selected">4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option></select></h3>';
		htmlList += '<div id="divCreateJSQ" style="float: left;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},
	CreateHtmlElementPage:function(){
		var htmlList  = '<style type="text/css">'
			htmlList += 'table.gridtable {'
			htmlList += '	font-family: verdana,arial,sans-serif;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	color:#333333;'
			htmlList += '	text-align: center;'
			htmlList += '	border-width: 1px;'
			htmlList += '	border-color: #666666;'
			htmlList += '	border-collapse: collapse;'
			htmlList += '}'
			htmlList += 'table.gridtable th {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #dedede;'
			htmlList += '}'
			htmlList += 'table.gridtable td {'
			htmlList += '	border-width: 1px;'
			htmlList += '	padding: 1px;'
			htmlList += '	height:15px!important;'
			htmlList += '	font-size:12px!important;'
			htmlList += '	border-style: solid;'
			htmlList += '	text-align: center;'
			htmlList += '	border-color: #666666;'
			htmlList += '	background-color: #ffffff;'
			htmlList += '}'
			htmlList += '</style>';
		htmlList += '<div id="dragTable" style="background:white;width: 900px; height: 800px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 800px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">新版统计相关报表软件 &nbsp;&nbsp;<select width="80px" id="notNeed123">'
		htmlList += '<option value="1">需要录入赔率</option><option value="2">不需要录入赔率</option></select> &nbsp;&nbsp;&nbsp;&nbsp;脚数阀值<input type="number" id="JSLimits" step="1" style="width: 50px;" value="4" /></h3>';
		htmlList += '<div id="divEditTable" style="float: left;">'
		htmlList += '<table class="gridtable" style="width:860px">';
		htmlList += '<tr><th width="65px">手动输入</th><th width="55px">1</th><th width="55px">2</th><th width="55px">3</th><th width="55px">4</th><th width="55px">5</th><th width="55px">6</th><th width="55px">7</th><th width="55px">8</th><th width="55px">9</th><th width="55px">10</th><th width="55px">11</th><th width="55px">12</th><th width="55px">13</th><th width="55px">14</th></tr>';
		htmlList += '<tr id="editDataLine"><td width="65px"><select width="60px" id="insertType">'
		htmlList += '<option value="1">赔率A1</option><option value="2">赔率A2</option><option value="3">赔率A3</option>'
		htmlList += '<option value="4">票数前日</option><option value="5">票数60分</option><option value="6">票数30分</option>'
		htmlList += '<option value="7">指数A1</option><option value="8">指数A2</option><option value="9">指数A3</option><option value="10">表格底部</option>'
		htmlList += '</select></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" />'
		htmlList += '</td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td>'
		htmlList += '<td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td><td width="50px"><input type="number" step="1" style="width: 50px;" value="0" /></td></tr>';
		htmlList += '<td ><td colspan="16"><input type="button" style="width:200px;height:25px;" id="btnSave" title="提交" value="提交" text="确定"/><font color="blue" id="saveStatus"></font></td></tr></table>';
		htmlList += '</div>'
		htmlList += '<div id="divCreatePL" style="float: left;"></div>'
		htmlList += '<div id="divCreatePL1" style="float: left;"></div>'
		htmlList += '<div id="divCreateJS" style="float: left;"></div>'
		htmlList += '<div id="divCreateTicket" style="float: left;"></div>'
		htmlList += '</div>';
		
		htmlList += '<div id="dragShowResult" style="background:white;width: 600px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">最可能中马组合  &nbsp;&nbsp;买多少倍<input type="number" id="HowMuchPL" value="10" step="1" style="width: 50px;" value="0" /> &nbsp; 极限<input type="number" id="Limits" value="700" step="100" style="width: 50px;" value="0" /> <input type="button" id="btnAllOrder" value="全下单" /></h3>';
		htmlList += '<div id="divShowResult" style="float: left;">'
		htmlList += '</div>'
		htmlList += '</div>'
		
		$("body").append(htmlList);
		
		ContentScript.HtmlAddDragEvent($("#dragTable"));
		ContentScript.HtmlAddDragEvent($("#dragShowResult"));
		
		$("#btnAllOrder").bind("click",function(){
			var pl = parseInt($("#HowMuchPL"));
			if(pl>0){
				alert("多少票不能为空");
				return;
			}
			$("#btnAllOrder").hide();
			$("#divShowResult").find("input[type='button']").hide();
			//下单即不再计算马
			clearInterval(ContentScript.timerSearch);
			clearInterval(ContentScript.timerSearchQP);
			
			$(ContentScript.orderResultList).each(function(){
				ContentScript.orderBetQ($(this)[0])
			});
		});
		
		$("#btnSave").bind("click",function(){
			var type = $("#insertType").val();
			switch(type)
			{
				case "1":
				{
					ContentScript.handerPLDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "2":
				{
					
					ContentScript.handerPLData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "3":
				{
					
					ContentScript.handerPLData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerPLData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "4":
				{
					
					ContentScript.handerTicketDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "5":
				{
					
					ContentScript.handerTicketData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "6":
				{
					ContentScript.handerTicketData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerTicketData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				case "7":
				{
					
					ContentScript.handerJSDataOneDay=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSDataOneDay.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "8":
				{
					
					ContentScript.handerJSData60Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData60Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "9":
				{
					
					ContentScript.handerJSData30Min=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSData30Min.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				case "10":
				{
					
					ContentScript.handerJSEndData=[];
					for(var i=0;i<14;i++){
						ContentScript.handerJSEndData.push($($("#editDataLine").find("input").eq(i)).val());
					}
					break;
				}
				
				
			}
			
			for(var i=0;i<14;i++){
				$($("#editDataLine").find("input").eq(i)).val("0");
			}
			$("#saveStatus").text("保存成功");
		});
	},
	orderBetQ:function(obj){
		var y;
		try{
			y = view1.options[view1.selectedIndex].value;
		}catch(e){
			y = $(".dd-selected-value").val();
		}
		var Limits = $("#Limits").val()
		var signInfo = ContentScript.GetSignInInfo();
		var postData = {};
		postData.task = "betBox";
		postData.combo ="box";
		postData.Tix = parseInt(obj.countJS) * parseInt($("#HowMuchPL").val());//多少票
		postData.Race = parseInt(y);
		if(parseInt(obj.hourse1)>parseInt(obj.hourse2) ){
			postData.Hss = obj.hourse2+"_"+obj.hourse1;
		}else{
			postData.Hss = obj.hourse1+"_"+obj.hourse2;
		}
		postData.type = "BET";
		postData.amount = 100;
		postData.fclmt = parseInt(Limits);
		postData.race_type = signInfo.RaceType;
		postData.race_date = signInfo.RaceDate;
	    postData.show = parseInt(y);
		postData.rd = Math.random();
		postData.post = 1;
		postData.fctype=0;
		///forecast?task=betBox&combo=0&Tix=2&Race=6&Hs1=1&Hs2=2&Hs3=&Hs4=&Hs5=&Hs6=&Hs7=&Hs8=&fctype=0&Q=Q&type=EAT&overflow=1&amount=90&fclmt=700&race_type=330E&race_date=12-04-2015&show=6&rd=0.05655713961459696
		///forecast?task=betBox&combo=box&Tix=10&Race=1&Hss=1_2&fctype=0&type=BET&amount=80&fclmt=700&race_type=3H&race_date=10-04-2016&show=1&post=1&rd=0.7604487739642092
		$.ajax({
					type: "get",
					url: ContentScript.urlX +"/forecast",
					data: postData,
					success: function (msg) {
						console.log(msg);
					},
					error:function(e){
						console.log(e);
					}
				});
	},
	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if (_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}

var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
	ContentScript.onInit();
}    
	]]> 
	</JSCode>
  </JSFile>
  <JSFile>
    <version>V231</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function (item) {
    return RegExp(item).test(this);
};

if (!Array.indexOf) {
    Array.prototype.indexOf = function (obj) {
        for (var i = 0; i < this.length; i++) {
            if (this[i] == obj) {
                return i;
            }
        }
        return -1;
    }
}

Array.prototype.contains = function (obj) {
    var i = this.length;
    while (i--) {
        if (this[i] === obj) {
            return true;
        }
    }
    return false;
}

ContentScript = {
    urlX: "http://" + window.location.host,
    needAjaxCount: [],
    timerSearch: null,
    timerSearchWP:null,
    timerSearchQP: null,
    DaoQiTime: "YYYY-MM-DD",
    WPFirstData: [],
    WPFirstPL: [],
    blueData: [],
    redData: [],
    WData: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    WPData: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    Request: function (paras) {
        var url = location.href;
        var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
        var paraObj = {}
        for (i = 0; j = paraString[i]; i++) {
            paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
        }
        var returnValue = paraObj[paras.toLowerCase()];
        if (typeof (returnValue) == "undefined") {
            return "";
        } else {
            return returnValue;
        }
    },
    GetSignInInfo: function () {
        var url = window.location.href;
        var siteType = ""
        if (url.indexOf("ctb988.com") >= 0) {
            siteType = "com";
        } else {
            siteType = "net"
        }
        var urlValue = window.location.pathname;
        var paramList = window.location.search.split("?")[1];
        var RaceType = $("input[name='race_type']").val();
        var RaceDate = $("input[name='race_date']").val();
        var Sml = "s";
        var loginuser = $.trim($("#username").text());
        var result = {
            "id": siteType + urlValue + RaceType + RaceDate + loginuser,
            "url": urlValue,
            "loginuser": loginuser,
            "RaceType": RaceType,
            "RaceDate": RaceDate,
            "Sml": Sml,
            "SiteType": siteType
        };
        return result;
    },
    onInit: function () {
        ContentScript.allOnitEvent();
    },
    getWPDiscount: function (data, type, hourse, isticket) {
        var result = 0;
        //item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
        $(data).each(function (index) {
            var temp = $(this)[0];
            if (temp.type == type && temp.hourse == hourse) {
                if (isticket) {
                    if (type == "P") {
                        result = temp.ticketsp;
                        return false
                    }
                    result = temp.ticketsw;
                    return false
                } else {
                    result = temp.discount;
                    return false
                }
            }
        });
        return result;
    },
    setSessionValue: function (val) {
        var signInfo = ContentScript.GetSignInInfo();
        var itemName = "b" + signInfo.RaceType + signInfo.RaceDate.replace("-", "").replace("-", "");
        localStorage.setItem(itemName, JSON.stringify(val));
    },
    getSessionValue: function () {
        var signInfo = ContentScript.GetSignInInfo();
        var itemName = "b" + signInfo.RaceType + signInfo.RaceDate.replace("-", "").replace("-", "");
        return $.parseJSON(localStorage.getItem(itemName));
    },
    onPlayerInit: function () {
        var htmlList = '<div id="drag" style="background:white;width: 1060px; height: 1400px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 900px;">';
        htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span>';
        htmlList += '<input id="limitsStart" type="number" step="1" style="width: 40px;" size="4" value="240" />-';
        htmlList += '<input id="limitsEnd" type="number" step="1" style="width: 40px;" size="4" value="60" /><input type="button" id="btnChange" text="切换" value="切换"></h3>';
        htmlList += '<div id="divCreate"></div>'
        htmlList += '</div>';
        $("body").append(htmlList);
        $("#daoqitime").text(ContentScript.DaoQiTime);
        ContentScript.HtmlAddDragEvent($("#drag"));
        ContentScript.WPFirstData = ContentScript.GetWinTransData();
        ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
        console.log("111");

        $("#btnChange").bind("click", function () {
            if ($("#limitsStart").val() == "240") {
                $("#limitsStart").val("300");
                $("#limitsEnd").val("100");
            } else {
                $("#limitsStart").val("240");
                $("#limitsEnd").val("60");
            }
        });

        self.setInterval(function () {
            var hourseCount1 = ContentScript.GetWinTransData();
            if (hourseCount1.length == 0) {
                return;
            }
            var currentPLData = ContentScript.getWPPLDataList();
            var currentWPData = hourseCount1;
            if (ContentScript.WPFirstData.length == 0) {
                ContentScript.WPFirstData = ContentScript.GetWinTransData();
            }
            //item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
            var htmlListQPRight = '<table class="bettable" style="width:840px">';
            htmlListQPRight += '<tr style="height:24px"><th style="width:50px">马</th><th style="width:80px">&nbsp;&nbsp;</th><th style="width:80px">早盘赔率</th><th style="width:80px">即时赔率</th><th style="width:80px">早盘WP</th><th style="width:40px">&nbsp;&nbsp;</th><th>W</th><th>P</th><th>WP</th>';
            ContentScript.redData = [];
            ContentScript.blueData = [];
            for (var i = 1; i < 15; i++) {
                var firstPeiLv = ContentScript.getWPPLByHourse(ContentScript.WPFirstPL, i);
                var currentPeiLv = ContentScript.getWPPLByHourse(currentPLData, i);
                var firstWPDiscount = ContentScript.getWPDiscount(ContentScript.WPFirstData, "WP", i, false);
                //var currentWPData = ContentScript.GetWinTransData();
                var currentW = ContentScript.getWPDiscount(currentWPData, "W", i, false);
                var currentP = ContentScript.getWPDiscount(currentWPData, "P", i, false);
                var currentWP = ContentScript.getWPDiscount(currentWPData, "WP", i, false);
                var currentWTicket = ContentScript.getWPDiscount(currentWPData, "W", i, true);
                var currentPTicket = ContentScript.getWPDiscount(currentWPData, "P", i, true);
                var currentWPTicket = ContentScript.getWPDiscount(currentWPData, "WP", i, true);
                ContentScript.WData[i] = currentW;
                ContentScript.WPData[i] = currentWP;
                htmlListQPRight += '<tr style="height:24px">'
                htmlListQPRight += '<td><b>' + i + '</b></td>'
                htmlListQPRight += '<td>赔率</td>'
                if (firstPeiLv == 0 && i == 1) {
                    ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
                    firstPeiLv = currentPeiLv;
                }
                htmlListQPRight += '<td>' + firstPeiLv + '</td>'

                if (firstPeiLv < currentPeiLv) {
                    htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentPeiLv + '</td>'
                } else {
                    htmlListQPRight += '<td>' + currentPeiLv + '</td>'
                }

                if (firstWPDiscount == 76) {
                    htmlListQPRight += '<td style="background-color:#EE799F;">' + firstWPDiscount + '</td>'
                } else if (firstWPDiscount >= 89) {
                    htmlListQPRight += '<td style="background-color:#8EE5EE;">' + firstWPDiscount + '</td>'
                } else {
                    htmlListQPRight += '<td>' + firstWPDiscount + '</td>'
                }

                htmlListQPRight += '<td><b>' + i + '</b></td>'
                if (currentW == 76) {
                    htmlListQPRight += '<td style="background-color:#EE799F;">' + currentW + '</td>'
                } else if (currentW >= 89) {
                    htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentW + '</td>'
                } else {
                    htmlListQPRight += '<td>' + currentW + '</td>'
                }

                if (currentP == 76) {
                    htmlListQPRight += '<td style="background-color:#EE799F;">' + currentP + '</td>'
                } else if (currentP >= 89) {
                    htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentP + '</td>'
                } else {
                    htmlListQPRight += '<td>' + currentP + '</td>'
                }

                if (currentWP == 76) {

                    if (!ContentScript.redData.contains(i)) {
                        ContentScript.redData.push(i);
                    }
                    htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWP + '</td>'
                } else if (currentWP >= 89) {
                    if (!ContentScript.blueData.contains(i)) {
                        ContentScript.blueData.push(i);
                    }
                    htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentWP + '</td>'
                } else {
                    htmlListQPRight += '<td>' + currentWP + '</td>'
                }
                htmlListQPRight += '</tr>'
                htmlListQPRight += '<tr style="height:24px">'
                htmlListQPRight += '<td></td><td></td><td></td><td></td><td></td>'
                htmlListQPRight += '<td></td>'
                if (currentW == 76) {
                    if (currentWTicket >= 200000) {
                        htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWTicket + '</td>'
                    } else {
                        htmlListQPRight += '<td>' + currentWTicket + '</td>'
                    }
                } else {
                    htmlListQPRight += '<td>/</td>'
                }

                if (currentP == 76) {
                    if (currentPTicket >= 200000) {
                        htmlListQPRight += '<td style="background-color:#EE799F;">' + currentPTicket + '</td>'
                    } else {
                        htmlListQPRight += '<td>' + currentPTicket + '</td>'
                    }
                } else {
                    htmlListQPRight += '<td>/</td>'
                }

                if (currentWP == 76) {
                    if (currentWPTicket >= 200000) {
                        htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWPTicket + '</td>'
                    } else {
                        htmlListQPRight += '<td>' + currentWPTicket + '</td>'
                    }
                } else {
                    htmlListQPRight += '<td>/</td>'
                }

                htmlListQPRight += '</tr>'
            }
            $("#divCreate").empty();
            $("#divCreate").append(htmlListQPRight);
            var postData = {};
            postData.red = ContentScript.redData;
            postData.blue = ContentScript.blueData;
            postData.wp = ContentScript.WPData;
            postData.w = ContentScript.WData;
            ContentScript.setSessionValue(postData);
        }, 2000);
    },
    arrayContain: function (arr, indexValue) {
        var isExists = false;
        $(arr).each(function () {
            if ($(this)[0] == indexValue) {
                isExists = true;
            }
        });
        return isExists
    },
    getminvalue:function(type,hourse1,hourse2){
        try{
            var postData = ContentScript.getSessionValue();
            if(type==="wp"){
                if( postData.wp[hourse1] > postData.wp[hourse2]){
                    return postData.wp[hourse2];
                }else{
                    return postData.wp[hourse1];
                }
            }
    
            if(type==="w"){
                if( postData.w[hourse1] > postData.w[hourse2]){
                    return postData.w[hourse2];
                }else{
                    return postData.w[hourse1];
                }
            }
        }catch(e){
            return 0;
        }
    },
    getonehourseminvalue:function(type,hourse){
        try{
            var postData = ContentScript.getSessionValue();
            if(type==="wp"){
                return postData.wp[hourse];
            }
            if(type==="w"){
                return postData.w[hourse2];
            }
        }catch(e){
            return 0;
        }
    },
    allOnitEvent: function () {
        //创建用户界面
        ContentScript.CreateHtmlElement();
        //绑定拖拽事件
        ContentScript.HtmlAddDragEvent($("#drag"));
        ContentScript.HtmlAddDragEvent($("#dragQW"));
        ContentScript.HtmlAddDragEvent($("#dragQWP"));
        $("#daoqitime").text(ContentScript.DaoQiTime);

        $("#btnStart").bind("click", function () {
            $("#btnStart").hide();
            $("#btnEnd").show();
            ContentScript.timerSearch = self.setInterval(function () {
                var selQWStart = $("#selQWStart").val();
                var start = $("#startDiscount").val();
                var end = $("#endDiscount").val();
                start = parseFloat(start);
                end = parseFloat(end);
                var resultFirst = ContentScript.GetTransactionData('vrtFC_2', 'FC_DATA_2', start, end);
                resultFirst.sort(function(a, b) {
                    return parseFloat(a["wminvalue"]) < parseFloat(b["wminvalue"]) ? 1 : parseFloat(a["wminvalue"]) == parseFloat(b["wminvalue"]) ? 0 : -1;
                });
                var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', 70, 100);
                //getQPPLData
                var htmlList = '<table class="bettable" style="width:400px">';
                htmlList += '<tr><th width="20%">马</th><th>赔率</th><th width="34%">票数$</th><th width="12%">%</th><th>位置Q%</th><th width="18%">限额</th><th>W/WP</th></tr>';
                var hourseCount = [];
                var postData = ContentScript.getSessionValue();
                console.log(postData);
                console.log(resultFirst);
                $(resultFirst).each(function (index) {
                    var hourseM = $(this)[0].hourse.split('-');
                    var isExists1 = false;
                    var isExists2 = false;
                    var hourse1, hourse2
                    if ($(this)[0].hourse.indexOf("(") < 0) {
                        hourse1 = $(this)[0].hourse.split("-")[0];
                        hourse2 = $(this)[0].hourse.split("-")[1];
                    } else {
                        hourse1 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
                        hourse2 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
                    }
                    if (postData.w[hourse1] < selQWStart || postData.w[hourse2] < selQWStart) {
                        return;
                    }
                    $(hourseCount).each(function (index) {
                        var temp = $(this)[0];
                        if (temp.hourse == hourseM[0]) {
                            isExists1 = true;
                            $(this)[0].count = $(this)[0].count + 1;
                        }
                        if (temp.hourse == hourseM[1]) {
                            isExists2 = true;
                            $(this)[0].count = $(this)[0].count + 1;
                        }
                    });
                    if (!isExists1) {
                        hourseCount.push({
                            "hourse": hourseM[0],
                            "count": 1
                        });
                    }
                    if (!isExists2) {
                        hourseCount.push({
                            "hourse": hourseM[1],
                            "count": 1
                        });
                    }

                    htmlList += '<tr style="line-height: 30px;">';
                    //console.log(ContentScript.arrayContain(postData.red, parseInt(hourse1)));
                    var hasHourse1 = false;
                    var hasHourse2 = false;
                    var hourse1String = ""; // 8EE5EE
                    var hourse2String = "";
                    if (postData != null && postData != undefined && postData.red != null && postData.red != undefined && postData.red.length > 0) {
                        if (ContentScript.arrayContain(postData.red, parseInt(hourse1))) {
                            hourse1String = "<font color='red'><b>" + hourse1 + "</b></font>"
                            hasHourse1 = true;
                        }
                        if (ContentScript.arrayContain(postData.red, parseInt(hourse2))) {
                            hourse2String = "<font color='red'><b>" + hourse2 + "</b></font>"
                            hasHourse2 = true;
                        }
                    }
                    if (postData != null && postData != undefined && postData.blue != null && postData.blue != undefined && postData.blue.length > 0) {
                        if (ContentScript.arrayContain(postData.blue, parseInt(hourse1))) {
                            hourse1String = "<font color='blue'><b>" + hourse1 + "</b></font>"
                            hasHourse1 = true;
                        }
                        if (ContentScript.arrayContain(postData.blue, parseInt(hourse2))) {
                            hourse2String = "<font color='blue'><b>" + hourse2 + "</b></font>"
                            hasHourse2 = true;
                        }
                    }

                    if (!hasHourse1) {
                        hourse1String = "<font>" + hourse1 + "</font>"
                    }

                    if (!hasHourse2) {
                        hourse2String = "<font>" + hourse2 + "</font>"
                    }

                    var wzQP = "";
                    if (resultSecond != null && resultSecond != undefined) {
                        try {
                            $(resultSecond).each(function (index) {
                                var item = $(this)[0];
                                if (wzQP == "" && item.hourse == ("(" + hourse1 + "-" + hourse2 + ")")) {
                                    wzQP = item.discount;
                                }
                            });
                        } catch (ex) {
                            wzQP = "";
                        }
                    }

                    htmlList += '<td>' + hourse1String + '-' + hourse2String + '</td>';
                    htmlList += '<td>' + ContentScript.getQPPLData(hourse1, hourse2) + '</td>';
                    htmlList += '<td>' + $(this)[0].tickets + '</td>';
                    htmlList += '<td>' + $(this)[0].discount + '</td>';
                    try {
                        if (parseInt(wzQP) >= 89) {
                            htmlList += '<td style="background-color:#8EE5EE;">' + wzQP + '</td>';
                        } else {
                            htmlList += '<td>' + wzQP + '</td>';
                        }
                    } catch (ex) {
                        htmlList += '<td>' + wzQP + '</td>';
                    }
                    htmlList += '<td>' + $(this)[0].limit + '</td>';
                    htmlList += '<td>' + $(this)[0].wminvalue + '</td>';                    
                    htmlList += '</tr>';
                });

                htmlList += '</table><br/>';
                console.log(htmlList);
                $("#divCreateQWLeft").empty();
                $("#divCreateQWLeft").append(htmlList);
            }, 1000);
            ContentScript.timerSearchWP = self.setInterval(function () {
                var selQWPStart = $("#selQWPStart").val();
                var start = $("#startDiscount").val();
                var end = $("#endDiscount").val();
                start = parseFloat(start);
                end = parseFloat(end);
                var resultFirst = ContentScript.GetTransactionData('vrtFC_2', 'FC_DATA_2', start, end);
                resultFirst.sort(function(a, b) {
                    return parseFloat(a["wpminvalue"]) < parseFloat(b["wpminvalue"]) ? 1 : parseFloat(a["wpminvalue"]) == parseFloat(b["wpminvalue"]) ? 0 : -1;
                });
                var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', 70, 100);
                //getQPPLData
                var htmlList = '<table class="bettable" style="width:400px">';
                htmlList += '<tr><th width="20%">马</th><th>赔率</th><th width="34%">票数$</th><th width="12%">%</th><th>位置Q%</th><th width="18%">限额</th><th>W/WP</th></tr>';
                var hourseCount = [];
                var postData = ContentScript.getSessionValue();
                console.log(postData);
                console.log(resultFirst);
                $(resultFirst).each(function (index) {
                    var hourseM = $(this)[0].hourse.split('-');
                    var isExists1 = false;
                    var isExists2 = false;
                    var hourse1, hourse2
                    if ($(this)[0].hourse.indexOf("(") < 0) {
                        hourse1 = $(this)[0].hourse.split("-")[0];
                        hourse2 = $(this)[0].hourse.split("-")[1];
                    } else {
                        hourse1 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
                        hourse2 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
                    }
                    
                    if (postData.wp[hourse1] < selQWPStart || postData.wp[hourse2] < selQWPStart) {
                        return;
                    }
                    $(hourseCount).each(function (index) {
                        var temp = $(this)[0];
                        if (temp.hourse == hourseM[0]) {
                            isExists1 = true;
                            $(this)[0].count = $(this)[0].count + 1;
                        }
                        if (temp.hourse == hourseM[1]) {
                            isExists2 = true;
                            $(this)[0].count = $(this)[0].count + 1;
                        }
                    });
                    if (!isExists1) {
                        hourseCount.push({
                            "hourse": hourseM[0],
                            "count": 1
                        });
                    }
                    if (!isExists2) {
                        hourseCount.push({
                            "hourse": hourseM[1],
                            "count": 1
                        });
                    }

                    htmlList += '<tr style="line-height: 30px;">';
                    //console.log(ContentScript.arrayContain(postData.red, parseInt(hourse1)));
                    var hasHourse1 = false;
                    var hasHourse2 = false;
                    var hourse1String = ""; // 8EE5EE
                    var hourse2String = "";
                    if (postData != null && postData != undefined && postData.red != null && postData.red != undefined && postData.red.length > 0) {
                        if (ContentScript.arrayContain(postData.red, parseInt(hourse1))) {
                            hourse1String = "<font color='red'><b>" + hourse1 + "</b></font>"
                            hasHourse1 = true;
                        }
                        if (ContentScript.arrayContain(postData.red, parseInt(hourse2))) {
                            hourse2String = "<font color='red'><b>" + hourse2 + "</b></font>"
                            hasHourse2 = true;
                        }
                    }
                    if (postData != null && postData != undefined && postData.blue != null && postData.blue != undefined && postData.blue.length > 0) {
                        if (ContentScript.arrayContain(postData.blue, parseInt(hourse1))) {
                            hourse1String = "<font color='blue'><b>" + hourse1 + "</b></font>"
                            hasHourse1 = true;
                        }
                        if (ContentScript.arrayContain(postData.blue, parseInt(hourse2))) {
                            hourse2String = "<font color='blue'><b>" + hourse2 + "</b></font>"
                            hasHourse2 = true;
                        }
                    }

                    if (!hasHourse1) {
                        hourse1String = "<font>" + hourse1 + "</font>"
                    }

                    if (!hasHourse2) {
                        hourse2String = "<font>" + hourse2 + "</font>"
                    }

                    var wzQP = "";
                    if (resultSecond != null && resultSecond != undefined) {
                        try {
                            $(resultSecond).each(function (index) {
                                var item = $(this)[0];
                                if (wzQP == "" && item.hourse == ("(" + hourse1 + "-" + hourse2 + ")")) {
                                    wzQP = item.discount;
                                }
                            });
                        } catch (ex) {
                            wzQP = "";
                        }
                    }

                    htmlList += '<td>' + hourse1String + '-' + hourse2String + '</td>';
                    htmlList += '<td>' + ContentScript.getQPPLData(hourse1, hourse2) + '</td>';
                    htmlList += '<td>' + $(this)[0].tickets + '</td>';
                    htmlList += '<td>' + $(this)[0].discount + '</td>';
                    try {
                        if (parseInt(wzQP) >= 89) {
                            htmlList += '<td style="background-color:#8EE5EE;">' + wzQP + '</td>';
                        } else {
                            htmlList += '<td>' + wzQP + '</td>';
                        }
                    } catch (ex) {
                        htmlList += '<td>' + wzQP + '</td>';
                    }
                    htmlList += '<td>' + $(this)[0].limit + '</td>';
                    htmlList += '<td>' + $(this)[0].wpminvalue + '</td>';
                    htmlList += '</tr>';
                });

                htmlList += '</table><br/>';
                console.log(htmlList);
                $("#divCreateQWPLeft").empty();
                $("#divCreateQWPLeft").append(htmlList);
            }, 1000);
        });
        $("#btnEnd").bind("click", function () {
            if (ContentScript.timerSearch != null) {
                clearInterval(ContentScript.timerSearch);
            }
            if(ContentScript.timerSearchWP != null){
                clearInterval(ContentScript.timerSearchWP);
            }
            $("#btnStart").show();
            $("#btnEnd").hide();
        });
    },
    GetFliterData: function (result, start, end) {
        var limitResult = [];
        //将符合条件的跑马的最小值显示出来
        $(result).each(function (index) {
            var temp = $(this)[0];
            var isNew = false;
            if (parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
                $(limitResult).each(function (item) {
                    var tp = $(this)[0];
                    if (tp.hourse == temp.hourse) {
                        isNew = true;
                    }
                    if (tp.hourse == temp.hourse && temp.discount < tp.discount) {
                        $(this)[0].tickets = temp.tickets;
                        $(this)[0].discount = temp.discount;
                        $(this)[0].limit = temp.limit;
                    }
                });
                if (!isNew) {
                    limitResult.push(temp);
                }
            }
        });
        return limitResult;
    },
    getQPPLData: function (x, y) {
        try {
            var len = 0;
            if (parseInt(x) > 7 && parseInt(y) > 8) {
                len = 13 * (y - 8) + (x - 7);
            } else {
                len = 13 * (x - 1) + (y - 1);
            }
            var result = $($("#frmTOTE").find("td")[len - 1]).text();
            if (result == "" || result == "SCR" || isNaN(result)) {
                return 0;
            }
            return parseFloat(result);
        } catch (e) {
            return 0;
        }
    },
    getWPPLDataList: function () {
        var result = [];
        $($("#tttbl td").find(".style22")).each(function (index) {
            var item = {};
            item.pl1 = parseFloat($(this).parent().prev().text());
            item.pl2 = parseFloat($(this).parent().next().text());
            item.cc = $(this).text();
            item.type = "WP";
            result.push(item);
        });
        if (result.length == 0) {
            $($("#tttbl td").find(".style21")).each(function (index) {
                var item = {};
                item.pl1 = parseFloat($(this).parent().prev().text());
                item.pl2 = parseFloat($(this).parent().next().text());
                item.cc = $(this).text();
                item.type = "WP";
                result.push(item);
            });
        }
        return result;
    },
    getWPPLByHourse: function (data, hourse) {
        var peiLv = 0;
        $(data).each(function (item) {
            var temp = $(this)[0];
            if (parseInt(temp.cc) == parseInt(hourse)) {
                peiLv = temp.pl1;
                return;
            }
        });
        return peiLv;
    },
    getIframeInnerHTML(frame, element) {
        try {
            return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
        } catch (e) {
            return document.getElementById(element).innerHTML;
        }
    },
    GetWinTransData: function () {
        var limitsStart = $("#limitsStart").val();
        var limitsEnd = $("#limitsEnd").val();
        //1	1	9	9	83	300/100
        var textq = ContentScript.getIframeInnerHTML('vrtEAT', 'EAT_DATA');
        textq = textq.replace(/\n/g, ";");
        textq = textq.replace(/\s/g, "$");
        var textList = textq.split(";");
        var result = [];
        for (var i = 0; i < textList.length; i++) {
            if (textList[i] == "") {
                continue;
            }
            var tempArray = textList[i].split("$");
            var isExists = false;
            var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
            var item = null;
            if (tempArray[5] == limitsStart + "/0") {
                item = {
                    "id": id,
                    "type": "W",
                    "matches": tempArray[0],
                    "hourse": tempArray[1],
                    "ticketsw": parseInt(tempArray[2]),
                    "ticketsp": parseInt(tempArray[3]),
                    "discount": parseFloat(tempArray[4]),
                    "limit": tempArray[5]
                }
            }
            if (tempArray[5] == "0/" + limitsEnd) {
                item = {
                    "id": id,
                    "type": "P",
                    "matches": tempArray[0],
                    "hourse": tempArray[1],
                    "ticketsw": parseInt(tempArray[2]),
                    "ticketsp": parseInt(tempArray[3]),
                    "discount": parseFloat(tempArray[4]),
                    "limit": tempArray[5]
                }
            }
            if (tempArray[5] == limitsStart + "/" + limitsEnd) {
                item = {
                    "id": id,
                    "type": "WP",
                    "matches": tempArray[0],
                    "hourse": tempArray[1],
                    "ticketsw": parseInt(tempArray[2]),
                    "ticketsp": parseInt(tempArray[3]),
                    "discount": parseFloat(tempArray[4]),
                    "limit": tempArray[5]
                }
            }

            if (item != null) {
                $(result).each(function (index) {
                    var temp = $(this)[0];
                    if (item != null && temp.hourse == tempArray[1] && temp.type == item.type) {
                        isExists = true;
                        if (temp.discount == parseFloat(tempArray[3])) {
                            $(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
                            $(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
                        }
                        return;
                    }
                });
            }
            if (!isExists && item != null) {
                result.push(item);
            }
        }
        return result;
    },
    GetTransactionData: function (fc, data, start, end) {
        var textq = ContentScript.getIframeInnerHTML(fc, data);
        console.log(11);
        textq = textq.replace(/\n/g, ";");
        textq = textq.replace(/\s/g, "$");
        var result = [];
        var fliterHourse = [];
        var textList = textq.split(";");
        console.log(textList.length);
        for (var i = 0; i < textList.length; i++) {
            if (textList[i] == "") { } else {
                var tempArray = textList[i].split("$");
                var paramValue = 700;
                if (tempArray[1].indexOf("(") >= 0) {
                    paramValue = 400;
                }
                var id = tempArray[0] + tempArray[1] + tempArray[2];
                var hourse1, hourse2;
                if (tempArray[1].indexOf("(") < 0) {
                    hourse1 = tempArray[1].split("-")[0];
                    hourse2 = tempArray[1].split("-")[1];
                } else {
                    hourse1 = tempArray[1].replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
                    hourse2 = tempArray[1].replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
                }

                var minPL = $("#minPL").val();
                var maxPL = $("#maxPL").val();
                var currentPL = ContentScript.getQPPLData(hourse1, hourse2);
                if ((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
                    var isExists = false;
                    item = {
                        "id": id,
                        "type": "WQ",
                        "matches": tempArray[0],
                        "hourse": tempArray[1],
                        "tickets": tempArray[2],
                        "discount": parseFloat(tempArray[3]),
                        "limit": tempArray[4],
                        "wpminvalue": ContentScript.getminvalue('wp',hourse1,hourse2),
                        "wminvalue": ContentScript.getminvalue('w',hourse1,hourse2)
                    }
                    $(result).each(function (index) {
                        var temp = $(this)[0];
                        if (temp.hourse == tempArray[1]) {
                            isExists = true;
                            if (temp.discount > parseFloat(tempArray[3])) {
                                $(this)[0].tickets = tempArray[2];
                                $(this)[0].discount = parseFloat(tempArray[3]);
                                $(this)[0].limit = tempArray[4];
                            }
                            return;
                        }
                    });
                    if (!isExists) {
                        if (minPL <= currentPL && currentPL <= maxPL) {
                            result.push(item);
                        }
                    }
                }
                if (parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
                    fliterHourse.push(tempArray[1]);
                }
            }

        }
        return result;
    },
    CreateHtmlElement: function () {
        var htmlList = '<div id="drag" style="background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
        htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><input id="minPL" type="number" step="1" style="width: 40px;" size="4" value="0" />-<input id="maxPL" type="number" step="1" style="width: 40px;" size="4" value="70" /></h3>';
        htmlList += '<div style="float: left;"><table style="width:200">';
        htmlList += '<tr style="line-height: 30px;"><td>';
        htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />-';
        htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />';
        htmlList += '</td></tr>';

        htmlList += '<tr style="line-height: 30px;"><td>';
        htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
        htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
        htmlList += '</td></tr>';
        htmlList += '</table> </div></div>';

        htmlList += '<div id="dragQW" style="background:white;width: 660px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
        htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计(W) &nbsp;<input type="checkbox" id="chkQ" value="1" />按马次排序';
        htmlList += '&nbsp;<input id="selQWStart" type="number" step="1" style="width: 40px;" size="4" value="76" />起</h3>';
        htmlList += '<div id="divCreateQWLeft" style="float: left;"></div>'
        htmlList += '</div>';

        htmlList += '<div id="dragQWP" style="background:white;width: 660px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
        htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计(WP) &nbsp;<input type="checkbox" id="chkQ" value="1" />按马次排序';
        htmlList += '&nbsp;<input id="selQWPStart" type="number" step="1" style="width: 40px;" size="4" value="76" />起</h3>';
        htmlList += '<div id="divCreateQWPLeft" style="float: left;"></div>'
        htmlList += '</div>';

        $("body").append(htmlList);
    },

    HtmlAddDragEvent: function (obj) {
        var _move = false; //移动标记  
        var _x, _y; //鼠标离控件左上角的相对位置  
        obj.click(function () {
            //alert("click");//点击（松开后触发）  
        }).mousedown(function (e) {
            _move = true;
            _x = e.pageX - parseInt(obj.css("left"));
            _y = e.pageY - parseInt(obj.css("top"));
        });
        $(document).mousemove(function (e) {
            if (_move) {
                var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
                var y = e.pageY - _y;
                obj.css({
                    top: y,
                    left: x
                }); //控件新位置  
            }
        }).mouseup(function () {
            _move = false;
        });
    }
}
var host = window.location.href;
if (host.indexOf("Q.jsp") >= 0) {
    ContentScript.onInit();
}
if (host.indexOf("playerhk.jsp") >= 0) {
    ContentScript.onPlayerInit();
}
	]]> 
	</JSCode>
  </JSFile>
  <JSFile>
    <version>V225</version>
    <JSCode>
    <![CDATA[
Array.prototype.contains = function(item) {
	return RegExp(item).test(this);
};

if(!Array.indexOf) {
	Array.prototype.indexOf = function(obj) {
		for(var i = 0; i < this.length; i++) {
			if(this[i] == obj) {
				return i;
			}
		}
		return -1;
	}
}

Array.prototype.contains = function(obj) {
	var i = this.length;
	while(i--) {
		if(this[i] === obj) {
			return true;
		}
	}
	return false;
}

ContentScript = {
	urlX: "http://" + window.location.host,
	needAjaxCount: [],
	timerSearch: null,
	timerSearchQP: null,
	DaoQiTime: "YYYY-MM-DD",
	WPFirstData: [],
	WPFirstPL: [],
	blueData: [],
	redData: [],
	Request: function(paras) {
		var url = location.href;
		var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&");
		var paraObj = {}
		for(i = 0; j = paraString[i]; i++) {
			paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
		}
		var returnValue = paraObj[paras.toLowerCase()];
		if(typeof(returnValue) == "undefined") {
			return "";
		} else {
			return returnValue;
		}
	},
	GetSignInInfo: function() {
		var url = window.location.href;
		var siteType = ""
		if(url.indexOf("ctb988.com") >= 0) {
			siteType = "com";
		} else {
			siteType = "net"
		}
		var urlValue = window.location.pathname;
		var paramList = window.location.search.split("?")[1];
		var RaceType = $("input[name='race_type']").val();
		var RaceDate = $("input[name='race_date']").val();
		var Sml = "s";
		var loginuser = $.trim($("#username").text());
		var result = {
			"id": siteType + urlValue + RaceType + RaceDate + loginuser,
			"url": urlValue,
			"loginuser": loginuser,
			"RaceType": RaceType,
			"RaceDate": RaceDate,
			"Sml": Sml,
			"SiteType": siteType
		};
		return result;
	},
	onInit: function() {
		ContentScript.allOnitEvent();
	},
	getWPDiscount: function(data, type, hourse, isticket) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse) {
				if(isticket) {
					if(type == "P") {
						result = temp.ticketsp;
						return false
					}
					result = temp.ticketsw;
					return false
				} else {
					result = temp.discount;
					return false
				}
			}
		});
		return result;
	},
	getWTicketCount: function(data, type, hourse,discount,limit) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse
				&& temp.discount == discount 
				&& temp.limit == (limit+"/0") ) {
				result += temp.ticketsw;
			}
		});
		console.log("type "+type+"hourse "+ hourse+"discount "+ discount+"limit "+ limit+"result "+ result);
		return result;
	},
	getPTicketCount: function(data, type, hourse,discount,limit) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse
				&& temp.discount == discount 
				&& temp.limit == ("0/"+limit) ) {
				result += temp.ticketsp;
			}
		});
		//console.log("type "+type+"hourse "+ hourse+"discount "+ discount+"limit "+ limit+"result "+ result);
		return result;
	},
	getWPTicketCount: function(data, type, hourse,discount,limitS,limitE) {
		var result = 0;
		//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
		$(data).each(function(index) {
			var temp = $(this)[0];
			if(temp.type == type && temp.hourse == hourse
				&& temp.discount == discount 
				&& temp.limit == (limitS+"/"+limitE) ) {
				result += temp.ticketsw;
			}
		});
		//console.log("type "+type+"hourse "+ hourse+"discount "+ discount+"limit "+ limit+"result "+ result);
		return result;
	},
	setSessionValue: function(val) {
		var signInfo = ContentScript.GetSignInInfo();
		var itemName = "b" + signInfo.RaceType + signInfo.RaceDate.replace("-", "").replace("-", "");
		localStorage.setItem(itemName, JSON.stringify(val));
	},
	getSessionValue: function() {
		var signInfo = ContentScript.GetSignInInfo();
		var itemName = "b" + signInfo.RaceType + signInfo.RaceDate.replace("-", "").replace("-", "");
		return $.parseJSON(localStorage.getItem(itemName));
	},
	onPlayerInit: function() {

		var htmlList = '<div id="drag" style="background:white;width: 1060px; height: 1400px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 900px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><span>&nbsp;独赢数据统计</span>';
		htmlList += '<input id="limitsStart" type="number" step="1" style="width: 40px;" size="4" value="300" />-';
		htmlList += '<input id="limitsEnd" type="number" step="1" style="width: 40px;" size="4" value="100" /><input type="button" id="btnChange" text="切换" value="切换"></h3>';
		htmlList += '<div id="divCreate"></div>'
        htmlList += '</div>';
        htmlList += '<div id="dragW" style="background:white;width: 460px; height: 680px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
        htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">W统计 &nbsp;<input id="DiscountW" type="number" step="1" style="width: 40px;" size="4" value="90" />\
                     <input id="Limit" type="number" step="10" style="width: 40px;" size="4" value="300" /></h3>';
		htmlList += '<div id="divCreateW"></div>' 
		htmlList += '</div>';
		
		htmlList += '<div id="dragWP" style="background:white;width: 460px; height: 680px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
        htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">WP统计 &nbsp;<input id="DiscountWP" type="number" step="1" style="width: 40px;" size="4" value="90" />\
					 <input id="LimitWP" type="number" step="10" style="width: 40px;" size="4" value="300" /> \
					 <input id="LimitWPS" type="number" step="10" style="width: 40px;" size="4" value="100" /></h3>';
		htmlList += '<div id="divCreateWP"></div>' 
        htmlList += '</div>';
		
		htmlList += '<div id="dragP" style="background:white;width: 460px; height: 680px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
        htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">P统计 &nbsp;<input id="DiscountP" type="number" step="1" style="width: 40px;" size="4" value="90" />\
                     <input id="LimitP" type="number" step="10" style="width: 40px;" size="4" value="100" /></h3>';
		htmlList += '<div id="divCreateP"></div>' 
        htmlList += '</div>';
		
		$("body").append(htmlList);
		$("#daoqitime").text(ContentScript.DaoQiTime);

		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragW"));
		ContentScript.HtmlAddDragEvent($("#dragWP"));
		ContentScript.HtmlAddDragEvent($("#dragP"));
		ContentScript.WPFirstData = ContentScript.GetWinTransData();
		ContentScript.WPFirstPL = ContentScript.getWPPLDataList();

		$("#btnChange").bind("click", function() {
			if($("#limitsStart").val() == "240") {
				$("#limitsStart").val("300");
				$("#limitsEnd").val("100");
			} else {
				$("#limitsStart").val("240");
				$("#limitsEnd").val("60");
			}
		});

		self.setInterval(function() {
			var hourseCount1 = ContentScript.GetWinTransData();
			if(hourseCount1.length == 0) {
				return;
			}
			var currentPLData = ContentScript.getWPPLDataList();
			var currentWPData = hourseCount1;
			if(ContentScript.WPFirstData.length == 0) {
				ContentScript.WPFirstData = ContentScript.GetWinTransData();
			}
			//item={"id":id,"type":"W","matches":tempArray[0],"hourse":tempArray[1],"ticketsw":parseInt(tempArray[2]),"ticketsp":parseInt(tempArray[3]),"discount":parseFloat(tempArray[4]),"limit":tempArray[4]}
			var htmlListQPRight = '<table class="bettable" style="width:840px">';
			htmlListQPRight += '<tr style="height:24px"><th style="width:50px">马</th><th style="width:80px">&nbsp;&nbsp;</th><th style="width:80px">早盘赔率</th><th style="width:80px">即时赔率</th><th style="width:80px">早盘WP</th><th style="width:40px">&nbsp;&nbsp;</th><th>W</th><th>P</th><th>WP</th>';
			ContentScript.redData = [];
			ContentScript.blueData = [];
			for(var i = 1; i < 15; i++) {
				var firstPeiLv = ContentScript.getWPPLByHourse(ContentScript.WPFirstPL, i);
				var currentPeiLv = ContentScript.getWPPLByHourse(currentPLData, i);
				var firstWPDiscount = ContentScript.getWPDiscount(ContentScript.WPFirstData, "WP", i, false);
				//var currentWPData = ContentScript.GetWinTransData();
				var currentW = ContentScript.getWPDiscount(currentWPData, "W", i, false);
				var currentP = ContentScript.getWPDiscount(currentWPData, "P", i, false);
				var currentWP = ContentScript.getWPDiscount(currentWPData, "WP", i, false);
				var currentWTicket = ContentScript.getWPDiscount(currentWPData, "W", i, true);
				var currentPTicket = ContentScript.getWPDiscount(currentWPData, "P", i, true);
				var currentWPTicket = ContentScript.getWPDiscount(currentWPData, "WP", i, true);

				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td><b>' + i + '</b></td>'
				htmlListQPRight += '<td>赔率</td>'
				if(firstPeiLv == 0 && i == 1) {
					ContentScript.WPFirstPL = ContentScript.getWPPLDataList();
					firstPeiLv = currentPeiLv;
				}
				htmlListQPRight += '<td>' + firstPeiLv + '</td>'

				if(firstPeiLv < currentPeiLv) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentPeiLv + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentPeiLv + '</td>'
				}

				if(firstWPDiscount == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + firstWPDiscount + '</td>'
				} else if(firstWPDiscount >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + firstWPDiscount + '</td>'
				} else {
					htmlListQPRight += '<td>' + firstWPDiscount + '</td>'
				}

				htmlListQPRight += '<td><b>' + i + '</b></td>'
				if(currentW == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentW + '</td>'
				} else if(currentW >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentW + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentW + '</td>'
				}

				if(currentP == 76) {
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentP + '</td>'
				} else if(currentP >= 89) {
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentP + '</td>'
				}

				if(currentWP == 76) {

					if(!ContentScript.redData.contains(i)) {
						ContentScript.redData.push(i);
					}
					htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWP + '</td>'
				} else if(currentWP >= 89) {
					if(!ContentScript.blueData.contains(i)) {
						ContentScript.blueData.push(i);
					}
					htmlListQPRight += '<td style="background-color:#8EE5EE;">' + currentWP + '</td>'
				} else {
					htmlListQPRight += '<td>' + currentWP + '</td>'
				}
				htmlListQPRight += '</tr>'
				htmlListQPRight += '<tr style="height:24px">'
				htmlListQPRight += '<td></td><td></td><td></td><td></td><td></td>'
				htmlListQPRight += '<td></td>'
				if(currentW == 76) {
					if(currentWTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				if(currentP == 76) {
					if(currentPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentPTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				if(currentWP == 76) {
					if(currentWPTicket >= 200000) {
						htmlListQPRight += '<td style="background-color:#EE799F;">' + currentWPTicket + '</td>'
					} else {
						htmlListQPRight += '<td>' + currentWPTicket + '</td>'
					}
				} else {
					htmlListQPRight += '<td>/</td>'
				}

				htmlListQPRight += '</tr>'
			}
			$("#divCreate").empty();
			$("#divCreate").append(htmlListQPRight);
			var postData = {};
			postData.red = ContentScript.redData;
			postData.blue = ContentScript.blueData;
			ContentScript.setSessionValue(postData);
		}, 2000);

		self.setInterval(function() {
			var DiscountW = $("#DiscountW").val();
			var Limit = $("#Limit").val();
			
			var hourseCount = ContentScript.GetWinTransData();
			if(hourseCount.length == 0) {
				return;
			}

			var htmlListW = '<table class="bettable" style="width:400px">';
			htmlListW += '<tr style="height:24px"><th style="width:200px">马</th><th style="width:180px">票数</th></tr>';
			var ticketList=[];
			for(var i = 1; i < 15; i++) {
				var ticket = ContentScript.getWTicketCount(hourseCount, "W", i,DiscountW,Limit);
				ticketList.push({"hourse":i,"ticket":ticket})
			}
			console.log('w');
			console.log(hourseCount);
			console.log(ticketList);

			ticketList.sort( function(a, b){   
				return parseInt(a["ticket" ]) < parseInt(b["ticket" ]) ? 1 : parseInt(a[ "ticket"]) == parseInt(b[ "ticket" ]) ? 0 : -1;   
			});

			$(ticketList).each(function(item){
				var temp = $(this)[0];
				htmlListW += '<tr style="height:24px">'
				htmlListW += '<td style="height:24px">'+temp.hourse+'</td>';
				htmlListW += '<td style="height:24px">'+temp.ticket+'</td></tr>';
			});
			htmlListW+="</table>";
			$("#divCreateW").empty();
			$("#divCreateW").append(htmlListW);

			var DiscountWP = $("#DiscountWP").val();
			var LimitWP = $("#LimitWP").val();
			var LimitWPS = $("#LimitWPS").val();
			
			var htmlListWP = '<table class="bettable" style="width:400px">';
			htmlListWP += '<tr style="height:24px"><th style="width:200px">马</th><th style="width:180px">票数</th></tr>';
			var ticketListWP=[];
			for(var i = 1; i < 15; i++) {
				var ticketWP = ContentScript.getWPTicketCount(hourseCount, "WP", i,DiscountWP,LimitWP,LimitWPS);
				ticketListWP.push({"hourse":i,"ticket":ticketWP})
			}
			console.log('wp');
			console.log(ticketListWP);
			ticketListWP.sort( function(a, b){   
				return parseInt(a["ticket" ]) < parseInt(b["ticket" ]) ? 1 : parseInt(a[ "ticket"]) == parseInt(b[ "ticket" ]) ? 0 : -1;   
			});

			$(ticketListWP).each(function(item){
				var temp = $(this)[0];
				htmlListWP += '<tr style="height:24px">'
				htmlListWP += '<td style="height:24px">'+temp.hourse+'</td>';
				htmlListWP += '<td style="height:24px">'+temp.ticket+'</td></tr>';
			});
			htmlListWP+="</table>";
			$("#divCreateWP").empty();
			$("#divCreateWP").append(htmlListWP);
			console.log(htmlListWP);


			var DiscountP = $("#DiscountP").val();
			var LimitP = $("#LimitP").val();
			var htmlListP = '<table class="bettable" style="width:400px">';
			htmlListP += '<tr style="height:24px"><th style="width:200px">马</th><th style="width:180px">票数</th></tr>';
			var ticketListP=[];
			for(var i = 1; i < 15; i++) {
				var ticketP = ContentScript.getPTicketCount(hourseCount, "P", i,DiscountP,LimitP);
				ticketListP.push({"hourse":i,"ticket":ticketP})
			}

			console.log('p');
			console.log(ticketListP);

			ticketListP.sort( function(a, b){   
				return parseInt(a["ticket" ]) < parseInt(b["ticket" ]) ? 1 : parseInt(a[ "ticket"]) == parseInt(b[ "ticket" ]) ? 0 : -1;   
			});

			$(ticketListP).each(function(item){
				var temp = $(this)[0];
				htmlListP += '<tr style="height:24px">'
				htmlListP += '<td style="height:24px">'+temp.hourse+'</td>';
				htmlListP += '<td style="height:24px">'+temp.ticket+'</td></tr>';
			});
			htmlListP+="</table>";
			console.log(htmlListP);
			$("#divCreateP").empty();
			$("#divCreateP").append(htmlListP);
		},2000);
	},
	arrayContain: function(arr, indexValue) {
		var isExists = false;
		$(arr).each(function() {
			if($(this)[0] == indexValue) {
				isExists = true;
			}
		});
		return isExists
	},
	allOnitEvent: function() {
		//创建用户界面
		ContentScript.CreateHtmlElement();
		//绑定拖拽事件
		ContentScript.HtmlAddDragEvent($("#drag"));
		ContentScript.HtmlAddDragEvent($("#dragQ"));
		ContentScript.HtmlAddDragEvent($("#dragQP"));
		$("#daoqitime").text(ContentScript.DaoQiTime);

		$("#btnStart").bind("click", function() {
			$("#btnStart").hide();
			$("#btnEnd").show();

			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscount").val();
				var end = $("#endDiscount").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultFirst = ContentScript.GetTransactionData('vrtFC_2', 'FC_DATA_2', start, end);
				var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', 70, 100);
				//getQPPLData
				var htmlList = '<table class="bettable" style="width:400px">';
				htmlList += '<tr><th width="20%">马</th><th>赔率</th><th width="34%">票数$</th><th width="12%">%</th><th>位置Q%</th><th width="18%">限额</th></tr>';
				var hourseCount = [];
				var postData = ContentScript.getSessionValue();
				console.log(postData);
				console.log(resultFirst);
				$(resultFirst).each(function(index) {
					var hourseM = $(this)[0].hourse.split('-');
					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlList += '<tr style="line-height: 30px;">';

					var hourse1, hourse2
					if($(this)[0].hourse.indexOf("(") < 0) {
						hourse1 = $(this)[0].hourse.split("-")[0];
						hourse2 = $(this)[0].hourse.split("-")[1];
					} else {
						hourse1 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
						hourse2 = $(this)[0].hourse.replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
					}

					console.log(hourse1);
					console.log(hourse2);

					//console.log(ContentScript.arrayContain(postData.red, parseInt(hourse1)));

					var hasHourse1 = false;
					var hasHourse2 = false;
					var hourse1String = ""; // 8EE5EE
					var hourse2String = "";
					if(postData != null && postData != undefined && postData.red != null && postData.red != undefined && postData.red.length > 0) {
						if(ContentScript.arrayContain(postData.red, parseInt(hourse1))) {
							hourse1String = "<font color='red'><b>" + hourse1 + "</b></font>"
							hasHourse1 = true;
						}
						if(ContentScript.arrayContain(postData.red, parseInt(hourse2))) {
							hourse2String = "<font color='red'><b>" + hourse2 + "</b></font>"
							hasHourse2 = true;
						}
					}
					if(postData != null && postData != undefined && postData.blue != null && postData.blue != undefined && postData.blue.length > 0) {
						if(ContentScript.arrayContain(postData.blue, parseInt(hourse1))) {
							hourse1String = "<font color='blue'><b>" + hourse1 + "</b></font>"
							hasHourse1 = true;
						}
						if(ContentScript.arrayContain(postData.blue, parseInt(hourse2))) {
							hourse2String = "<font color='blue'><b>" + hourse2 + "</b></font>"
							hasHourse2 = true;
						}
					}

					if(!hasHourse1) {
						hourse1String = "<font>" + hourse1 + "</font>"
					}

					if(!hasHourse2) {
						hourse2String = "<font>" + hourse2 + "</font>"
					}

					var wzQP="";
					if(resultSecond!=null && resultSecond!=undefined){
						try{
							$(resultSecond).each(function(index){
								var item = $(this)[0];
								if(wzQP=="" && item.hourse==("("+hourse1+"-"+hourse2+")")){
									wzQP = item.discount;
								}
							});
						}catch(ex){
							wzQP ="";
						}
					}

					htmlList += '<td>' + hourse1String + '-' + hourse2String + '</td>';
					htmlList += '<td>' + ContentScript.getQPPLData(hourse1, hourse2) + '</td>';
					htmlList += '<td>' + $(this)[0].tickets + '</td>';
					htmlList += '<td>' + $(this)[0].discount + '</td>';
					try{
						if(parseInt(wzQP)>=89){
							htmlList += '<td style="background-color:#8EE5EE;">' + wzQP + '</td>';
						}else{
							htmlList += '<td>' + wzQP + '</td>';
						}
					}catch(ex){
						htmlList += '<td>' + wzQP + '</td>';
					}
					htmlList += '<td>' + $(this)[0].limit + '</td>';
					htmlList += '</tr>';
				});

				htmlList += '</table><br/>';
				console.log(htmlList);
				$("#divCreateQLeft").empty();
				$("#divCreateQLeft").append(htmlList);

				var htmlListQRight = '<table class="bettable" style="width:150px">';
				htmlListQRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQ']:checked").val() == "1") {
					hourseCount.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount).each(function(index) {
					htmlListQRight += '<tr style="line-height: 30px;">';
					htmlListQRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQRight += '</tr>';
				});
				$("#divCreateQRight").empty();
				$("#divCreateQRight").append(htmlListQRight);
			}, 1000);
		});
		$("#btnEnd").bind("click", function() {
			if(ContentScript.timerSearch != null) {
				clearInterval(ContentScript.timerSearch);
			}
			$("#btnStart").show();
			$("#btnEnd").hide();
		});

		$("#btnStartQP").bind("click", function() {
			$("#btnStartQP").hide();
			$("#btnEndQP").show();

			ContentScript.timerSearch = self.setInterval(function() {
				var start = $("#startDiscountQP").val();
				var end = $("#endDiscountQP").val();
				start = parseFloat(start);
				end = parseFloat(end);
				var resultSecond = ContentScript.GetTransactionData('vrtFC_4', 'FC_DATA_4', start, end);

				var hourseCount1 = [];

				var htmlListQP = '<table class="bettable" style="width:400px">';
				htmlListQP += '<tr><th width="20%">马</th><th width="34%">票数$</th><th width="12%">%</th><th width="18%">限额</th></tr>';
				$(resultSecond).each(function(index) {
					var hourseM = $(this)[0].hourse.replace("(", "").replace(")", "").split('-');

					var isExists1 = false;
					var isExists2 = false;

					$(hourseCount1).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == hourseM[0]) {
							isExists1 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
						if(temp.hourse == hourseM[1]) {
							isExists2 = true;
							$(this)[0].count = $(this)[0].count + 1;
						}
					});
					if(!isExists1) {
						hourseCount1.push({
							"hourse": hourseM[0],
							"count": 1
						});
					}
					if(!isExists2) {
						hourseCount1.push({
							"hourse": hourseM[1],
							"count": 1
						});
					}

					htmlListQP += '<tr style="line-height: 30px;">';
					htmlListQP += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQP += '<td>' + $(this)[0].tickets + '</td>';
					htmlListQP += '<td>' + $(this)[0].discount + '</td>';
					htmlListQP += '<td>' + $(this)[0].limit + '</td>';
					htmlListQP += '</tr>';
				});
				htmlListQP += '</table>';
				$("#divCreateQPLeft").empty();
				$("#divCreateQPLeft").append(htmlListQP);

				var htmlListQPRight = '<table class="bettable" style="width:150px">';
				htmlListQPRight += '<tr><th width="20%">马</th><th width="34%">数量</th>';

				if($("input[id='chkQP']:checked").val() == "1") {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["hourse"]) > parseInt(b["hourse"]) ? 1 : parseInt(a["hourse"]) == parseInt(b["hourse"]) ? 0 : -1;
					});
				} else {
					hourseCount1.sort(function(a, b) {
						return parseInt(a["count"]) < parseInt(b["count"]) ? 1 : parseInt(a["count"]) == parseInt(b["count"]) ? 0 : -1;
					});
				}

				$(hourseCount1).each(function(index) {
					htmlListQPRight += '<tr style="line-height: 30px;">';
					htmlListQPRight += '<td>' + $(this)[0].hourse + '</td>';
					htmlListQPRight += '<td>' + $(this)[0].count + '</td>';
					htmlListQPRight += '</tr>';
				});
				$("#divCreateQPRight").empty();
				$("#divCreateQPRight").append(htmlListQPRight);

			}, 1000);
		});
		$("#btnEndQP").bind("click", function() {
			if(ContentScript.timerSearchQP != null) {
				clearInterval(ContentScript.timerSearchQP);
			}
			$("#btnStartQP").show();
			$("#btnEndQP").hide();
		});
	},
	GetFliterData: function(result, start, end) {
		var limitResult = [];
		//将符合条件的跑马的最小值显示出来
		$(result).each(function(index) {
			var temp = $(this)[0];
			var isNew = false;
			if(parseFloat(temp.discount) >= start && parseFloat(temp.discount) <= end) {
				$(limitResult).each(function(item) {
					var tp = $(this)[0];
					if(tp.hourse == temp.hourse) {
						isNew = true;
					}
					if(tp.hourse == temp.hourse && temp.discount < tp.discount) {
						$(this)[0].tickets = temp.tickets;
						$(this)[0].discount = temp.discount;
						$(this)[0].limit = temp.limit;
					}
				});
				if(!isNew) {
					limitResult.push(temp);
				}
			}
		});
		return limitResult;
	},
	getQPPLData: function(x, y) {
		try {
			var len = 0;
			if(parseInt(x) > 7 && parseInt(y) > 8) {
				len = 13 * (y - 8) + (x - 7);
			} else {
				len = 13 * (x - 1) + (y - 1);
			}
			var result = $($("#frmTOTE").find("td")[len - 1]).text();
			if(result == "" || result == "SCR" || isNaN(result)) {
				return 0;
			}
			return parseFloat(result);
		} catch(e) {
			return 0;
		}
	},
	getWPPLDataList: function() {
		var result = [];
		$($("#tttbl td").find(".style22")).each(function(index) {
			var item = {};
			item.pl1 = parseFloat($(this).parent().prev().text());
			item.pl2 = parseFloat($(this).parent().next().text());
			item.cc = $(this).text();
			item.type = "WP";
			result.push(item);
		});
		if(result.length == 0) {
			$($("#tttbl td").find(".style21")).each(function(index) {
				var item = {};
				item.pl1 = parseFloat($(this).parent().prev().text());
				item.pl2 = parseFloat($(this).parent().next().text());
				item.cc = $(this).text();
				item.type = "WP";
				result.push(item);
			});
		}
		return result;
	},
	getWPPLByHourse: function(data, hourse) {
		var peiLv = 0;
		$(data).each(function(item) {
			var temp = $(this)[0];
			if(parseInt(temp.cc) == parseInt(hourse)) {
				peiLv = temp.pl1;
				return;
			}
		});
		return peiLv;
	},
	getIframeInnerHTML(frame, element) {
		try {
			return document.getElementById(frame).contentWindow.document.getElementById(element).innerHTML;
		} catch(e) {
			return document.getElementById(element).innerHTML;
		}
	},
	GetWinTransData: function() {
		var limitsStart = $("#limitsStart").val();
		var limitsEnd = $("#limitsEnd").val();
		//1	1	9	9	83	300/100
		var textq = ContentScript.getIframeInnerHTML('vrtEAT', 'EAT_DATA');
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var textList = textq.split(";");
		var result = [];
		for(var i = 0; i < textList.length; i++) {
			if(textList[i] == "") {
				continue;
			}
			var tempArray = textList[i].split("$");
			var isExists = false;
			var id = tempArray[0] + tempArray[1] + tempArray[2] + tempArray[3];
			var item = null;
			if(tempArray[5] == limitsStart + "/0") {
				item = {
					"id": id,
					"type": "W",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == "0/" + limitsEnd) {
				item = {
					"id": id,
					"type": "P",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}
			if(tempArray[5] == limitsStart + "/" + limitsEnd) {
				item = {
					"id": id,
					"type": "WP",
					"matches": tempArray[0],
					"hourse": tempArray[1],
					"ticketsw": parseInt(tempArray[2]),
					"ticketsp": parseInt(tempArray[3]),
					"discount": parseFloat(tempArray[4]),
					"limit": tempArray[5]
				}
			}

			if(item != null) {
				$(result).each(function(index) {
					var temp = $(this)[0];
					if(item != null && temp.hourse == tempArray[1] && temp.type == item.type) {
						isExists = true;
						if(temp.discount == parseFloat(tempArray[3])) {
							$(this)[0].ticketsw = parseInt($(this)[0].ticketsw) + parseInt(tempArray[2]);
							$(this)[0].ticketsp = parseInt($(this)[0].ticketsp) + parseInt(tempArray[3]);
						}
						return;
					}
				});
			}
			if(!isExists && item != null) {
				result.push(item);
			}
		}
		return result;
	},
	GetTransactionData: function(fc, data, start, end) {
		var textq = ContentScript.getIframeInnerHTML(fc, data);
		console.log(11);
		textq = textq.replace(/\n/g, ";");
		textq = textq.replace(/\s/g, "$");
		var result = [];
		var fliterHourse = [];
		var textList = textq.split(";");
		console.log(textList.length);
		for(var i = 0; i < textList.length; i++) {
			if(textList[i] == "") {} else {
				var tempArray = textList[i].split("$");
				var paramValue = 700;
				if(tempArray[1].indexOf("(") >= 0) {
					paramValue = 400;
				}
				var id = tempArray[0] + tempArray[1] + tempArray[2];
				var hourse1, hourse2;
				if(tempArray[1].indexOf("(") < 0) {
					hourse1 = tempArray[1].split("-")[0];
					hourse2 = tempArray[1].split("-")[1];
				} else {
					hourse1 = tempArray[1].replace(/\(/g, "").replace(/\)/g, "").split("-")[0];
					hourse2 = tempArray[1].replace(/\(/g, "").replace(/\)/g, "").split("-")[1];
				}

				var minPL = $("#minPL").val();
				var maxPL = $("#maxPL").val();
				var currentPL = ContentScript.getQPPLData(hourse1, hourse2);
				if((!fliterHourse.contains(tempArray[1])) && parseFloat(tempArray[3]) >= start && parseFloat(tempArray[3]) <= end && parseFloat(tempArray[4]) == paramValue) {
					var isExists = false;
					item = {
						"id": id,
						"type": "WQ",
						"matches": tempArray[0],
						"hourse": tempArray[1],
						"tickets": tempArray[2],
						"discount": parseFloat(tempArray[3]),
						"limit": tempArray[4]
					}
					$(result).each(function(index) {
						var temp = $(this)[0];
						if(temp.hourse == tempArray[1]) {
							isExists = true;
							if(temp.discount > parseFloat(tempArray[3])) {
								$(this)[0].tickets = tempArray[2];
								$(this)[0].discount = parseFloat(tempArray[3]);
								$(this)[0].limit = tempArray[4];
							}
							return;
						}
					});
					if(!isExists) {
						if(minPL <= currentPL && currentPL <= maxPL) {
							result.push(item);
						}
					}
				}
				if(parseFloat(tempArray[3]) < start && parseFloat(tempArray[4]) == paramValue) {
					fliterHourse.push(tempArray[1]);
				}
			}

		}
		return result;
	},
	CreateHtmlElement: function() {
		var htmlList = '<div id="drag" style="background:white;width: 460px; height: 180px; position: absolute; border: solid 1px #ccc; float: right; z-index: 100;right: 0;top: 0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">当前账户:' + $.trim($("#username").text()) + ' &nbsp; 到期时间<span id="daoqitime"></span><input id="minPL" type="number" step="1" style="width: 40px;" size="4" value="0" />-<input id="maxPL" type="number" step="1" style="width: 40px;" size="4" value="70" /></h3>';
		htmlList += '<div style="float: left;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />-';
		htmlList += '<input id="endDiscount" type="number" step="1" style="width: 40px;" size="4" value="80" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStart" value="连赢Q开始" />';
		htmlList += '<input type="button" id="btnEnd" value="连赢Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '<div style="float: right;"><table style="width:200">';
		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input id="startDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="95" />-';
		htmlList += '<input id="endDiscountQP" type="number" step="1" style="width: 40px;" size="4" value="100" />';
		htmlList += '</td></tr>';

		htmlList += '<tr style="line-height: 30px;"><td>';
		htmlList += '<input type="button" id="btnStartQP" value="位置Q开始" />';
		htmlList += '<input type="button" id="btnEndQP" value="位置Q停止" />';
		htmlList += '</td></tr>';
		htmlList += '</table> </div>';
		htmlList += '</div>';

		htmlList += '<div id="dragQ" style="background:white;width: 660px; height: 600px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right: 400;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">连赢Q统计 &nbsp;<input type="checkbox" id="chkQ" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQRight" style="float: right;"></div>'
		htmlList += '</div>';

		htmlList += '<div id="dragQP" style="background:white;width: 660px; height: 680px; position: absolute; border: solid 1px #ccc; float: left; z-index: 100;right:370;top:0;min-height: 180px;overflow-y: auto;max-height: 600px;">';
		htmlList += '<h3 style="color: #fff; background: none repeat scroll 0 0 rgba(16, 90, 31, 0.7); color: #FFFFFF; height: 30px; line-height: 30px; margin: 0;">位置Q统计 &nbsp;<input type="checkbox" id="chkQP" value="1" />按马次排序</h3>';
		htmlList += '<div id="divCreateQPLeft" style="float: left;"></div>'
		htmlList += '<div id="divCreateQPRight" style="float: right;"></div>'
		htmlList += '</div>';

		$("body").append(htmlList);
	},

	HtmlAddDragEvent: function(obj) {
		var _move = false; //移动标记  
		var _x, _y; //鼠标离控件左上角的相对位置  
		obj.click(function() {
			//alert("click");//点击（松开后触发）  
		}).mousedown(function(e) {
			_move = true;
			_x = e.pageX - parseInt(obj.css("left"));
			_y = e.pageY - parseInt(obj.css("top"));
		});
		$(document).mousemove(function(e) {
			if(_move) {
				var x = e.pageX - _x; //移动时根据鼠标位置计算控件左上角的绝对位置  
				var y = e.pageY - _y;
				obj.css({
					top: y,
					left: x
				}); //控件新位置  
			}
		}).mouseup(function() {
			_move = false;
		});
	}
}
var host = window.location.href;
if(host.indexOf("Q.jsp") >= 0) {
	ContentScript.onInit();
}
if(host.indexOf("playerhk.jsp") >= 0) {
	ContentScript.onPlayerInit();
}
	]]> 
	</JSCode>
  </JSFile>
</JSFileList>

